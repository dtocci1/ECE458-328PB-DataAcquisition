
DataAcquisition.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000aa  00800100  00000c2e  00000cc2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c2e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  008001aa  008001aa  00000d6c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000d6c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000dc8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000058  00000000  00000000  00000e08  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000cd1  00000000  00000000  00000e60  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000aa3  00000000  00000000  00001b31  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000426  00000000  00000000  000025d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000c0  00000000  00000000  000029fc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005d6  00000000  00000000  00002abc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000001f7  00000000  00000000  00003092  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000048  00000000  00000000  00003289  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
   4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
   8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
   c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  10:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  14:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  18:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  1c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  20:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  24:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  28:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  2c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  30:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  34:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  38:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  3c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  40:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  44:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  48:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  4c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  50:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  54:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  58:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  5c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  60:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  64:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  68:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  6c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  70:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  74:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  78:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  7c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  80:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  84:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  88:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  8c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  90:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  94:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  98:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  9c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  ac:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  b0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d8 e0       	ldi	r29, 0x08	; 8
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61

000000c0 <__do_copy_data>:
  c0:	11 e0       	ldi	r17, 0x01	; 1
  c2:	a0 e0       	ldi	r26, 0x00	; 0
  c4:	b1 e0       	ldi	r27, 0x01	; 1
  c6:	ee e2       	ldi	r30, 0x2E	; 46
  c8:	fc e0       	ldi	r31, 0x0C	; 12
  ca:	02 c0       	rjmp	.+4      	; 0xd0 <__do_copy_data+0x10>
  cc:	05 90       	lpm	r0, Z+
  ce:	0d 92       	st	X+, r0
  d0:	aa 3a       	cpi	r26, 0xAA	; 170
  d2:	b1 07       	cpc	r27, r17
  d4:	d9 f7       	brne	.-10     	; 0xcc <__do_copy_data+0xc>

000000d6 <__do_clear_bss>:
  d6:	21 e0       	ldi	r18, 0x01	; 1
  d8:	aa ea       	ldi	r26, 0xAA	; 170
  da:	b1 e0       	ldi	r27, 0x01	; 1
  dc:	01 c0       	rjmp	.+2      	; 0xe0 <.do_clear_bss_start>

000000de <.do_clear_bss_loop>:
  de:	1d 92       	st	X+, r1

000000e0 <.do_clear_bss_start>:
  e0:	a0 3b       	cpi	r26, 0xB0	; 176
  e2:	b2 07       	cpc	r27, r18
  e4:	e1 f7       	brne	.-8      	; 0xde <.do_clear_bss_loop>
  e6:	0e 94 0b 01 	call	0x216	; 0x216 <main>
  ea:	0c 94 15 06 	jmp	0xc2a	; 0xc2a <_exit>

000000ee <__bad_interrupt>:
  ee:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000f2 <USART0SendByte>:
	//enable transmission and reception
	UCSR0B |= (1<<RXEN0)|(1<<TXEN0);
}

int USART0SendByte(char u8Data, FILE *stream)
{
  f2:	cf 93       	push	r28
  f4:	c8 2f       	mov	r28, r24
	if(u8Data == '\n')
  f6:	8a 30       	cpi	r24, 0x0A	; 10
  f8:	19 f4       	brne	.+6      	; 0x100 <USART0SendByte+0xe>
	{
		USART0SendByte('\r', stream);
  fa:	8d e0       	ldi	r24, 0x0D	; 13
  fc:	0e 94 79 00 	call	0xf2	; 0xf2 <USART0SendByte>
	}
	//wait while previous byte is completed
	while(!(UCSR0A&(1<<UDRE0))){};
 100:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 104:	85 ff       	sbrs	r24, 5
 106:	fc cf       	rjmp	.-8      	; 0x100 <USART0SendByte+0xe>
	// Transmit data
	UDR0 = u8Data;
 108:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
	return 0;
}
 10c:	80 e0       	ldi	r24, 0x00	; 0
 10e:	90 e0       	ldi	r25, 0x00	; 0
 110:	cf 91       	pop	r28
 112:	08 95       	ret

00000114 <returnPressure>:
#define VREF 5

float returnPressure(uint16_t pressure)
{
	float conversion;
	conversion = ((((5 * ((double)pressure / 1024)) - 0.5) * 25.3815) + 12.422) * 1000;// * 25.3815) - 0.6351236) * 1000; // convert to 10-bit value to Volts, then multiply by 23.3815 (PSI/V) for pressure
 114:	bc 01       	movw	r22, r24
 116:	80 e0       	ldi	r24, 0x00	; 0
 118:	90 e0       	ldi	r25, 0x00	; 0
 11a:	0e 94 0c 02 	call	0x418	; 0x418 <__floatunsisf>
 11e:	20 e0       	ldi	r18, 0x00	; 0
 120:	30 e0       	ldi	r19, 0x00	; 0
 122:	40 e8       	ldi	r20, 0x80	; 128
 124:	5a e3       	ldi	r21, 0x3A	; 58
 126:	0e 94 9a 02 	call	0x534	; 0x534 <__mulsf3>
 12a:	20 e0       	ldi	r18, 0x00	; 0
 12c:	30 e0       	ldi	r19, 0x00	; 0
 12e:	40 ea       	ldi	r20, 0xA0	; 160
 130:	50 e4       	ldi	r21, 0x40	; 64
 132:	0e 94 9a 02 	call	0x534	; 0x534 <__mulsf3>
 136:	20 e0       	ldi	r18, 0x00	; 0
 138:	30 e0       	ldi	r19, 0x00	; 0
 13a:	40 e0       	ldi	r20, 0x00	; 0
 13c:	5f e3       	ldi	r21, 0x3F	; 63
 13e:	0e 94 69 01 	call	0x2d2	; 0x2d2 <__subsf3>
 142:	20 e5       	ldi	r18, 0x50	; 80
 144:	3d e0       	ldi	r19, 0x0D	; 13
 146:	4b ec       	ldi	r20, 0xCB	; 203
 148:	51 e4       	ldi	r21, 0x41	; 65
 14a:	0e 94 9a 02 	call	0x534	; 0x534 <__mulsf3>
 14e:	23 e8       	ldi	r18, 0x83	; 131
 150:	30 ec       	ldi	r19, 0xC0	; 192
 152:	46 e4       	ldi	r20, 0x46	; 70
 154:	51 e4       	ldi	r21, 0x41	; 65
 156:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <__addsf3>
 15a:	20 e0       	ldi	r18, 0x00	; 0
 15c:	30 e0       	ldi	r19, 0x00	; 0
 15e:	4a e7       	ldi	r20, 0x7A	; 122
 160:	54 e4       	ldi	r21, 0x44	; 68
 162:	0e 94 9a 02 	call	0x534	; 0x534 <__mulsf3>
	return conversion;
}
 166:	08 95       	ret

00000168 <returnTemperature>:

float returnTemperature(uint16_t resistance) // requires compensation
{
	float conversion;
	conversion = 0.260075107866203 * resistance - 260.068512926113;
 168:	bc 01       	movw	r22, r24
 16a:	80 e0       	ldi	r24, 0x00	; 0
 16c:	90 e0       	ldi	r25, 0x00	; 0
 16e:	0e 94 0c 02 	call	0x418	; 0x418 <__floatunsisf>
 172:	21 e9       	ldi	r18, 0x91	; 145
 174:	38 e2       	ldi	r19, 0x28	; 40
 176:	45 e8       	ldi	r20, 0x85	; 133
 178:	5e e3       	ldi	r21, 0x3E	; 62
 17a:	0e 94 9a 02 	call	0x534	; 0x534 <__mulsf3>
 17e:	25 ec       	ldi	r18, 0xC5	; 197
 180:	38 e0       	ldi	r19, 0x08	; 8
 182:	42 e8       	ldi	r20, 0x82	; 130
 184:	53 e4       	ldi	r21, 0x43	; 67
 186:	0e 94 69 01 	call	0x2d2	; 0x2d2 <__subsf3>
	return conversion;
}
 18a:	08 95       	ret

0000018c <returnMoisture>:
	// Moisture sensor measures from 0 to 3.085V max based on water level
	// In theory, more voltage indicates more water is hitting the sensor
	// This needs to be validated in testing.
	// If statement need to be adjusted, reaches level 5 at half way on sensor somehow
	float conversion;
	conversion = ((double)moisture/1024) * 5000; // convert to voltage (0-5V)
 18c:	bc 01       	movw	r22, r24
 18e:	80 e0       	ldi	r24, 0x00	; 0
 190:	90 e0       	ldi	r25, 0x00	; 0
 192:	0e 94 0c 02 	call	0x418	; 0x418 <__floatunsisf>
 196:	20 e0       	ldi	r18, 0x00	; 0
 198:	30 e0       	ldi	r19, 0x00	; 0
 19a:	40 e8       	ldi	r20, 0x80	; 128
 19c:	5a e3       	ldi	r21, 0x3A	; 58
 19e:	0e 94 9a 02 	call	0x534	; 0x534 <__mulsf3>
 1a2:	20 e0       	ldi	r18, 0x00	; 0
 1a4:	30 e4       	ldi	r19, 0x40	; 64
 1a6:	4c e9       	ldi	r20, 0x9C	; 156
 1a8:	55 e4       	ldi	r21, 0x45	; 69
 1aa:	0e 94 9a 02 	call	0x534	; 0x534 <__mulsf3>
	return conversion;
 1ae:	0e 94 d6 01 	call	0x3ac	; 0x3ac <__fixsfsi>
	else if (conversion < 2.4)
		return 4;
	else
		return 5;
		
}
 1b2:	cb 01       	movw	r24, r22
 1b4:	08 95       	ret

000001b6 <USART0Init>:

void USART0Init(void)
{
	// Set baud rate
	UBRR0H = (uint8_t)(UBRR_VALUE>>8);
 1b6:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
	UBRR0L = (uint8_t)UBRR_VALUE;
 1ba:	87 e6       	ldi	r24, 0x67	; 103
 1bc:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
	// Set frame format to 8 data bits, no parity, 1 stop bit
	UCSR0C |= (1<<UCSZ01)|(1<<UCSZ00);
 1c0:	e2 ec       	ldi	r30, 0xC2	; 194
 1c2:	f0 e0       	ldi	r31, 0x00	; 0
 1c4:	80 81       	ld	r24, Z
 1c6:	86 60       	ori	r24, 0x06	; 6
 1c8:	80 83       	st	Z, r24
	//enable transmission and reception
	UCSR0B |= (1<<RXEN0)|(1<<TXEN0);
 1ca:	e1 ec       	ldi	r30, 0xC1	; 193
 1cc:	f0 e0       	ldi	r31, 0x00	; 0
 1ce:	80 81       	ld	r24, Z
 1d0:	88 61       	ori	r24, 0x18	; 24
 1d2:	80 83       	st	Z, r24
 1d4:	08 95       	ret

000001d6 <InitADC>:
//set stream pointer
FILE usart0_str = FDEV_SETUP_STREAM(USART0SendByte, NULL, _FDEV_SETUP_WRITE);
void InitADC()
{
    // Select Vref = AVcc
    ADMUX |= (1<<REFS0);
 1d6:	ec e7       	ldi	r30, 0x7C	; 124
 1d8:	f0 e0       	ldi	r31, 0x00	; 0
 1da:	80 81       	ld	r24, Z
 1dc:	80 64       	ori	r24, 0x40	; 64
 1de:	80 83       	st	Z, r24
    //set prescaller to 128 and enable ADC  
    ADCSRA |= (1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0)|(1<<ADEN);     
 1e0:	ea e7       	ldi	r30, 0x7A	; 122
 1e2:	f0 e0       	ldi	r31, 0x00	; 0
 1e4:	80 81       	ld	r24, Z
 1e6:	87 68       	ori	r24, 0x87	; 135
 1e8:	80 83       	st	Z, r24
 1ea:	08 95       	ret

000001ec <ReadADC>:
}

uint16_t ReadADC(uint8_t ADCchannel)
{
    //select ADC channel with safety mask
    ADMUX = (ADMUX & 0xF0) | (ADCchannel & 0x0F); 
 1ec:	ec e7       	ldi	r30, 0x7C	; 124
 1ee:	f0 e0       	ldi	r31, 0x00	; 0
 1f0:	90 81       	ld	r25, Z
 1f2:	90 7f       	andi	r25, 0xF0	; 240
 1f4:	8f 70       	andi	r24, 0x0F	; 15
 1f6:	89 2b       	or	r24, r25
 1f8:	80 83       	st	Z, r24
    //single conversion mode
    ADCSRA |= (1<<ADSC);
 1fa:	ea e7       	ldi	r30, 0x7A	; 122
 1fc:	f0 e0       	ldi	r31, 0x00	; 0
 1fe:	80 81       	ld	r24, Z
 200:	80 64       	ori	r24, 0x40	; 64
 202:	80 83       	st	Z, r24
    // wait until ADC conversion is complete
    while( ADCSRA & (1<<ADSC) );
 204:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
 208:	86 fd       	sbrc	r24, 6
 20a:	fc cf       	rjmp	.-8      	; 0x204 <ReadADC+0x18>
   return ADC;
 20c:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
 210:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
}
 214:	08 95       	ret

00000216 <main>:
{
	double rtdVal, presVal, moisVal, tmp;
	uint16_t tempVal;
	uint16_t curTime = 0;
	//initialize ADC
	InitADC();
 216:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <InitADC>
	//Initialize USART0
	USART0Init();
 21a:	0e 94 db 00 	call	0x1b6	; 0x1b6 <USART0Init>
	//assign our stream to standard I/O streams
	stdout=&usart0_str;
 21e:	80 e0       	ldi	r24, 0x00	; 0
 220:	91 e0       	ldi	r25, 0x01	; 1
 222:	90 93 ad 01 	sts	0x01AD, r25	; 0x8001ad <__data_end+0x3>
 226:	80 93 ac 01 	sts	0x01AC, r24	; 0x8001ac <__data_end+0x2>
	printf("Time (min)\tTemperature (C)\tPressure (mPSI)\tMoisture (V)\n"); // 15 char columns with tab spacing
 22a:	8e e0       	ldi	r24, 0x0E	; 14
 22c:	91 e0       	ldi	r25, 0x01	; 1
 22e:	0e 94 1d 03 	call	0x63a	; 0x63a <puts>
	printf("------------------------------------------------------------------------------\n");
 232:	86 e4       	ldi	r24, 0x46	; 70
 234:	91 e0       	ldi	r25, 0x01	; 1
 236:	0e 94 1d 03 	call	0x63a	; 0x63a <puts>

int main()
{
	double rtdVal, presVal, moisVal, tmp;
	uint16_t tempVal;
	uint16_t curTime = 0;
 23a:	c0 e0       	ldi	r28, 0x00	; 0
 23c:	d0 e0       	ldi	r29, 0x00	; 0
	printf("Time (min)\tTemperature (C)\tPressure (mPSI)\tMoisture (V)\n"); // 15 char columns with tab spacing
	printf("------------------------------------------------------------------------------\n");
	while(1)
	{
		// Calculate temperature
		rtdVal = 2.042990654 * ReadADC(0); // translate voltage change to resistance
 23e:	80 e0       	ldi	r24, 0x00	; 0
 240:	0e 94 f6 00 	call	0x1ec	; 0x1ec <ReadADC>
 244:	bc 01       	movw	r22, r24
 246:	80 e0       	ldi	r24, 0x00	; 0
 248:	90 e0       	ldi	r25, 0x00	; 0
 24a:	0e 94 0c 02 	call	0x418	; 0x418 <__floatunsisf>
 24e:	2c e5       	ldi	r18, 0x5C	; 92
 250:	30 ec       	ldi	r19, 0xC0	; 192
 252:	42 e0       	ldi	r20, 0x02	; 2
 254:	50 e4       	ldi	r21, 0x40	; 64
 256:	0e 94 9a 02 	call	0x534	; 0x534 <__mulsf3>
		tempVal = returnTemperature(rtdVal); // Convert resistance to temperature via linear regression based on table
 25a:	0e 94 dd 01 	call	0x3ba	; 0x3ba <__fixunssfsi>
 25e:	cb 01       	movw	r24, r22
 260:	0e 94 b4 00 	call	0x168	; 0x168 <returnTemperature>
 264:	0e 94 dd 01 	call	0x3ba	; 0x3ba <__fixunssfsi>
 268:	16 2f       	mov	r17, r22
 26a:	07 2f       	mov	r16, r23
		
		// Calculate pressure
		presVal = returnPressure(ReadADC(1));
 26c:	81 e0       	ldi	r24, 0x01	; 1
 26e:	0e 94 f6 00 	call	0x1ec	; 0x1ec <ReadADC>
 272:	0e 94 8a 00 	call	0x114	; 0x114 <returnPressure>
 276:	6b 01       	movw	r12, r22
 278:	7c 01       	movw	r14, r24
		
		// Calculate moisture level
		// Level from 1 - 5: 1 being light mist, 5 being heavy rainfall
		moisVal = returnMoisture(ReadADC(2));
 27a:	82 e0       	ldi	r24, 0x02	; 2
 27c:	0e 94 f6 00 	call	0x1ec	; 0x1ec <ReadADC>
 280:	0e 94 c6 00 	call	0x18c	; 0x18c <returnMoisture>
	
		//printing value to terminal
		printf("%u\t%15u\t%15u\t%15u \n", curTime, (uint16_t)tempVal, (uint16_t)presVal, (uint16_t)moisVal);
 284:	9f 93       	push	r25
 286:	8f 93       	push	r24
 288:	c7 01       	movw	r24, r14
 28a:	b6 01       	movw	r22, r12
 28c:	0e 94 dd 01 	call	0x3ba	; 0x3ba <__fixunssfsi>
 290:	7f 93       	push	r23
 292:	6f 93       	push	r22
 294:	0f 93       	push	r16
 296:	1f 93       	push	r17
 298:	df 93       	push	r29
 29a:	cf 93       	push	r28
 29c:	85 e9       	ldi	r24, 0x95	; 149
 29e:	91 e0       	ldi	r25, 0x01	; 1
 2a0:	9f 93       	push	r25
 2a2:	8f 93       	push	r24
 2a4:	0e 94 07 03 	call	0x60e	; 0x60e <printf>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2a8:	8f ef       	ldi	r24, 0xFF	; 255
 2aa:	97 e6       	ldi	r25, 0x67	; 103
 2ac:	29 e8       	ldi	r18, 0x89	; 137
 2ae:	39 e0       	ldi	r19, 0x09	; 9
 2b0:	81 50       	subi	r24, 0x01	; 1
 2b2:	90 40       	sbci	r25, 0x00	; 0
 2b4:	20 40       	sbci	r18, 0x00	; 0
 2b6:	30 40       	sbci	r19, 0x00	; 0
 2b8:	d9 f7       	brne	.-10     	; 0x2b0 <main+0x9a>
 2ba:	00 c0       	rjmp	.+0      	; 0x2bc <main+0xa6>
 2bc:	00 00       	nop
		_delay_ms(60000); // this line dont do shit
		curTime += 1;
 2be:	21 96       	adiw	r28, 0x01	; 1
 2c0:	8d b7       	in	r24, 0x3d	; 61
 2c2:	9e b7       	in	r25, 0x3e	; 62
 2c4:	0a 96       	adiw	r24, 0x0a	; 10
 2c6:	0f b6       	in	r0, 0x3f	; 63
 2c8:	f8 94       	cli
 2ca:	9e bf       	out	0x3e, r25	; 62
 2cc:	0f be       	out	0x3f, r0	; 63
 2ce:	8d bf       	out	0x3d, r24	; 61
 2d0:	b6 cf       	rjmp	.-148    	; 0x23e <main+0x28>

000002d2 <__subsf3>:
 2d2:	50 58       	subi	r21, 0x80	; 128

000002d4 <__addsf3>:
 2d4:	bb 27       	eor	r27, r27
 2d6:	aa 27       	eor	r26, r26
 2d8:	0e 94 81 01 	call	0x302	; 0x302 <__addsf3x>
 2dc:	0c 94 60 02 	jmp	0x4c0	; 0x4c0 <__fp_round>
 2e0:	0e 94 52 02 	call	0x4a4	; 0x4a4 <__fp_pscA>
 2e4:	38 f0       	brcs	.+14     	; 0x2f4 <__addsf3+0x20>
 2e6:	0e 94 59 02 	call	0x4b2	; 0x4b2 <__fp_pscB>
 2ea:	20 f0       	brcs	.+8      	; 0x2f4 <__addsf3+0x20>
 2ec:	39 f4       	brne	.+14     	; 0x2fc <__addsf3+0x28>
 2ee:	9f 3f       	cpi	r25, 0xFF	; 255
 2f0:	19 f4       	brne	.+6      	; 0x2f8 <__addsf3+0x24>
 2f2:	26 f4       	brtc	.+8      	; 0x2fc <__addsf3+0x28>
 2f4:	0c 94 4f 02 	jmp	0x49e	; 0x49e <__fp_nan>
 2f8:	0e f4       	brtc	.+2      	; 0x2fc <__addsf3+0x28>
 2fa:	e0 95       	com	r30
 2fc:	e7 fb       	bst	r30, 7
 2fe:	0c 94 49 02 	jmp	0x492	; 0x492 <__fp_inf>

00000302 <__addsf3x>:
 302:	e9 2f       	mov	r30, r25
 304:	0e 94 71 02 	call	0x4e2	; 0x4e2 <__fp_split3>
 308:	58 f3       	brcs	.-42     	; 0x2e0 <__addsf3+0xc>
 30a:	ba 17       	cp	r27, r26
 30c:	62 07       	cpc	r22, r18
 30e:	73 07       	cpc	r23, r19
 310:	84 07       	cpc	r24, r20
 312:	95 07       	cpc	r25, r21
 314:	20 f0       	brcs	.+8      	; 0x31e <__addsf3x+0x1c>
 316:	79 f4       	brne	.+30     	; 0x336 <__addsf3x+0x34>
 318:	a6 f5       	brtc	.+104    	; 0x382 <__addsf3x+0x80>
 31a:	0c 94 93 02 	jmp	0x526	; 0x526 <__fp_zero>
 31e:	0e f4       	brtc	.+2      	; 0x322 <__addsf3x+0x20>
 320:	e0 95       	com	r30
 322:	0b 2e       	mov	r0, r27
 324:	ba 2f       	mov	r27, r26
 326:	a0 2d       	mov	r26, r0
 328:	0b 01       	movw	r0, r22
 32a:	b9 01       	movw	r22, r18
 32c:	90 01       	movw	r18, r0
 32e:	0c 01       	movw	r0, r24
 330:	ca 01       	movw	r24, r20
 332:	a0 01       	movw	r20, r0
 334:	11 24       	eor	r1, r1
 336:	ff 27       	eor	r31, r31
 338:	59 1b       	sub	r21, r25
 33a:	99 f0       	breq	.+38     	; 0x362 <__addsf3x+0x60>
 33c:	59 3f       	cpi	r21, 0xF9	; 249
 33e:	50 f4       	brcc	.+20     	; 0x354 <__addsf3x+0x52>
 340:	50 3e       	cpi	r21, 0xE0	; 224
 342:	68 f1       	brcs	.+90     	; 0x39e <__addsf3x+0x9c>
 344:	1a 16       	cp	r1, r26
 346:	f0 40       	sbci	r31, 0x00	; 0
 348:	a2 2f       	mov	r26, r18
 34a:	23 2f       	mov	r18, r19
 34c:	34 2f       	mov	r19, r20
 34e:	44 27       	eor	r20, r20
 350:	58 5f       	subi	r21, 0xF8	; 248
 352:	f3 cf       	rjmp	.-26     	; 0x33a <__addsf3x+0x38>
 354:	46 95       	lsr	r20
 356:	37 95       	ror	r19
 358:	27 95       	ror	r18
 35a:	a7 95       	ror	r26
 35c:	f0 40       	sbci	r31, 0x00	; 0
 35e:	53 95       	inc	r21
 360:	c9 f7       	brne	.-14     	; 0x354 <__addsf3x+0x52>
 362:	7e f4       	brtc	.+30     	; 0x382 <__addsf3x+0x80>
 364:	1f 16       	cp	r1, r31
 366:	ba 0b       	sbc	r27, r26
 368:	62 0b       	sbc	r22, r18
 36a:	73 0b       	sbc	r23, r19
 36c:	84 0b       	sbc	r24, r20
 36e:	ba f0       	brmi	.+46     	; 0x39e <__addsf3x+0x9c>
 370:	91 50       	subi	r25, 0x01	; 1
 372:	a1 f0       	breq	.+40     	; 0x39c <__addsf3x+0x9a>
 374:	ff 0f       	add	r31, r31
 376:	bb 1f       	adc	r27, r27
 378:	66 1f       	adc	r22, r22
 37a:	77 1f       	adc	r23, r23
 37c:	88 1f       	adc	r24, r24
 37e:	c2 f7       	brpl	.-16     	; 0x370 <__addsf3x+0x6e>
 380:	0e c0       	rjmp	.+28     	; 0x39e <__addsf3x+0x9c>
 382:	ba 0f       	add	r27, r26
 384:	62 1f       	adc	r22, r18
 386:	73 1f       	adc	r23, r19
 388:	84 1f       	adc	r24, r20
 38a:	48 f4       	brcc	.+18     	; 0x39e <__addsf3x+0x9c>
 38c:	87 95       	ror	r24
 38e:	77 95       	ror	r23
 390:	67 95       	ror	r22
 392:	b7 95       	ror	r27
 394:	f7 95       	ror	r31
 396:	9e 3f       	cpi	r25, 0xFE	; 254
 398:	08 f0       	brcs	.+2      	; 0x39c <__addsf3x+0x9a>
 39a:	b0 cf       	rjmp	.-160    	; 0x2fc <__addsf3+0x28>
 39c:	93 95       	inc	r25
 39e:	88 0f       	add	r24, r24
 3a0:	08 f0       	brcs	.+2      	; 0x3a4 <__addsf3x+0xa2>
 3a2:	99 27       	eor	r25, r25
 3a4:	ee 0f       	add	r30, r30
 3a6:	97 95       	ror	r25
 3a8:	87 95       	ror	r24
 3aa:	08 95       	ret

000003ac <__fixsfsi>:
 3ac:	0e 94 dd 01 	call	0x3ba	; 0x3ba <__fixunssfsi>
 3b0:	68 94       	set
 3b2:	b1 11       	cpse	r27, r1
 3b4:	0c 94 94 02 	jmp	0x528	; 0x528 <__fp_szero>
 3b8:	08 95       	ret

000003ba <__fixunssfsi>:
 3ba:	0e 94 79 02 	call	0x4f2	; 0x4f2 <__fp_splitA>
 3be:	88 f0       	brcs	.+34     	; 0x3e2 <__fixunssfsi+0x28>
 3c0:	9f 57       	subi	r25, 0x7F	; 127
 3c2:	98 f0       	brcs	.+38     	; 0x3ea <__fixunssfsi+0x30>
 3c4:	b9 2f       	mov	r27, r25
 3c6:	99 27       	eor	r25, r25
 3c8:	b7 51       	subi	r27, 0x17	; 23
 3ca:	b0 f0       	brcs	.+44     	; 0x3f8 <__fixunssfsi+0x3e>
 3cc:	e1 f0       	breq	.+56     	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
 3ce:	66 0f       	add	r22, r22
 3d0:	77 1f       	adc	r23, r23
 3d2:	88 1f       	adc	r24, r24
 3d4:	99 1f       	adc	r25, r25
 3d6:	1a f0       	brmi	.+6      	; 0x3de <__fixunssfsi+0x24>
 3d8:	ba 95       	dec	r27
 3da:	c9 f7       	brne	.-14     	; 0x3ce <__fixunssfsi+0x14>
 3dc:	14 c0       	rjmp	.+40     	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
 3de:	b1 30       	cpi	r27, 0x01	; 1
 3e0:	91 f0       	breq	.+36     	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
 3e2:	0e 94 93 02 	call	0x526	; 0x526 <__fp_zero>
 3e6:	b1 e0       	ldi	r27, 0x01	; 1
 3e8:	08 95       	ret
 3ea:	0c 94 93 02 	jmp	0x526	; 0x526 <__fp_zero>
 3ee:	67 2f       	mov	r22, r23
 3f0:	78 2f       	mov	r23, r24
 3f2:	88 27       	eor	r24, r24
 3f4:	b8 5f       	subi	r27, 0xF8	; 248
 3f6:	39 f0       	breq	.+14     	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
 3f8:	b9 3f       	cpi	r27, 0xF9	; 249
 3fa:	cc f3       	brlt	.-14     	; 0x3ee <__fixunssfsi+0x34>
 3fc:	86 95       	lsr	r24
 3fe:	77 95       	ror	r23
 400:	67 95       	ror	r22
 402:	b3 95       	inc	r27
 404:	d9 f7       	brne	.-10     	; 0x3fc <__fixunssfsi+0x42>
 406:	3e f4       	brtc	.+14     	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>
 408:	90 95       	com	r25
 40a:	80 95       	com	r24
 40c:	70 95       	com	r23
 40e:	61 95       	neg	r22
 410:	7f 4f       	sbci	r23, 0xFF	; 255
 412:	8f 4f       	sbci	r24, 0xFF	; 255
 414:	9f 4f       	sbci	r25, 0xFF	; 255
 416:	08 95       	ret

00000418 <__floatunsisf>:
 418:	e8 94       	clt
 41a:	09 c0       	rjmp	.+18     	; 0x42e <__floatsisf+0x12>

0000041c <__floatsisf>:
 41c:	97 fb       	bst	r25, 7
 41e:	3e f4       	brtc	.+14     	; 0x42e <__floatsisf+0x12>
 420:	90 95       	com	r25
 422:	80 95       	com	r24
 424:	70 95       	com	r23
 426:	61 95       	neg	r22
 428:	7f 4f       	sbci	r23, 0xFF	; 255
 42a:	8f 4f       	sbci	r24, 0xFF	; 255
 42c:	9f 4f       	sbci	r25, 0xFF	; 255
 42e:	99 23       	and	r25, r25
 430:	a9 f0       	breq	.+42     	; 0x45c <__floatsisf+0x40>
 432:	f9 2f       	mov	r31, r25
 434:	96 e9       	ldi	r25, 0x96	; 150
 436:	bb 27       	eor	r27, r27
 438:	93 95       	inc	r25
 43a:	f6 95       	lsr	r31
 43c:	87 95       	ror	r24
 43e:	77 95       	ror	r23
 440:	67 95       	ror	r22
 442:	b7 95       	ror	r27
 444:	f1 11       	cpse	r31, r1
 446:	f8 cf       	rjmp	.-16     	; 0x438 <__floatsisf+0x1c>
 448:	fa f4       	brpl	.+62     	; 0x488 <__floatsisf+0x6c>
 44a:	bb 0f       	add	r27, r27
 44c:	11 f4       	brne	.+4      	; 0x452 <__floatsisf+0x36>
 44e:	60 ff       	sbrs	r22, 0
 450:	1b c0       	rjmp	.+54     	; 0x488 <__floatsisf+0x6c>
 452:	6f 5f       	subi	r22, 0xFF	; 255
 454:	7f 4f       	sbci	r23, 0xFF	; 255
 456:	8f 4f       	sbci	r24, 0xFF	; 255
 458:	9f 4f       	sbci	r25, 0xFF	; 255
 45a:	16 c0       	rjmp	.+44     	; 0x488 <__floatsisf+0x6c>
 45c:	88 23       	and	r24, r24
 45e:	11 f0       	breq	.+4      	; 0x464 <__floatsisf+0x48>
 460:	96 e9       	ldi	r25, 0x96	; 150
 462:	11 c0       	rjmp	.+34     	; 0x486 <__floatsisf+0x6a>
 464:	77 23       	and	r23, r23
 466:	21 f0       	breq	.+8      	; 0x470 <__floatsisf+0x54>
 468:	9e e8       	ldi	r25, 0x8E	; 142
 46a:	87 2f       	mov	r24, r23
 46c:	76 2f       	mov	r23, r22
 46e:	05 c0       	rjmp	.+10     	; 0x47a <__floatsisf+0x5e>
 470:	66 23       	and	r22, r22
 472:	71 f0       	breq	.+28     	; 0x490 <__floatsisf+0x74>
 474:	96 e8       	ldi	r25, 0x86	; 134
 476:	86 2f       	mov	r24, r22
 478:	70 e0       	ldi	r23, 0x00	; 0
 47a:	60 e0       	ldi	r22, 0x00	; 0
 47c:	2a f0       	brmi	.+10     	; 0x488 <__floatsisf+0x6c>
 47e:	9a 95       	dec	r25
 480:	66 0f       	add	r22, r22
 482:	77 1f       	adc	r23, r23
 484:	88 1f       	adc	r24, r24
 486:	da f7       	brpl	.-10     	; 0x47e <__floatsisf+0x62>
 488:	88 0f       	add	r24, r24
 48a:	96 95       	lsr	r25
 48c:	87 95       	ror	r24
 48e:	97 f9       	bld	r25, 7
 490:	08 95       	ret

00000492 <__fp_inf>:
 492:	97 f9       	bld	r25, 7
 494:	9f 67       	ori	r25, 0x7F	; 127
 496:	80 e8       	ldi	r24, 0x80	; 128
 498:	70 e0       	ldi	r23, 0x00	; 0
 49a:	60 e0       	ldi	r22, 0x00	; 0
 49c:	08 95       	ret

0000049e <__fp_nan>:
 49e:	9f ef       	ldi	r25, 0xFF	; 255
 4a0:	80 ec       	ldi	r24, 0xC0	; 192
 4a2:	08 95       	ret

000004a4 <__fp_pscA>:
 4a4:	00 24       	eor	r0, r0
 4a6:	0a 94       	dec	r0
 4a8:	16 16       	cp	r1, r22
 4aa:	17 06       	cpc	r1, r23
 4ac:	18 06       	cpc	r1, r24
 4ae:	09 06       	cpc	r0, r25
 4b0:	08 95       	ret

000004b2 <__fp_pscB>:
 4b2:	00 24       	eor	r0, r0
 4b4:	0a 94       	dec	r0
 4b6:	12 16       	cp	r1, r18
 4b8:	13 06       	cpc	r1, r19
 4ba:	14 06       	cpc	r1, r20
 4bc:	05 06       	cpc	r0, r21
 4be:	08 95       	ret

000004c0 <__fp_round>:
 4c0:	09 2e       	mov	r0, r25
 4c2:	03 94       	inc	r0
 4c4:	00 0c       	add	r0, r0
 4c6:	11 f4       	brne	.+4      	; 0x4cc <__fp_round+0xc>
 4c8:	88 23       	and	r24, r24
 4ca:	52 f0       	brmi	.+20     	; 0x4e0 <__fp_round+0x20>
 4cc:	bb 0f       	add	r27, r27
 4ce:	40 f4       	brcc	.+16     	; 0x4e0 <__fp_round+0x20>
 4d0:	bf 2b       	or	r27, r31
 4d2:	11 f4       	brne	.+4      	; 0x4d8 <__fp_round+0x18>
 4d4:	60 ff       	sbrs	r22, 0
 4d6:	04 c0       	rjmp	.+8      	; 0x4e0 <__fp_round+0x20>
 4d8:	6f 5f       	subi	r22, 0xFF	; 255
 4da:	7f 4f       	sbci	r23, 0xFF	; 255
 4dc:	8f 4f       	sbci	r24, 0xFF	; 255
 4de:	9f 4f       	sbci	r25, 0xFF	; 255
 4e0:	08 95       	ret

000004e2 <__fp_split3>:
 4e2:	57 fd       	sbrc	r21, 7
 4e4:	90 58       	subi	r25, 0x80	; 128
 4e6:	44 0f       	add	r20, r20
 4e8:	55 1f       	adc	r21, r21
 4ea:	59 f0       	breq	.+22     	; 0x502 <__fp_splitA+0x10>
 4ec:	5f 3f       	cpi	r21, 0xFF	; 255
 4ee:	71 f0       	breq	.+28     	; 0x50c <__fp_splitA+0x1a>
 4f0:	47 95       	ror	r20

000004f2 <__fp_splitA>:
 4f2:	88 0f       	add	r24, r24
 4f4:	97 fb       	bst	r25, 7
 4f6:	99 1f       	adc	r25, r25
 4f8:	61 f0       	breq	.+24     	; 0x512 <__fp_splitA+0x20>
 4fa:	9f 3f       	cpi	r25, 0xFF	; 255
 4fc:	79 f0       	breq	.+30     	; 0x51c <__fp_splitA+0x2a>
 4fe:	87 95       	ror	r24
 500:	08 95       	ret
 502:	12 16       	cp	r1, r18
 504:	13 06       	cpc	r1, r19
 506:	14 06       	cpc	r1, r20
 508:	55 1f       	adc	r21, r21
 50a:	f2 cf       	rjmp	.-28     	; 0x4f0 <__fp_split3+0xe>
 50c:	46 95       	lsr	r20
 50e:	f1 df       	rcall	.-30     	; 0x4f2 <__fp_splitA>
 510:	08 c0       	rjmp	.+16     	; 0x522 <__fp_splitA+0x30>
 512:	16 16       	cp	r1, r22
 514:	17 06       	cpc	r1, r23
 516:	18 06       	cpc	r1, r24
 518:	99 1f       	adc	r25, r25
 51a:	f1 cf       	rjmp	.-30     	; 0x4fe <__fp_splitA+0xc>
 51c:	86 95       	lsr	r24
 51e:	71 05       	cpc	r23, r1
 520:	61 05       	cpc	r22, r1
 522:	08 94       	sec
 524:	08 95       	ret

00000526 <__fp_zero>:
 526:	e8 94       	clt

00000528 <__fp_szero>:
 528:	bb 27       	eor	r27, r27
 52a:	66 27       	eor	r22, r22
 52c:	77 27       	eor	r23, r23
 52e:	cb 01       	movw	r24, r22
 530:	97 f9       	bld	r25, 7
 532:	08 95       	ret

00000534 <__mulsf3>:
 534:	0e 94 ad 02 	call	0x55a	; 0x55a <__mulsf3x>
 538:	0c 94 60 02 	jmp	0x4c0	; 0x4c0 <__fp_round>
 53c:	0e 94 52 02 	call	0x4a4	; 0x4a4 <__fp_pscA>
 540:	38 f0       	brcs	.+14     	; 0x550 <__mulsf3+0x1c>
 542:	0e 94 59 02 	call	0x4b2	; 0x4b2 <__fp_pscB>
 546:	20 f0       	brcs	.+8      	; 0x550 <__mulsf3+0x1c>
 548:	95 23       	and	r25, r21
 54a:	11 f0       	breq	.+4      	; 0x550 <__mulsf3+0x1c>
 54c:	0c 94 49 02 	jmp	0x492	; 0x492 <__fp_inf>
 550:	0c 94 4f 02 	jmp	0x49e	; 0x49e <__fp_nan>
 554:	11 24       	eor	r1, r1
 556:	0c 94 94 02 	jmp	0x528	; 0x528 <__fp_szero>

0000055a <__mulsf3x>:
 55a:	0e 94 71 02 	call	0x4e2	; 0x4e2 <__fp_split3>
 55e:	70 f3       	brcs	.-36     	; 0x53c <__mulsf3+0x8>

00000560 <__mulsf3_pse>:
 560:	95 9f       	mul	r25, r21
 562:	c1 f3       	breq	.-16     	; 0x554 <__mulsf3+0x20>
 564:	95 0f       	add	r25, r21
 566:	50 e0       	ldi	r21, 0x00	; 0
 568:	55 1f       	adc	r21, r21
 56a:	62 9f       	mul	r22, r18
 56c:	f0 01       	movw	r30, r0
 56e:	72 9f       	mul	r23, r18
 570:	bb 27       	eor	r27, r27
 572:	f0 0d       	add	r31, r0
 574:	b1 1d       	adc	r27, r1
 576:	63 9f       	mul	r22, r19
 578:	aa 27       	eor	r26, r26
 57a:	f0 0d       	add	r31, r0
 57c:	b1 1d       	adc	r27, r1
 57e:	aa 1f       	adc	r26, r26
 580:	64 9f       	mul	r22, r20
 582:	66 27       	eor	r22, r22
 584:	b0 0d       	add	r27, r0
 586:	a1 1d       	adc	r26, r1
 588:	66 1f       	adc	r22, r22
 58a:	82 9f       	mul	r24, r18
 58c:	22 27       	eor	r18, r18
 58e:	b0 0d       	add	r27, r0
 590:	a1 1d       	adc	r26, r1
 592:	62 1f       	adc	r22, r18
 594:	73 9f       	mul	r23, r19
 596:	b0 0d       	add	r27, r0
 598:	a1 1d       	adc	r26, r1
 59a:	62 1f       	adc	r22, r18
 59c:	83 9f       	mul	r24, r19
 59e:	a0 0d       	add	r26, r0
 5a0:	61 1d       	adc	r22, r1
 5a2:	22 1f       	adc	r18, r18
 5a4:	74 9f       	mul	r23, r20
 5a6:	33 27       	eor	r19, r19
 5a8:	a0 0d       	add	r26, r0
 5aa:	61 1d       	adc	r22, r1
 5ac:	23 1f       	adc	r18, r19
 5ae:	84 9f       	mul	r24, r20
 5b0:	60 0d       	add	r22, r0
 5b2:	21 1d       	adc	r18, r1
 5b4:	82 2f       	mov	r24, r18
 5b6:	76 2f       	mov	r23, r22
 5b8:	6a 2f       	mov	r22, r26
 5ba:	11 24       	eor	r1, r1
 5bc:	9f 57       	subi	r25, 0x7F	; 127
 5be:	50 40       	sbci	r21, 0x00	; 0
 5c0:	9a f0       	brmi	.+38     	; 0x5e8 <__mulsf3_pse+0x88>
 5c2:	f1 f0       	breq	.+60     	; 0x600 <__mulsf3_pse+0xa0>
 5c4:	88 23       	and	r24, r24
 5c6:	4a f0       	brmi	.+18     	; 0x5da <__mulsf3_pse+0x7a>
 5c8:	ee 0f       	add	r30, r30
 5ca:	ff 1f       	adc	r31, r31
 5cc:	bb 1f       	adc	r27, r27
 5ce:	66 1f       	adc	r22, r22
 5d0:	77 1f       	adc	r23, r23
 5d2:	88 1f       	adc	r24, r24
 5d4:	91 50       	subi	r25, 0x01	; 1
 5d6:	50 40       	sbci	r21, 0x00	; 0
 5d8:	a9 f7       	brne	.-22     	; 0x5c4 <__mulsf3_pse+0x64>
 5da:	9e 3f       	cpi	r25, 0xFE	; 254
 5dc:	51 05       	cpc	r21, r1
 5de:	80 f0       	brcs	.+32     	; 0x600 <__mulsf3_pse+0xa0>
 5e0:	0c 94 49 02 	jmp	0x492	; 0x492 <__fp_inf>
 5e4:	0c 94 94 02 	jmp	0x528	; 0x528 <__fp_szero>
 5e8:	5f 3f       	cpi	r21, 0xFF	; 255
 5ea:	e4 f3       	brlt	.-8      	; 0x5e4 <__mulsf3_pse+0x84>
 5ec:	98 3e       	cpi	r25, 0xE8	; 232
 5ee:	d4 f3       	brlt	.-12     	; 0x5e4 <__mulsf3_pse+0x84>
 5f0:	86 95       	lsr	r24
 5f2:	77 95       	ror	r23
 5f4:	67 95       	ror	r22
 5f6:	b7 95       	ror	r27
 5f8:	f7 95       	ror	r31
 5fa:	e7 95       	ror	r30
 5fc:	9f 5f       	subi	r25, 0xFF	; 255
 5fe:	c1 f7       	brne	.-16     	; 0x5f0 <__mulsf3_pse+0x90>
 600:	fe 2b       	or	r31, r30
 602:	88 0f       	add	r24, r24
 604:	91 1d       	adc	r25, r1
 606:	96 95       	lsr	r25
 608:	87 95       	ror	r24
 60a:	97 f9       	bld	r25, 7
 60c:	08 95       	ret

0000060e <printf>:
 60e:	a0 e0       	ldi	r26, 0x00	; 0
 610:	b0 e0       	ldi	r27, 0x00	; 0
 612:	ed e0       	ldi	r30, 0x0D	; 13
 614:	f3 e0       	ldi	r31, 0x03	; 3
 616:	0c 94 ee 05 	jmp	0xbdc	; 0xbdc <__prologue_saves__+0x20>
 61a:	ae 01       	movw	r20, r28
 61c:	4b 5f       	subi	r20, 0xFB	; 251
 61e:	5f 4f       	sbci	r21, 0xFF	; 255
 620:	fa 01       	movw	r30, r20
 622:	61 91       	ld	r22, Z+
 624:	71 91       	ld	r23, Z+
 626:	af 01       	movw	r20, r30
 628:	80 91 ac 01 	lds	r24, 0x01AC	; 0x8001ac <__data_end+0x2>
 62c:	90 91 ad 01 	lds	r25, 0x01AD	; 0x8001ad <__data_end+0x3>
 630:	0e 94 4d 03 	call	0x69a	; 0x69a <vfprintf>
 634:	e2 e0       	ldi	r30, 0x02	; 2
 636:	0c 94 0a 06 	jmp	0xc14	; 0xc14 <__epilogue_restores__+0x20>

0000063a <puts>:
 63a:	0f 93       	push	r16
 63c:	1f 93       	push	r17
 63e:	cf 93       	push	r28
 640:	df 93       	push	r29
 642:	e0 91 ac 01 	lds	r30, 0x01AC	; 0x8001ac <__data_end+0x2>
 646:	f0 91 ad 01 	lds	r31, 0x01AD	; 0x8001ad <__data_end+0x3>
 64a:	23 81       	ldd	r18, Z+3	; 0x03
 64c:	21 ff       	sbrs	r18, 1
 64e:	1b c0       	rjmp	.+54     	; 0x686 <puts+0x4c>
 650:	8c 01       	movw	r16, r24
 652:	d0 e0       	ldi	r29, 0x00	; 0
 654:	c0 e0       	ldi	r28, 0x00	; 0
 656:	f8 01       	movw	r30, r16
 658:	81 91       	ld	r24, Z+
 65a:	8f 01       	movw	r16, r30
 65c:	60 91 ac 01 	lds	r22, 0x01AC	; 0x8001ac <__data_end+0x2>
 660:	70 91 ad 01 	lds	r23, 0x01AD	; 0x8001ad <__data_end+0x3>
 664:	db 01       	movw	r26, r22
 666:	18 96       	adiw	r26, 0x08	; 8
 668:	ed 91       	ld	r30, X+
 66a:	fc 91       	ld	r31, X
 66c:	19 97       	sbiw	r26, 0x09	; 9
 66e:	88 23       	and	r24, r24
 670:	31 f0       	breq	.+12     	; 0x67e <puts+0x44>
 672:	09 95       	icall
 674:	89 2b       	or	r24, r25
 676:	79 f3       	breq	.-34     	; 0x656 <puts+0x1c>
 678:	df ef       	ldi	r29, 0xFF	; 255
 67a:	cf ef       	ldi	r28, 0xFF	; 255
 67c:	ec cf       	rjmp	.-40     	; 0x656 <puts+0x1c>
 67e:	8a e0       	ldi	r24, 0x0A	; 10
 680:	09 95       	icall
 682:	89 2b       	or	r24, r25
 684:	19 f0       	breq	.+6      	; 0x68c <puts+0x52>
 686:	8f ef       	ldi	r24, 0xFF	; 255
 688:	9f ef       	ldi	r25, 0xFF	; 255
 68a:	02 c0       	rjmp	.+4      	; 0x690 <puts+0x56>
 68c:	8d 2f       	mov	r24, r29
 68e:	9c 2f       	mov	r25, r28
 690:	df 91       	pop	r29
 692:	cf 91       	pop	r28
 694:	1f 91       	pop	r17
 696:	0f 91       	pop	r16
 698:	08 95       	ret

0000069a <vfprintf>:
 69a:	ab e0       	ldi	r26, 0x0B	; 11
 69c:	b0 e0       	ldi	r27, 0x00	; 0
 69e:	e3 e5       	ldi	r30, 0x53	; 83
 6a0:	f3 e0       	ldi	r31, 0x03	; 3
 6a2:	0c 94 de 05 	jmp	0xbbc	; 0xbbc <__prologue_saves__>
 6a6:	6c 01       	movw	r12, r24
 6a8:	7b 01       	movw	r14, r22
 6aa:	8a 01       	movw	r16, r20
 6ac:	fc 01       	movw	r30, r24
 6ae:	17 82       	std	Z+7, r1	; 0x07
 6b0:	16 82       	std	Z+6, r1	; 0x06
 6b2:	83 81       	ldd	r24, Z+3	; 0x03
 6b4:	81 ff       	sbrs	r24, 1
 6b6:	cc c1       	rjmp	.+920    	; 0xa50 <__stack+0x151>
 6b8:	ce 01       	movw	r24, r28
 6ba:	01 96       	adiw	r24, 0x01	; 1
 6bc:	3c 01       	movw	r6, r24
 6be:	f6 01       	movw	r30, r12
 6c0:	93 81       	ldd	r25, Z+3	; 0x03
 6c2:	f7 01       	movw	r30, r14
 6c4:	93 fd       	sbrc	r25, 3
 6c6:	85 91       	lpm	r24, Z+
 6c8:	93 ff       	sbrs	r25, 3
 6ca:	81 91       	ld	r24, Z+
 6cc:	7f 01       	movw	r14, r30
 6ce:	88 23       	and	r24, r24
 6d0:	09 f4       	brne	.+2      	; 0x6d4 <vfprintf+0x3a>
 6d2:	ba c1       	rjmp	.+884    	; 0xa48 <__stack+0x149>
 6d4:	85 32       	cpi	r24, 0x25	; 37
 6d6:	39 f4       	brne	.+14     	; 0x6e6 <vfprintf+0x4c>
 6d8:	93 fd       	sbrc	r25, 3
 6da:	85 91       	lpm	r24, Z+
 6dc:	93 ff       	sbrs	r25, 3
 6de:	81 91       	ld	r24, Z+
 6e0:	7f 01       	movw	r14, r30
 6e2:	85 32       	cpi	r24, 0x25	; 37
 6e4:	29 f4       	brne	.+10     	; 0x6f0 <vfprintf+0x56>
 6e6:	b6 01       	movw	r22, r12
 6e8:	90 e0       	ldi	r25, 0x00	; 0
 6ea:	0e 94 44 05 	call	0xa88	; 0xa88 <fputc>
 6ee:	e7 cf       	rjmp	.-50     	; 0x6be <vfprintf+0x24>
 6f0:	91 2c       	mov	r9, r1
 6f2:	21 2c       	mov	r2, r1
 6f4:	31 2c       	mov	r3, r1
 6f6:	ff e1       	ldi	r31, 0x1F	; 31
 6f8:	f3 15       	cp	r31, r3
 6fa:	d8 f0       	brcs	.+54     	; 0x732 <vfprintf+0x98>
 6fc:	8b 32       	cpi	r24, 0x2B	; 43
 6fe:	79 f0       	breq	.+30     	; 0x71e <vfprintf+0x84>
 700:	38 f4       	brcc	.+14     	; 0x710 <vfprintf+0x76>
 702:	80 32       	cpi	r24, 0x20	; 32
 704:	79 f0       	breq	.+30     	; 0x724 <vfprintf+0x8a>
 706:	83 32       	cpi	r24, 0x23	; 35
 708:	a1 f4       	brne	.+40     	; 0x732 <vfprintf+0x98>
 70a:	23 2d       	mov	r18, r3
 70c:	20 61       	ori	r18, 0x10	; 16
 70e:	1d c0       	rjmp	.+58     	; 0x74a <vfprintf+0xb0>
 710:	8d 32       	cpi	r24, 0x2D	; 45
 712:	61 f0       	breq	.+24     	; 0x72c <vfprintf+0x92>
 714:	80 33       	cpi	r24, 0x30	; 48
 716:	69 f4       	brne	.+26     	; 0x732 <vfprintf+0x98>
 718:	23 2d       	mov	r18, r3
 71a:	21 60       	ori	r18, 0x01	; 1
 71c:	16 c0       	rjmp	.+44     	; 0x74a <vfprintf+0xb0>
 71e:	83 2d       	mov	r24, r3
 720:	82 60       	ori	r24, 0x02	; 2
 722:	38 2e       	mov	r3, r24
 724:	e3 2d       	mov	r30, r3
 726:	e4 60       	ori	r30, 0x04	; 4
 728:	3e 2e       	mov	r3, r30
 72a:	2a c0       	rjmp	.+84     	; 0x780 <vfprintf+0xe6>
 72c:	f3 2d       	mov	r31, r3
 72e:	f8 60       	ori	r31, 0x08	; 8
 730:	1d c0       	rjmp	.+58     	; 0x76c <vfprintf+0xd2>
 732:	37 fc       	sbrc	r3, 7
 734:	2d c0       	rjmp	.+90     	; 0x790 <vfprintf+0xf6>
 736:	20 ed       	ldi	r18, 0xD0	; 208
 738:	28 0f       	add	r18, r24
 73a:	2a 30       	cpi	r18, 0x0A	; 10
 73c:	40 f0       	brcs	.+16     	; 0x74e <vfprintf+0xb4>
 73e:	8e 32       	cpi	r24, 0x2E	; 46
 740:	b9 f4       	brne	.+46     	; 0x770 <vfprintf+0xd6>
 742:	36 fc       	sbrc	r3, 6
 744:	81 c1       	rjmp	.+770    	; 0xa48 <__stack+0x149>
 746:	23 2d       	mov	r18, r3
 748:	20 64       	ori	r18, 0x40	; 64
 74a:	32 2e       	mov	r3, r18
 74c:	19 c0       	rjmp	.+50     	; 0x780 <vfprintf+0xe6>
 74e:	36 fe       	sbrs	r3, 6
 750:	06 c0       	rjmp	.+12     	; 0x75e <vfprintf+0xc4>
 752:	8a e0       	ldi	r24, 0x0A	; 10
 754:	98 9e       	mul	r9, r24
 756:	20 0d       	add	r18, r0
 758:	11 24       	eor	r1, r1
 75a:	92 2e       	mov	r9, r18
 75c:	11 c0       	rjmp	.+34     	; 0x780 <vfprintf+0xe6>
 75e:	ea e0       	ldi	r30, 0x0A	; 10
 760:	2e 9e       	mul	r2, r30
 762:	20 0d       	add	r18, r0
 764:	11 24       	eor	r1, r1
 766:	22 2e       	mov	r2, r18
 768:	f3 2d       	mov	r31, r3
 76a:	f0 62       	ori	r31, 0x20	; 32
 76c:	3f 2e       	mov	r3, r31
 76e:	08 c0       	rjmp	.+16     	; 0x780 <vfprintf+0xe6>
 770:	8c 36       	cpi	r24, 0x6C	; 108
 772:	21 f4       	brne	.+8      	; 0x77c <vfprintf+0xe2>
 774:	83 2d       	mov	r24, r3
 776:	80 68       	ori	r24, 0x80	; 128
 778:	38 2e       	mov	r3, r24
 77a:	02 c0       	rjmp	.+4      	; 0x780 <vfprintf+0xe6>
 77c:	88 36       	cpi	r24, 0x68	; 104
 77e:	41 f4       	brne	.+16     	; 0x790 <vfprintf+0xf6>
 780:	f7 01       	movw	r30, r14
 782:	93 fd       	sbrc	r25, 3
 784:	85 91       	lpm	r24, Z+
 786:	93 ff       	sbrs	r25, 3
 788:	81 91       	ld	r24, Z+
 78a:	7f 01       	movw	r14, r30
 78c:	81 11       	cpse	r24, r1
 78e:	b3 cf       	rjmp	.-154    	; 0x6f6 <vfprintf+0x5c>
 790:	98 2f       	mov	r25, r24
 792:	9f 7d       	andi	r25, 0xDF	; 223
 794:	95 54       	subi	r25, 0x45	; 69
 796:	93 30       	cpi	r25, 0x03	; 3
 798:	28 f4       	brcc	.+10     	; 0x7a4 <vfprintf+0x10a>
 79a:	0c 5f       	subi	r16, 0xFC	; 252
 79c:	1f 4f       	sbci	r17, 0xFF	; 255
 79e:	9f e3       	ldi	r25, 0x3F	; 63
 7a0:	99 83       	std	Y+1, r25	; 0x01
 7a2:	0d c0       	rjmp	.+26     	; 0x7be <vfprintf+0x124>
 7a4:	83 36       	cpi	r24, 0x63	; 99
 7a6:	31 f0       	breq	.+12     	; 0x7b4 <vfprintf+0x11a>
 7a8:	83 37       	cpi	r24, 0x73	; 115
 7aa:	71 f0       	breq	.+28     	; 0x7c8 <vfprintf+0x12e>
 7ac:	83 35       	cpi	r24, 0x53	; 83
 7ae:	09 f0       	breq	.+2      	; 0x7b2 <vfprintf+0x118>
 7b0:	59 c0       	rjmp	.+178    	; 0x864 <__DATA_REGION_LENGTH__+0x64>
 7b2:	21 c0       	rjmp	.+66     	; 0x7f6 <vfprintf+0x15c>
 7b4:	f8 01       	movw	r30, r16
 7b6:	80 81       	ld	r24, Z
 7b8:	89 83       	std	Y+1, r24	; 0x01
 7ba:	0e 5f       	subi	r16, 0xFE	; 254
 7bc:	1f 4f       	sbci	r17, 0xFF	; 255
 7be:	88 24       	eor	r8, r8
 7c0:	83 94       	inc	r8
 7c2:	91 2c       	mov	r9, r1
 7c4:	53 01       	movw	r10, r6
 7c6:	13 c0       	rjmp	.+38     	; 0x7ee <vfprintf+0x154>
 7c8:	28 01       	movw	r4, r16
 7ca:	f2 e0       	ldi	r31, 0x02	; 2
 7cc:	4f 0e       	add	r4, r31
 7ce:	51 1c       	adc	r5, r1
 7d0:	f8 01       	movw	r30, r16
 7d2:	a0 80       	ld	r10, Z
 7d4:	b1 80       	ldd	r11, Z+1	; 0x01
 7d6:	36 fe       	sbrs	r3, 6
 7d8:	03 c0       	rjmp	.+6      	; 0x7e0 <vfprintf+0x146>
 7da:	69 2d       	mov	r22, r9
 7dc:	70 e0       	ldi	r23, 0x00	; 0
 7de:	02 c0       	rjmp	.+4      	; 0x7e4 <vfprintf+0x14a>
 7e0:	6f ef       	ldi	r22, 0xFF	; 255
 7e2:	7f ef       	ldi	r23, 0xFF	; 255
 7e4:	c5 01       	movw	r24, r10
 7e6:	0e 94 39 05 	call	0xa72	; 0xa72 <strnlen>
 7ea:	4c 01       	movw	r8, r24
 7ec:	82 01       	movw	r16, r4
 7ee:	f3 2d       	mov	r31, r3
 7f0:	ff 77       	andi	r31, 0x7F	; 127
 7f2:	3f 2e       	mov	r3, r31
 7f4:	16 c0       	rjmp	.+44     	; 0x822 <__DATA_REGION_LENGTH__+0x22>
 7f6:	28 01       	movw	r4, r16
 7f8:	22 e0       	ldi	r18, 0x02	; 2
 7fa:	42 0e       	add	r4, r18
 7fc:	51 1c       	adc	r5, r1
 7fe:	f8 01       	movw	r30, r16
 800:	a0 80       	ld	r10, Z
 802:	b1 80       	ldd	r11, Z+1	; 0x01
 804:	36 fe       	sbrs	r3, 6
 806:	03 c0       	rjmp	.+6      	; 0x80e <__DATA_REGION_LENGTH__+0xe>
 808:	69 2d       	mov	r22, r9
 80a:	70 e0       	ldi	r23, 0x00	; 0
 80c:	02 c0       	rjmp	.+4      	; 0x812 <__DATA_REGION_LENGTH__+0x12>
 80e:	6f ef       	ldi	r22, 0xFF	; 255
 810:	7f ef       	ldi	r23, 0xFF	; 255
 812:	c5 01       	movw	r24, r10
 814:	0e 94 2e 05 	call	0xa5c	; 0xa5c <strnlen_P>
 818:	4c 01       	movw	r8, r24
 81a:	f3 2d       	mov	r31, r3
 81c:	f0 68       	ori	r31, 0x80	; 128
 81e:	3f 2e       	mov	r3, r31
 820:	82 01       	movw	r16, r4
 822:	33 fc       	sbrc	r3, 3
 824:	1b c0       	rjmp	.+54     	; 0x85c <__DATA_REGION_LENGTH__+0x5c>
 826:	82 2d       	mov	r24, r2
 828:	90 e0       	ldi	r25, 0x00	; 0
 82a:	88 16       	cp	r8, r24
 82c:	99 06       	cpc	r9, r25
 82e:	b0 f4       	brcc	.+44     	; 0x85c <__DATA_REGION_LENGTH__+0x5c>
 830:	b6 01       	movw	r22, r12
 832:	80 e2       	ldi	r24, 0x20	; 32
 834:	90 e0       	ldi	r25, 0x00	; 0
 836:	0e 94 44 05 	call	0xa88	; 0xa88 <fputc>
 83a:	2a 94       	dec	r2
 83c:	f4 cf       	rjmp	.-24     	; 0x826 <__DATA_REGION_LENGTH__+0x26>
 83e:	f5 01       	movw	r30, r10
 840:	37 fc       	sbrc	r3, 7
 842:	85 91       	lpm	r24, Z+
 844:	37 fe       	sbrs	r3, 7
 846:	81 91       	ld	r24, Z+
 848:	5f 01       	movw	r10, r30
 84a:	b6 01       	movw	r22, r12
 84c:	90 e0       	ldi	r25, 0x00	; 0
 84e:	0e 94 44 05 	call	0xa88	; 0xa88 <fputc>
 852:	21 10       	cpse	r2, r1
 854:	2a 94       	dec	r2
 856:	21 e0       	ldi	r18, 0x01	; 1
 858:	82 1a       	sub	r8, r18
 85a:	91 08       	sbc	r9, r1
 85c:	81 14       	cp	r8, r1
 85e:	91 04       	cpc	r9, r1
 860:	71 f7       	brne	.-36     	; 0x83e <__DATA_REGION_LENGTH__+0x3e>
 862:	e8 c0       	rjmp	.+464    	; 0xa34 <__stack+0x135>
 864:	84 36       	cpi	r24, 0x64	; 100
 866:	11 f0       	breq	.+4      	; 0x86c <__DATA_REGION_LENGTH__+0x6c>
 868:	89 36       	cpi	r24, 0x69	; 105
 86a:	41 f5       	brne	.+80     	; 0x8bc <__DATA_REGION_LENGTH__+0xbc>
 86c:	f8 01       	movw	r30, r16
 86e:	37 fe       	sbrs	r3, 7
 870:	07 c0       	rjmp	.+14     	; 0x880 <__DATA_REGION_LENGTH__+0x80>
 872:	60 81       	ld	r22, Z
 874:	71 81       	ldd	r23, Z+1	; 0x01
 876:	82 81       	ldd	r24, Z+2	; 0x02
 878:	93 81       	ldd	r25, Z+3	; 0x03
 87a:	0c 5f       	subi	r16, 0xFC	; 252
 87c:	1f 4f       	sbci	r17, 0xFF	; 255
 87e:	08 c0       	rjmp	.+16     	; 0x890 <__DATA_REGION_LENGTH__+0x90>
 880:	60 81       	ld	r22, Z
 882:	71 81       	ldd	r23, Z+1	; 0x01
 884:	07 2e       	mov	r0, r23
 886:	00 0c       	add	r0, r0
 888:	88 0b       	sbc	r24, r24
 88a:	99 0b       	sbc	r25, r25
 88c:	0e 5f       	subi	r16, 0xFE	; 254
 88e:	1f 4f       	sbci	r17, 0xFF	; 255
 890:	f3 2d       	mov	r31, r3
 892:	ff 76       	andi	r31, 0x6F	; 111
 894:	3f 2e       	mov	r3, r31
 896:	97 ff       	sbrs	r25, 7
 898:	09 c0       	rjmp	.+18     	; 0x8ac <__DATA_REGION_LENGTH__+0xac>
 89a:	90 95       	com	r25
 89c:	80 95       	com	r24
 89e:	70 95       	com	r23
 8a0:	61 95       	neg	r22
 8a2:	7f 4f       	sbci	r23, 0xFF	; 255
 8a4:	8f 4f       	sbci	r24, 0xFF	; 255
 8a6:	9f 4f       	sbci	r25, 0xFF	; 255
 8a8:	f0 68       	ori	r31, 0x80	; 128
 8aa:	3f 2e       	mov	r3, r31
 8ac:	2a e0       	ldi	r18, 0x0A	; 10
 8ae:	30 e0       	ldi	r19, 0x00	; 0
 8b0:	a3 01       	movw	r20, r6
 8b2:	0e 94 80 05 	call	0xb00	; 0xb00 <__ultoa_invert>
 8b6:	88 2e       	mov	r8, r24
 8b8:	86 18       	sub	r8, r6
 8ba:	45 c0       	rjmp	.+138    	; 0x946 <__stack+0x47>
 8bc:	85 37       	cpi	r24, 0x75	; 117
 8be:	31 f4       	brne	.+12     	; 0x8cc <__DATA_REGION_LENGTH__+0xcc>
 8c0:	23 2d       	mov	r18, r3
 8c2:	2f 7e       	andi	r18, 0xEF	; 239
 8c4:	b2 2e       	mov	r11, r18
 8c6:	2a e0       	ldi	r18, 0x0A	; 10
 8c8:	30 e0       	ldi	r19, 0x00	; 0
 8ca:	25 c0       	rjmp	.+74     	; 0x916 <__stack+0x17>
 8cc:	93 2d       	mov	r25, r3
 8ce:	99 7f       	andi	r25, 0xF9	; 249
 8d0:	b9 2e       	mov	r11, r25
 8d2:	8f 36       	cpi	r24, 0x6F	; 111
 8d4:	c1 f0       	breq	.+48     	; 0x906 <__stack+0x7>
 8d6:	18 f4       	brcc	.+6      	; 0x8de <__DATA_REGION_LENGTH__+0xde>
 8d8:	88 35       	cpi	r24, 0x58	; 88
 8da:	79 f0       	breq	.+30     	; 0x8fa <__DATA_REGION_LENGTH__+0xfa>
 8dc:	b5 c0       	rjmp	.+362    	; 0xa48 <__stack+0x149>
 8de:	80 37       	cpi	r24, 0x70	; 112
 8e0:	19 f0       	breq	.+6      	; 0x8e8 <__DATA_REGION_LENGTH__+0xe8>
 8e2:	88 37       	cpi	r24, 0x78	; 120
 8e4:	21 f0       	breq	.+8      	; 0x8ee <__DATA_REGION_LENGTH__+0xee>
 8e6:	b0 c0       	rjmp	.+352    	; 0xa48 <__stack+0x149>
 8e8:	e9 2f       	mov	r30, r25
 8ea:	e0 61       	ori	r30, 0x10	; 16
 8ec:	be 2e       	mov	r11, r30
 8ee:	b4 fe       	sbrs	r11, 4
 8f0:	0d c0       	rjmp	.+26     	; 0x90c <__stack+0xd>
 8f2:	fb 2d       	mov	r31, r11
 8f4:	f4 60       	ori	r31, 0x04	; 4
 8f6:	bf 2e       	mov	r11, r31
 8f8:	09 c0       	rjmp	.+18     	; 0x90c <__stack+0xd>
 8fa:	34 fe       	sbrs	r3, 4
 8fc:	0a c0       	rjmp	.+20     	; 0x912 <__stack+0x13>
 8fe:	29 2f       	mov	r18, r25
 900:	26 60       	ori	r18, 0x06	; 6
 902:	b2 2e       	mov	r11, r18
 904:	06 c0       	rjmp	.+12     	; 0x912 <__stack+0x13>
 906:	28 e0       	ldi	r18, 0x08	; 8
 908:	30 e0       	ldi	r19, 0x00	; 0
 90a:	05 c0       	rjmp	.+10     	; 0x916 <__stack+0x17>
 90c:	20 e1       	ldi	r18, 0x10	; 16
 90e:	30 e0       	ldi	r19, 0x00	; 0
 910:	02 c0       	rjmp	.+4      	; 0x916 <__stack+0x17>
 912:	20 e1       	ldi	r18, 0x10	; 16
 914:	32 e0       	ldi	r19, 0x02	; 2
 916:	f8 01       	movw	r30, r16
 918:	b7 fe       	sbrs	r11, 7
 91a:	07 c0       	rjmp	.+14     	; 0x92a <__stack+0x2b>
 91c:	60 81       	ld	r22, Z
 91e:	71 81       	ldd	r23, Z+1	; 0x01
 920:	82 81       	ldd	r24, Z+2	; 0x02
 922:	93 81       	ldd	r25, Z+3	; 0x03
 924:	0c 5f       	subi	r16, 0xFC	; 252
 926:	1f 4f       	sbci	r17, 0xFF	; 255
 928:	06 c0       	rjmp	.+12     	; 0x936 <__stack+0x37>
 92a:	60 81       	ld	r22, Z
 92c:	71 81       	ldd	r23, Z+1	; 0x01
 92e:	80 e0       	ldi	r24, 0x00	; 0
 930:	90 e0       	ldi	r25, 0x00	; 0
 932:	0e 5f       	subi	r16, 0xFE	; 254
 934:	1f 4f       	sbci	r17, 0xFF	; 255
 936:	a3 01       	movw	r20, r6
 938:	0e 94 80 05 	call	0xb00	; 0xb00 <__ultoa_invert>
 93c:	88 2e       	mov	r8, r24
 93e:	86 18       	sub	r8, r6
 940:	fb 2d       	mov	r31, r11
 942:	ff 77       	andi	r31, 0x7F	; 127
 944:	3f 2e       	mov	r3, r31
 946:	36 fe       	sbrs	r3, 6
 948:	0d c0       	rjmp	.+26     	; 0x964 <__stack+0x65>
 94a:	23 2d       	mov	r18, r3
 94c:	2e 7f       	andi	r18, 0xFE	; 254
 94e:	a2 2e       	mov	r10, r18
 950:	89 14       	cp	r8, r9
 952:	58 f4       	brcc	.+22     	; 0x96a <__stack+0x6b>
 954:	34 fe       	sbrs	r3, 4
 956:	0b c0       	rjmp	.+22     	; 0x96e <__stack+0x6f>
 958:	32 fc       	sbrc	r3, 2
 95a:	09 c0       	rjmp	.+18     	; 0x96e <__stack+0x6f>
 95c:	83 2d       	mov	r24, r3
 95e:	8e 7e       	andi	r24, 0xEE	; 238
 960:	a8 2e       	mov	r10, r24
 962:	05 c0       	rjmp	.+10     	; 0x96e <__stack+0x6f>
 964:	b8 2c       	mov	r11, r8
 966:	a3 2c       	mov	r10, r3
 968:	03 c0       	rjmp	.+6      	; 0x970 <__stack+0x71>
 96a:	b8 2c       	mov	r11, r8
 96c:	01 c0       	rjmp	.+2      	; 0x970 <__stack+0x71>
 96e:	b9 2c       	mov	r11, r9
 970:	a4 fe       	sbrs	r10, 4
 972:	0f c0       	rjmp	.+30     	; 0x992 <__stack+0x93>
 974:	fe 01       	movw	r30, r28
 976:	e8 0d       	add	r30, r8
 978:	f1 1d       	adc	r31, r1
 97a:	80 81       	ld	r24, Z
 97c:	80 33       	cpi	r24, 0x30	; 48
 97e:	21 f4       	brne	.+8      	; 0x988 <__stack+0x89>
 980:	9a 2d       	mov	r25, r10
 982:	99 7e       	andi	r25, 0xE9	; 233
 984:	a9 2e       	mov	r10, r25
 986:	09 c0       	rjmp	.+18     	; 0x99a <__stack+0x9b>
 988:	a2 fe       	sbrs	r10, 2
 98a:	06 c0       	rjmp	.+12     	; 0x998 <__stack+0x99>
 98c:	b3 94       	inc	r11
 98e:	b3 94       	inc	r11
 990:	04 c0       	rjmp	.+8      	; 0x99a <__stack+0x9b>
 992:	8a 2d       	mov	r24, r10
 994:	86 78       	andi	r24, 0x86	; 134
 996:	09 f0       	breq	.+2      	; 0x99a <__stack+0x9b>
 998:	b3 94       	inc	r11
 99a:	a3 fc       	sbrc	r10, 3
 99c:	11 c0       	rjmp	.+34     	; 0x9c0 <__stack+0xc1>
 99e:	a0 fe       	sbrs	r10, 0
 9a0:	06 c0       	rjmp	.+12     	; 0x9ae <__stack+0xaf>
 9a2:	b2 14       	cp	r11, r2
 9a4:	88 f4       	brcc	.+34     	; 0x9c8 <__stack+0xc9>
 9a6:	28 0c       	add	r2, r8
 9a8:	92 2c       	mov	r9, r2
 9aa:	9b 18       	sub	r9, r11
 9ac:	0e c0       	rjmp	.+28     	; 0x9ca <__stack+0xcb>
 9ae:	b2 14       	cp	r11, r2
 9b0:	60 f4       	brcc	.+24     	; 0x9ca <__stack+0xcb>
 9b2:	b6 01       	movw	r22, r12
 9b4:	80 e2       	ldi	r24, 0x20	; 32
 9b6:	90 e0       	ldi	r25, 0x00	; 0
 9b8:	0e 94 44 05 	call	0xa88	; 0xa88 <fputc>
 9bc:	b3 94       	inc	r11
 9be:	f7 cf       	rjmp	.-18     	; 0x9ae <__stack+0xaf>
 9c0:	b2 14       	cp	r11, r2
 9c2:	18 f4       	brcc	.+6      	; 0x9ca <__stack+0xcb>
 9c4:	2b 18       	sub	r2, r11
 9c6:	02 c0       	rjmp	.+4      	; 0x9cc <__stack+0xcd>
 9c8:	98 2c       	mov	r9, r8
 9ca:	21 2c       	mov	r2, r1
 9cc:	a4 fe       	sbrs	r10, 4
 9ce:	10 c0       	rjmp	.+32     	; 0x9f0 <__stack+0xf1>
 9d0:	b6 01       	movw	r22, r12
 9d2:	80 e3       	ldi	r24, 0x30	; 48
 9d4:	90 e0       	ldi	r25, 0x00	; 0
 9d6:	0e 94 44 05 	call	0xa88	; 0xa88 <fputc>
 9da:	a2 fe       	sbrs	r10, 2
 9dc:	17 c0       	rjmp	.+46     	; 0xa0c <__stack+0x10d>
 9de:	a1 fc       	sbrc	r10, 1
 9e0:	03 c0       	rjmp	.+6      	; 0x9e8 <__stack+0xe9>
 9e2:	88 e7       	ldi	r24, 0x78	; 120
 9e4:	90 e0       	ldi	r25, 0x00	; 0
 9e6:	02 c0       	rjmp	.+4      	; 0x9ec <__stack+0xed>
 9e8:	88 e5       	ldi	r24, 0x58	; 88
 9ea:	90 e0       	ldi	r25, 0x00	; 0
 9ec:	b6 01       	movw	r22, r12
 9ee:	0c c0       	rjmp	.+24     	; 0xa08 <__stack+0x109>
 9f0:	8a 2d       	mov	r24, r10
 9f2:	86 78       	andi	r24, 0x86	; 134
 9f4:	59 f0       	breq	.+22     	; 0xa0c <__stack+0x10d>
 9f6:	a1 fe       	sbrs	r10, 1
 9f8:	02 c0       	rjmp	.+4      	; 0x9fe <__stack+0xff>
 9fa:	8b e2       	ldi	r24, 0x2B	; 43
 9fc:	01 c0       	rjmp	.+2      	; 0xa00 <__stack+0x101>
 9fe:	80 e2       	ldi	r24, 0x20	; 32
 a00:	a7 fc       	sbrc	r10, 7
 a02:	8d e2       	ldi	r24, 0x2D	; 45
 a04:	b6 01       	movw	r22, r12
 a06:	90 e0       	ldi	r25, 0x00	; 0
 a08:	0e 94 44 05 	call	0xa88	; 0xa88 <fputc>
 a0c:	89 14       	cp	r8, r9
 a0e:	38 f4       	brcc	.+14     	; 0xa1e <__stack+0x11f>
 a10:	b6 01       	movw	r22, r12
 a12:	80 e3       	ldi	r24, 0x30	; 48
 a14:	90 e0       	ldi	r25, 0x00	; 0
 a16:	0e 94 44 05 	call	0xa88	; 0xa88 <fputc>
 a1a:	9a 94       	dec	r9
 a1c:	f7 cf       	rjmp	.-18     	; 0xa0c <__stack+0x10d>
 a1e:	8a 94       	dec	r8
 a20:	f3 01       	movw	r30, r6
 a22:	e8 0d       	add	r30, r8
 a24:	f1 1d       	adc	r31, r1
 a26:	80 81       	ld	r24, Z
 a28:	b6 01       	movw	r22, r12
 a2a:	90 e0       	ldi	r25, 0x00	; 0
 a2c:	0e 94 44 05 	call	0xa88	; 0xa88 <fputc>
 a30:	81 10       	cpse	r8, r1
 a32:	f5 cf       	rjmp	.-22     	; 0xa1e <__stack+0x11f>
 a34:	22 20       	and	r2, r2
 a36:	09 f4       	brne	.+2      	; 0xa3a <__stack+0x13b>
 a38:	42 ce       	rjmp	.-892    	; 0x6be <vfprintf+0x24>
 a3a:	b6 01       	movw	r22, r12
 a3c:	80 e2       	ldi	r24, 0x20	; 32
 a3e:	90 e0       	ldi	r25, 0x00	; 0
 a40:	0e 94 44 05 	call	0xa88	; 0xa88 <fputc>
 a44:	2a 94       	dec	r2
 a46:	f6 cf       	rjmp	.-20     	; 0xa34 <__stack+0x135>
 a48:	f6 01       	movw	r30, r12
 a4a:	86 81       	ldd	r24, Z+6	; 0x06
 a4c:	97 81       	ldd	r25, Z+7	; 0x07
 a4e:	02 c0       	rjmp	.+4      	; 0xa54 <__stack+0x155>
 a50:	8f ef       	ldi	r24, 0xFF	; 255
 a52:	9f ef       	ldi	r25, 0xFF	; 255
 a54:	2b 96       	adiw	r28, 0x0b	; 11
 a56:	e2 e1       	ldi	r30, 0x12	; 18
 a58:	0c 94 fa 05 	jmp	0xbf4	; 0xbf4 <__epilogue_restores__>

00000a5c <strnlen_P>:
 a5c:	fc 01       	movw	r30, r24
 a5e:	05 90       	lpm	r0, Z+
 a60:	61 50       	subi	r22, 0x01	; 1
 a62:	70 40       	sbci	r23, 0x00	; 0
 a64:	01 10       	cpse	r0, r1
 a66:	d8 f7       	brcc	.-10     	; 0xa5e <strnlen_P+0x2>
 a68:	80 95       	com	r24
 a6a:	90 95       	com	r25
 a6c:	8e 0f       	add	r24, r30
 a6e:	9f 1f       	adc	r25, r31
 a70:	08 95       	ret

00000a72 <strnlen>:
 a72:	fc 01       	movw	r30, r24
 a74:	61 50       	subi	r22, 0x01	; 1
 a76:	70 40       	sbci	r23, 0x00	; 0
 a78:	01 90       	ld	r0, Z+
 a7a:	01 10       	cpse	r0, r1
 a7c:	d8 f7       	brcc	.-10     	; 0xa74 <strnlen+0x2>
 a7e:	80 95       	com	r24
 a80:	90 95       	com	r25
 a82:	8e 0f       	add	r24, r30
 a84:	9f 1f       	adc	r25, r31
 a86:	08 95       	ret

00000a88 <fputc>:
 a88:	0f 93       	push	r16
 a8a:	1f 93       	push	r17
 a8c:	cf 93       	push	r28
 a8e:	df 93       	push	r29
 a90:	fb 01       	movw	r30, r22
 a92:	23 81       	ldd	r18, Z+3	; 0x03
 a94:	21 fd       	sbrc	r18, 1
 a96:	03 c0       	rjmp	.+6      	; 0xa9e <fputc+0x16>
 a98:	8f ef       	ldi	r24, 0xFF	; 255
 a9a:	9f ef       	ldi	r25, 0xFF	; 255
 a9c:	2c c0       	rjmp	.+88     	; 0xaf6 <fputc+0x6e>
 a9e:	22 ff       	sbrs	r18, 2
 aa0:	16 c0       	rjmp	.+44     	; 0xace <fputc+0x46>
 aa2:	46 81       	ldd	r20, Z+6	; 0x06
 aa4:	57 81       	ldd	r21, Z+7	; 0x07
 aa6:	24 81       	ldd	r18, Z+4	; 0x04
 aa8:	35 81       	ldd	r19, Z+5	; 0x05
 aaa:	42 17       	cp	r20, r18
 aac:	53 07       	cpc	r21, r19
 aae:	44 f4       	brge	.+16     	; 0xac0 <fputc+0x38>
 ab0:	a0 81       	ld	r26, Z
 ab2:	b1 81       	ldd	r27, Z+1	; 0x01
 ab4:	9d 01       	movw	r18, r26
 ab6:	2f 5f       	subi	r18, 0xFF	; 255
 ab8:	3f 4f       	sbci	r19, 0xFF	; 255
 aba:	31 83       	std	Z+1, r19	; 0x01
 abc:	20 83       	st	Z, r18
 abe:	8c 93       	st	X, r24
 ac0:	26 81       	ldd	r18, Z+6	; 0x06
 ac2:	37 81       	ldd	r19, Z+7	; 0x07
 ac4:	2f 5f       	subi	r18, 0xFF	; 255
 ac6:	3f 4f       	sbci	r19, 0xFF	; 255
 ac8:	37 83       	std	Z+7, r19	; 0x07
 aca:	26 83       	std	Z+6, r18	; 0x06
 acc:	14 c0       	rjmp	.+40     	; 0xaf6 <fputc+0x6e>
 ace:	8b 01       	movw	r16, r22
 ad0:	ec 01       	movw	r28, r24
 ad2:	fb 01       	movw	r30, r22
 ad4:	00 84       	ldd	r0, Z+8	; 0x08
 ad6:	f1 85       	ldd	r31, Z+9	; 0x09
 ad8:	e0 2d       	mov	r30, r0
 ada:	09 95       	icall
 adc:	89 2b       	or	r24, r25
 ade:	e1 f6       	brne	.-72     	; 0xa98 <fputc+0x10>
 ae0:	d8 01       	movw	r26, r16
 ae2:	16 96       	adiw	r26, 0x06	; 6
 ae4:	8d 91       	ld	r24, X+
 ae6:	9c 91       	ld	r25, X
 ae8:	17 97       	sbiw	r26, 0x07	; 7
 aea:	01 96       	adiw	r24, 0x01	; 1
 aec:	17 96       	adiw	r26, 0x07	; 7
 aee:	9c 93       	st	X, r25
 af0:	8e 93       	st	-X, r24
 af2:	16 97       	sbiw	r26, 0x06	; 6
 af4:	ce 01       	movw	r24, r28
 af6:	df 91       	pop	r29
 af8:	cf 91       	pop	r28
 afa:	1f 91       	pop	r17
 afc:	0f 91       	pop	r16
 afe:	08 95       	ret

00000b00 <__ultoa_invert>:
 b00:	fa 01       	movw	r30, r20
 b02:	aa 27       	eor	r26, r26
 b04:	28 30       	cpi	r18, 0x08	; 8
 b06:	51 f1       	breq	.+84     	; 0xb5c <__ultoa_invert+0x5c>
 b08:	20 31       	cpi	r18, 0x10	; 16
 b0a:	81 f1       	breq	.+96     	; 0xb6c <__ultoa_invert+0x6c>
 b0c:	e8 94       	clt
 b0e:	6f 93       	push	r22
 b10:	6e 7f       	andi	r22, 0xFE	; 254
 b12:	6e 5f       	subi	r22, 0xFE	; 254
 b14:	7f 4f       	sbci	r23, 0xFF	; 255
 b16:	8f 4f       	sbci	r24, 0xFF	; 255
 b18:	9f 4f       	sbci	r25, 0xFF	; 255
 b1a:	af 4f       	sbci	r26, 0xFF	; 255
 b1c:	b1 e0       	ldi	r27, 0x01	; 1
 b1e:	3e d0       	rcall	.+124    	; 0xb9c <__ultoa_invert+0x9c>
 b20:	b4 e0       	ldi	r27, 0x04	; 4
 b22:	3c d0       	rcall	.+120    	; 0xb9c <__ultoa_invert+0x9c>
 b24:	67 0f       	add	r22, r23
 b26:	78 1f       	adc	r23, r24
 b28:	89 1f       	adc	r24, r25
 b2a:	9a 1f       	adc	r25, r26
 b2c:	a1 1d       	adc	r26, r1
 b2e:	68 0f       	add	r22, r24
 b30:	79 1f       	adc	r23, r25
 b32:	8a 1f       	adc	r24, r26
 b34:	91 1d       	adc	r25, r1
 b36:	a1 1d       	adc	r26, r1
 b38:	6a 0f       	add	r22, r26
 b3a:	71 1d       	adc	r23, r1
 b3c:	81 1d       	adc	r24, r1
 b3e:	91 1d       	adc	r25, r1
 b40:	a1 1d       	adc	r26, r1
 b42:	20 d0       	rcall	.+64     	; 0xb84 <__ultoa_invert+0x84>
 b44:	09 f4       	brne	.+2      	; 0xb48 <__ultoa_invert+0x48>
 b46:	68 94       	set
 b48:	3f 91       	pop	r19
 b4a:	2a e0       	ldi	r18, 0x0A	; 10
 b4c:	26 9f       	mul	r18, r22
 b4e:	11 24       	eor	r1, r1
 b50:	30 19       	sub	r19, r0
 b52:	30 5d       	subi	r19, 0xD0	; 208
 b54:	31 93       	st	Z+, r19
 b56:	de f6       	brtc	.-74     	; 0xb0e <__ultoa_invert+0xe>
 b58:	cf 01       	movw	r24, r30
 b5a:	08 95       	ret
 b5c:	46 2f       	mov	r20, r22
 b5e:	47 70       	andi	r20, 0x07	; 7
 b60:	40 5d       	subi	r20, 0xD0	; 208
 b62:	41 93       	st	Z+, r20
 b64:	b3 e0       	ldi	r27, 0x03	; 3
 b66:	0f d0       	rcall	.+30     	; 0xb86 <__ultoa_invert+0x86>
 b68:	c9 f7       	brne	.-14     	; 0xb5c <__ultoa_invert+0x5c>
 b6a:	f6 cf       	rjmp	.-20     	; 0xb58 <__ultoa_invert+0x58>
 b6c:	46 2f       	mov	r20, r22
 b6e:	4f 70       	andi	r20, 0x0F	; 15
 b70:	40 5d       	subi	r20, 0xD0	; 208
 b72:	4a 33       	cpi	r20, 0x3A	; 58
 b74:	18 f0       	brcs	.+6      	; 0xb7c <__ultoa_invert+0x7c>
 b76:	49 5d       	subi	r20, 0xD9	; 217
 b78:	31 fd       	sbrc	r19, 1
 b7a:	40 52       	subi	r20, 0x20	; 32
 b7c:	41 93       	st	Z+, r20
 b7e:	02 d0       	rcall	.+4      	; 0xb84 <__ultoa_invert+0x84>
 b80:	a9 f7       	brne	.-22     	; 0xb6c <__ultoa_invert+0x6c>
 b82:	ea cf       	rjmp	.-44     	; 0xb58 <__ultoa_invert+0x58>
 b84:	b4 e0       	ldi	r27, 0x04	; 4
 b86:	a6 95       	lsr	r26
 b88:	97 95       	ror	r25
 b8a:	87 95       	ror	r24
 b8c:	77 95       	ror	r23
 b8e:	67 95       	ror	r22
 b90:	ba 95       	dec	r27
 b92:	c9 f7       	brne	.-14     	; 0xb86 <__ultoa_invert+0x86>
 b94:	00 97       	sbiw	r24, 0x00	; 0
 b96:	61 05       	cpc	r22, r1
 b98:	71 05       	cpc	r23, r1
 b9a:	08 95       	ret
 b9c:	9b 01       	movw	r18, r22
 b9e:	ac 01       	movw	r20, r24
 ba0:	0a 2e       	mov	r0, r26
 ba2:	06 94       	lsr	r0
 ba4:	57 95       	ror	r21
 ba6:	47 95       	ror	r20
 ba8:	37 95       	ror	r19
 baa:	27 95       	ror	r18
 bac:	ba 95       	dec	r27
 bae:	c9 f7       	brne	.-14     	; 0xba2 <__ultoa_invert+0xa2>
 bb0:	62 0f       	add	r22, r18
 bb2:	73 1f       	adc	r23, r19
 bb4:	84 1f       	adc	r24, r20
 bb6:	95 1f       	adc	r25, r21
 bb8:	a0 1d       	adc	r26, r0
 bba:	08 95       	ret

00000bbc <__prologue_saves__>:
 bbc:	2f 92       	push	r2
 bbe:	3f 92       	push	r3
 bc0:	4f 92       	push	r4
 bc2:	5f 92       	push	r5
 bc4:	6f 92       	push	r6
 bc6:	7f 92       	push	r7
 bc8:	8f 92       	push	r8
 bca:	9f 92       	push	r9
 bcc:	af 92       	push	r10
 bce:	bf 92       	push	r11
 bd0:	cf 92       	push	r12
 bd2:	df 92       	push	r13
 bd4:	ef 92       	push	r14
 bd6:	ff 92       	push	r15
 bd8:	0f 93       	push	r16
 bda:	1f 93       	push	r17
 bdc:	cf 93       	push	r28
 bde:	df 93       	push	r29
 be0:	cd b7       	in	r28, 0x3d	; 61
 be2:	de b7       	in	r29, 0x3e	; 62
 be4:	ca 1b       	sub	r28, r26
 be6:	db 0b       	sbc	r29, r27
 be8:	0f b6       	in	r0, 0x3f	; 63
 bea:	f8 94       	cli
 bec:	de bf       	out	0x3e, r29	; 62
 bee:	0f be       	out	0x3f, r0	; 63
 bf0:	cd bf       	out	0x3d, r28	; 61
 bf2:	09 94       	ijmp

00000bf4 <__epilogue_restores__>:
 bf4:	2a 88       	ldd	r2, Y+18	; 0x12
 bf6:	39 88       	ldd	r3, Y+17	; 0x11
 bf8:	48 88       	ldd	r4, Y+16	; 0x10
 bfa:	5f 84       	ldd	r5, Y+15	; 0x0f
 bfc:	6e 84       	ldd	r6, Y+14	; 0x0e
 bfe:	7d 84       	ldd	r7, Y+13	; 0x0d
 c00:	8c 84       	ldd	r8, Y+12	; 0x0c
 c02:	9b 84       	ldd	r9, Y+11	; 0x0b
 c04:	aa 84       	ldd	r10, Y+10	; 0x0a
 c06:	b9 84       	ldd	r11, Y+9	; 0x09
 c08:	c8 84       	ldd	r12, Y+8	; 0x08
 c0a:	df 80       	ldd	r13, Y+7	; 0x07
 c0c:	ee 80       	ldd	r14, Y+6	; 0x06
 c0e:	fd 80       	ldd	r15, Y+5	; 0x05
 c10:	0c 81       	ldd	r16, Y+4	; 0x04
 c12:	1b 81       	ldd	r17, Y+3	; 0x03
 c14:	aa 81       	ldd	r26, Y+2	; 0x02
 c16:	b9 81       	ldd	r27, Y+1	; 0x01
 c18:	ce 0f       	add	r28, r30
 c1a:	d1 1d       	adc	r29, r1
 c1c:	0f b6       	in	r0, 0x3f	; 63
 c1e:	f8 94       	cli
 c20:	de bf       	out	0x3e, r29	; 62
 c22:	0f be       	out	0x3f, r0	; 63
 c24:	cd bf       	out	0x3d, r28	; 61
 c26:	ed 01       	movw	r28, r26
 c28:	08 95       	ret

00000c2a <_exit>:
 c2a:	f8 94       	cli

00000c2c <__stop_program>:
 c2c:	ff cf       	rjmp	.-2      	; 0xc2c <__stop_program>
