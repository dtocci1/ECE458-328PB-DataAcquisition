
DataAcquisition.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000a4  00800100  00000c06  00000c9a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c06  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  008001a4  008001a4  00000d3e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000d3e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000d9c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000058  00000000  00000000  00000ddc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000cd1  00000000  00000000  00000e34  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a96  00000000  00000000  00001b05  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000416  00000000  00000000  0000259b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000d0  00000000  00000000  000029b4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005e2  00000000  00000000  00002a84  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000245  00000000  00000000  00003066  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000048  00000000  00000000  000032ab  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
   4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
   8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
   c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  10:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  14:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  18:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  1c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  20:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  24:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  28:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  2c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  30:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  34:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  38:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  3c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  40:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  44:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  48:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  4c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  50:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  54:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  58:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  5c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  60:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  64:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  68:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  6c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  70:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  74:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  78:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  7c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  80:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  84:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  88:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  8c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  90:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  94:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  98:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  9c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  ac:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  b0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d8 e0       	ldi	r29, 0x08	; 8
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61

000000c0 <__do_copy_data>:
  c0:	11 e0       	ldi	r17, 0x01	; 1
  c2:	a0 e0       	ldi	r26, 0x00	; 0
  c4:	b1 e0       	ldi	r27, 0x01	; 1
  c6:	e6 e0       	ldi	r30, 0x06	; 6
  c8:	fc e0       	ldi	r31, 0x0C	; 12
  ca:	02 c0       	rjmp	.+4      	; 0xd0 <__do_copy_data+0x10>
  cc:	05 90       	lpm	r0, Z+
  ce:	0d 92       	st	X+, r0
  d0:	a4 3a       	cpi	r26, 0xA4	; 164
  d2:	b1 07       	cpc	r27, r17
  d4:	d9 f7       	brne	.-10     	; 0xcc <__do_copy_data+0xc>

000000d6 <__do_clear_bss>:
  d6:	21 e0       	ldi	r18, 0x01	; 1
  d8:	a4 ea       	ldi	r26, 0xA4	; 164
  da:	b1 e0       	ldi	r27, 0x01	; 1
  dc:	01 c0       	rjmp	.+2      	; 0xe0 <.do_clear_bss_start>

000000de <.do_clear_bss_loop>:
  de:	1d 92       	st	X+, r1

000000e0 <.do_clear_bss_start>:
  e0:	aa 3a       	cpi	r26, 0xAA	; 170
  e2:	b2 07       	cpc	r27, r18
  e4:	e1 f7       	brne	.-8      	; 0xde <.do_clear_bss_loop>
  e6:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <main>
  ea:	0c 94 01 06 	jmp	0xc02	; 0xc02 <_exit>

000000ee <__bad_interrupt>:
  ee:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000f2 <USART0SendByte>:
float returnTemperature(uint16_t resistance) // requires compensation
{
	float conversion;
	conversion = 0.260075107866203 * resistance - 260.068512926113;
	return conversion;
}
  f2:	cf 93       	push	r28
  f4:	c8 2f       	mov	r28, r24
  f6:	8a 30       	cpi	r24, 0x0A	; 10
  f8:	19 f4       	brne	.+6      	; 0x100 <USART0SendByte+0xe>
  fa:	8d e0       	ldi	r24, 0x0D	; 13
  fc:	0e 94 79 00 	call	0xf2	; 0xf2 <USART0SendByte>
 100:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 104:	85 ff       	sbrs	r24, 5
 106:	fc cf       	rjmp	.-8      	; 0x100 <USART0SendByte+0xe>
 108:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 10c:	80 e0       	ldi	r24, 0x00	; 0
 10e:	90 e0       	ldi	r25, 0x00	; 0
 110:	cf 91       	pop	r28
 112:	08 95       	ret

00000114 <returnPressure>:
 114:	bc 01       	movw	r22, r24
 116:	80 e0       	ldi	r24, 0x00	; 0
 118:	90 e0       	ldi	r25, 0x00	; 0
 11a:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <__floatunsisf>
 11e:	20 e0       	ldi	r18, 0x00	; 0
 120:	30 e0       	ldi	r19, 0x00	; 0
 122:	40 e8       	ldi	r20, 0x80	; 128
 124:	5a e3       	ldi	r21, 0x3A	; 58
 126:	0e 94 86 02 	call	0x50c	; 0x50c <__mulsf3>
 12a:	20 e0       	ldi	r18, 0x00	; 0
 12c:	30 e0       	ldi	r19, 0x00	; 0
 12e:	40 ea       	ldi	r20, 0xA0	; 160
 130:	50 e4       	ldi	r21, 0x40	; 64
 132:	0e 94 86 02 	call	0x50c	; 0x50c <__mulsf3>
 136:	20 e0       	ldi	r18, 0x00	; 0
 138:	30 e0       	ldi	r19, 0x00	; 0
 13a:	40 e0       	ldi	r20, 0x00	; 0
 13c:	5f e3       	ldi	r21, 0x3F	; 63
 13e:	0e 94 55 01 	call	0x2aa	; 0x2aa <__subsf3>
 142:	20 e5       	ldi	r18, 0x50	; 80
 144:	3d e0       	ldi	r19, 0x0D	; 13
 146:	4b ec       	ldi	r20, 0xCB	; 203
 148:	51 e4       	ldi	r21, 0x41	; 65
 14a:	0e 94 86 02 	call	0x50c	; 0x50c <__mulsf3>
 14e:	23 e8       	ldi	r18, 0x83	; 131
 150:	30 ec       	ldi	r19, 0xC0	; 192
 152:	46 e4       	ldi	r20, 0x46	; 70
 154:	51 e4       	ldi	r21, 0x41	; 65
 156:	0e 94 56 01 	call	0x2ac	; 0x2ac <__addsf3>
 15a:	20 e0       	ldi	r18, 0x00	; 0
 15c:	30 e0       	ldi	r19, 0x00	; 0
 15e:	4a e7       	ldi	r20, 0x7A	; 122
 160:	54 e4       	ldi	r21, 0x44	; 68
 162:	0e 94 86 02 	call	0x50c	; 0x50c <__mulsf3>
 166:	08 95       	ret

00000168 <returnMoisture>:
	// Moisture sensor measures from 0 to 3.085V max based on water level
	// In theory, more voltage indicates more water is hitting the sensor
	// This needs to be validated in testing.
	// If statement need to be adjusted, reaches level 5 at half way on sensor somehow
	float conversion;
	conversion = ((double)moisture/1024) * 5000; // convert to voltage (0-5V)
 168:	bc 01       	movw	r22, r24
 16a:	80 e0       	ldi	r24, 0x00	; 0
 16c:	90 e0       	ldi	r25, 0x00	; 0
 16e:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <__floatunsisf>
 172:	20 e0       	ldi	r18, 0x00	; 0
 174:	30 e0       	ldi	r19, 0x00	; 0
 176:	40 e8       	ldi	r20, 0x80	; 128
 178:	5a e3       	ldi	r21, 0x3A	; 58
 17a:	0e 94 86 02 	call	0x50c	; 0x50c <__mulsf3>
 17e:	20 e0       	ldi	r18, 0x00	; 0
 180:	30 e4       	ldi	r19, 0x40	; 64
 182:	4c e9       	ldi	r20, 0x9C	; 156
 184:	55 e4       	ldi	r21, 0x45	; 69
 186:	0e 94 86 02 	call	0x50c	; 0x50c <__mulsf3>
	return conversion;
 18a:	0e 94 c2 01 	call	0x384	; 0x384 <__fixsfsi>
	else if (conversion < 2.4)
		return 4;
	else
		return 5;
		
}
 18e:	cb 01       	movw	r24, r22
 190:	08 95       	ret

00000192 <USART0Init>:

void USART0Init(void)
{
	// Set baud rate
	UBRR0H = (uint8_t)(UBRR_VALUE>>8);
 192:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
	UBRR0L = (uint8_t)UBRR_VALUE;
 196:	87 e6       	ldi	r24, 0x67	; 103
 198:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
	// Set frame format to 8 data bits, no parity, 1 stop bit
	UCSR0C |= (1<<UCSZ01)|(1<<UCSZ00);
 19c:	e2 ec       	ldi	r30, 0xC2	; 194
 19e:	f0 e0       	ldi	r31, 0x00	; 0
 1a0:	80 81       	ld	r24, Z
 1a2:	86 60       	ori	r24, 0x06	; 6
 1a4:	80 83       	st	Z, r24
	//enable transmission and reception
	UCSR0B |= (1<<RXEN0)|(1<<TXEN0);
 1a6:	e1 ec       	ldi	r30, 0xC1	; 193
 1a8:	f0 e0       	ldi	r31, 0x00	; 0
 1aa:	80 81       	ld	r24, Z
 1ac:	88 61       	ori	r24, 0x18	; 24
 1ae:	80 83       	st	Z, r24
 1b0:	08 95       	ret

000001b2 <InitADC>:
//set stream pointer
FILE usart0_str = FDEV_SETUP_STREAM(USART0SendByte, NULL, _FDEV_SETUP_WRITE);
void InitADC()
{
    // Select Vref = AVcc
    ADMUX |= (1<<REFS0);
 1b2:	ec e7       	ldi	r30, 0x7C	; 124
 1b4:	f0 e0       	ldi	r31, 0x00	; 0
 1b6:	80 81       	ld	r24, Z
 1b8:	80 64       	ori	r24, 0x40	; 64
 1ba:	80 83       	st	Z, r24
    //set prescaller to 128 and enable ADC  
    ADCSRA |= (1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0)|(1<<ADEN);     
 1bc:	ea e7       	ldi	r30, 0x7A	; 122
 1be:	f0 e0       	ldi	r31, 0x00	; 0
 1c0:	80 81       	ld	r24, Z
 1c2:	87 68       	ori	r24, 0x87	; 135
 1c4:	80 83       	st	Z, r24
 1c6:	08 95       	ret

000001c8 <ReadADC>:
}

uint16_t ReadADC(uint8_t ADCchannel)
{
    //select ADC channel with safety mask
    ADMUX = (ADMUX & 0xF0) | (ADCchannel & 0x0F); 
 1c8:	ec e7       	ldi	r30, 0x7C	; 124
 1ca:	f0 e0       	ldi	r31, 0x00	; 0
 1cc:	90 81       	ld	r25, Z
 1ce:	90 7f       	andi	r25, 0xF0	; 240
 1d0:	8f 70       	andi	r24, 0x0F	; 15
 1d2:	89 2b       	or	r24, r25
 1d4:	80 83       	st	Z, r24
    //single conversion mode
    ADCSRA |= (1<<ADSC);
 1d6:	ea e7       	ldi	r30, 0x7A	; 122
 1d8:	f0 e0       	ldi	r31, 0x00	; 0
 1da:	80 81       	ld	r24, Z
 1dc:	80 64       	ori	r24, 0x40	; 64
 1de:	80 83       	st	Z, r24
    // wait until ADC conversion is complete
    while( ADCSRA & (1<<ADSC) );
 1e0:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
 1e4:	86 fd       	sbrc	r24, 6
 1e6:	fc cf       	rjmp	.-8      	; 0x1e0 <ReadADC+0x18>
   return ADC;
 1e8:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
 1ec:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
}
 1f0:	08 95       	ret

000001f2 <main>:
{
	double rtdVal, presVal, moisVal, tempVal;
	uint16_t curTime = 0;
	uint16_t convTempVal = 0;
	//initialize ADC
	InitADC();
 1f2:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <InitADC>
	//Initialize USART0
	USART0Init();
 1f6:	0e 94 c9 00 	call	0x192	; 0x192 <USART0Init>
	//assign our stream to standard I/O streams
	stdout=&usart0_str;
 1fa:	80 e0       	ldi	r24, 0x00	; 0
 1fc:	91 e0       	ldi	r25, 0x01	; 1
 1fe:	90 93 a7 01 	sts	0x01A7, r25	; 0x8001a7 <__data_end+0x3>
 202:	80 93 a6 01 	sts	0x01A6, r24	; 0x8001a6 <__data_end+0x2>
	printf("Time (min)\tTemperature (C)\tPressure (mPSI)\tMoisture (V)\n"); // 15 char columns with tab spacing
 206:	8e e0       	ldi	r24, 0x0E	; 14
 208:	91 e0       	ldi	r25, 0x01	; 1
 20a:	0e 94 09 03 	call	0x612	; 0x612 <puts>
	printf("------------------------------------------------------------------------------\n");
 20e:	86 e4       	ldi	r24, 0x46	; 70
 210:	91 e0       	ldi	r25, 0x01	; 1
 212:	0e 94 09 03 	call	0x612	; 0x612 <puts>
}

int main()
{
	double rtdVal, presVal, moisVal, tempVal;
	uint16_t curTime = 0;
 216:	00 e0       	ldi	r16, 0x00	; 0
 218:	10 e0       	ldi	r17, 0x00	; 0
	stdout=&usart0_str;
	printf("Time (min)\tTemperature (C)\tPressure (mPSI)\tMoisture (V)\n"); // 15 char columns with tab spacing
	printf("------------------------------------------------------------------------------\n");
	while(1)
	{
		rtdVal = 2.042990654 * ReadADC(0); // translate voltage change to resistance
 21a:	80 e0       	ldi	r24, 0x00	; 0
 21c:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <ReadADC>
		//tempVal = returnTemperature(rtdVal); // Convert resistance to temperature via linear regression based on table
		tempVal = -55;
		presVal = returnPressure(ReadADC(1)); // Calculate pressure
 220:	81 e0       	ldi	r24, 0x01	; 1
 222:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <ReadADC>
 226:	0e 94 8a 00 	call	0x114	; 0x114 <returnPressure>
 22a:	4b 01       	movw	r8, r22
 22c:	5c 01       	movw	r10, r24
		moisVal = returnMoisture(ReadADC(2));	// Level from 1 - 5: 1 being light mist, 5 being heavy rainfall
 22e:	82 e0       	ldi	r24, 0x02	; 2
 230:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <ReadADC>
 234:	0e 94 b4 00 	call	0x168	; 0x168 <returnMoisture>
 238:	f8 2e       	mov	r15, r24
 23a:	e9 2e       	mov	r14, r25
		
		// "Print" results to stdout (USART)
		printf("%u\t\t\t",curTime);
 23c:	1f 93       	push	r17
 23e:	0f 93       	push	r16
 240:	c6 e9       	ldi	r28, 0x96	; 150
 242:	d1 e0       	ldi	r29, 0x01	; 1
 244:	df 93       	push	r29
 246:	cf 93       	push	r28
 248:	0e 94 f3 02 	call	0x5e6	; 0x5e6 <printf>
		if(tempVal < 0) {
			convTempVal = 0 + -1*tempVal;
			printf("-%u\t\t\t", convTempVal);
 24c:	1f 92       	push	r1
 24e:	87 e3       	ldi	r24, 0x37	; 55
 250:	8f 93       	push	r24
 252:	85 e9       	ldi	r24, 0x95	; 149
 254:	91 e0       	ldi	r25, 0x01	; 1
 256:	9f 93       	push	r25
 258:	8f 93       	push	r24
 25a:	0e 94 f3 02 	call	0x5e6	; 0x5e6 <printf>
		else
		{
			convTempVal = tempVal;
			printf("%u\t\t\t", convTempVal);
		}
		printf("%u\t\t\t",(uint16_t)presVal);
 25e:	c5 01       	movw	r24, r10
 260:	b4 01       	movw	r22, r8
 262:	0e 94 c9 01 	call	0x392	; 0x392 <__fixunssfsi>
 266:	7f 93       	push	r23
 268:	6f 93       	push	r22
 26a:	df 93       	push	r29
 26c:	cf 93       	push	r28
 26e:	0e 94 f3 02 	call	0x5e6	; 0x5e6 <printf>
		printf("%u\t\t\t\n",(uint16_t)moisVal);
 272:	ef 92       	push	r14
 274:	ff 92       	push	r15
 276:	8c e9       	ldi	r24, 0x9C	; 156
 278:	91 e0       	ldi	r25, 0x01	; 1
 27a:	9f 93       	push	r25
 27c:	8f 93       	push	r24
 27e:	0e 94 f3 02 	call	0x5e6	; 0x5e6 <printf>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 282:	8f ef       	ldi	r24, 0xFF	; 255
 284:	9b e4       	ldi	r25, 0x4B	; 75
 286:	2d e1       	ldi	r18, 0x1D	; 29
 288:	81 50       	subi	r24, 0x01	; 1
 28a:	90 40       	sbci	r25, 0x00	; 0
 28c:	20 40       	sbci	r18, 0x00	; 0
 28e:	e1 f7       	brne	.-8      	; 0x288 <main+0x96>
 290:	00 c0       	rjmp	.+0      	; 0x292 <main+0xa0>
 292:	00 00       	nop
		_delay_ms(600);
		curTime += 1;
 294:	0f 5f       	subi	r16, 0xFF	; 255
 296:	1f 4f       	sbci	r17, 0xFF	; 255
 298:	8d b7       	in	r24, 0x3d	; 61
 29a:	9e b7       	in	r25, 0x3e	; 62
 29c:	40 96       	adiw	r24, 0x10	; 16
 29e:	0f b6       	in	r0, 0x3f	; 63
 2a0:	f8 94       	cli
 2a2:	9e bf       	out	0x3e, r25	; 62
 2a4:	0f be       	out	0x3f, r0	; 63
 2a6:	8d bf       	out	0x3d, r24	; 61
 2a8:	b8 cf       	rjmp	.-144    	; 0x21a <main+0x28>

000002aa <__subsf3>:
 2aa:	50 58       	subi	r21, 0x80	; 128

000002ac <__addsf3>:
 2ac:	bb 27       	eor	r27, r27
 2ae:	aa 27       	eor	r26, r26
 2b0:	0e 94 6d 01 	call	0x2da	; 0x2da <__addsf3x>
 2b4:	0c 94 4c 02 	jmp	0x498	; 0x498 <__fp_round>
 2b8:	0e 94 3e 02 	call	0x47c	; 0x47c <__fp_pscA>
 2bc:	38 f0       	brcs	.+14     	; 0x2cc <__addsf3+0x20>
 2be:	0e 94 45 02 	call	0x48a	; 0x48a <__fp_pscB>
 2c2:	20 f0       	brcs	.+8      	; 0x2cc <__addsf3+0x20>
 2c4:	39 f4       	brne	.+14     	; 0x2d4 <__addsf3+0x28>
 2c6:	9f 3f       	cpi	r25, 0xFF	; 255
 2c8:	19 f4       	brne	.+6      	; 0x2d0 <__addsf3+0x24>
 2ca:	26 f4       	brtc	.+8      	; 0x2d4 <__addsf3+0x28>
 2cc:	0c 94 3b 02 	jmp	0x476	; 0x476 <__fp_nan>
 2d0:	0e f4       	brtc	.+2      	; 0x2d4 <__addsf3+0x28>
 2d2:	e0 95       	com	r30
 2d4:	e7 fb       	bst	r30, 7
 2d6:	0c 94 35 02 	jmp	0x46a	; 0x46a <__fp_inf>

000002da <__addsf3x>:
 2da:	e9 2f       	mov	r30, r25
 2dc:	0e 94 5d 02 	call	0x4ba	; 0x4ba <__fp_split3>
 2e0:	58 f3       	brcs	.-42     	; 0x2b8 <__addsf3+0xc>
 2e2:	ba 17       	cp	r27, r26
 2e4:	62 07       	cpc	r22, r18
 2e6:	73 07       	cpc	r23, r19
 2e8:	84 07       	cpc	r24, r20
 2ea:	95 07       	cpc	r25, r21
 2ec:	20 f0       	brcs	.+8      	; 0x2f6 <__addsf3x+0x1c>
 2ee:	79 f4       	brne	.+30     	; 0x30e <__addsf3x+0x34>
 2f0:	a6 f5       	brtc	.+104    	; 0x35a <__addsf3x+0x80>
 2f2:	0c 94 7f 02 	jmp	0x4fe	; 0x4fe <__fp_zero>
 2f6:	0e f4       	brtc	.+2      	; 0x2fa <__addsf3x+0x20>
 2f8:	e0 95       	com	r30
 2fa:	0b 2e       	mov	r0, r27
 2fc:	ba 2f       	mov	r27, r26
 2fe:	a0 2d       	mov	r26, r0
 300:	0b 01       	movw	r0, r22
 302:	b9 01       	movw	r22, r18
 304:	90 01       	movw	r18, r0
 306:	0c 01       	movw	r0, r24
 308:	ca 01       	movw	r24, r20
 30a:	a0 01       	movw	r20, r0
 30c:	11 24       	eor	r1, r1
 30e:	ff 27       	eor	r31, r31
 310:	59 1b       	sub	r21, r25
 312:	99 f0       	breq	.+38     	; 0x33a <__addsf3x+0x60>
 314:	59 3f       	cpi	r21, 0xF9	; 249
 316:	50 f4       	brcc	.+20     	; 0x32c <__addsf3x+0x52>
 318:	50 3e       	cpi	r21, 0xE0	; 224
 31a:	68 f1       	brcs	.+90     	; 0x376 <__addsf3x+0x9c>
 31c:	1a 16       	cp	r1, r26
 31e:	f0 40       	sbci	r31, 0x00	; 0
 320:	a2 2f       	mov	r26, r18
 322:	23 2f       	mov	r18, r19
 324:	34 2f       	mov	r19, r20
 326:	44 27       	eor	r20, r20
 328:	58 5f       	subi	r21, 0xF8	; 248
 32a:	f3 cf       	rjmp	.-26     	; 0x312 <__addsf3x+0x38>
 32c:	46 95       	lsr	r20
 32e:	37 95       	ror	r19
 330:	27 95       	ror	r18
 332:	a7 95       	ror	r26
 334:	f0 40       	sbci	r31, 0x00	; 0
 336:	53 95       	inc	r21
 338:	c9 f7       	brne	.-14     	; 0x32c <__addsf3x+0x52>
 33a:	7e f4       	brtc	.+30     	; 0x35a <__addsf3x+0x80>
 33c:	1f 16       	cp	r1, r31
 33e:	ba 0b       	sbc	r27, r26
 340:	62 0b       	sbc	r22, r18
 342:	73 0b       	sbc	r23, r19
 344:	84 0b       	sbc	r24, r20
 346:	ba f0       	brmi	.+46     	; 0x376 <__addsf3x+0x9c>
 348:	91 50       	subi	r25, 0x01	; 1
 34a:	a1 f0       	breq	.+40     	; 0x374 <__addsf3x+0x9a>
 34c:	ff 0f       	add	r31, r31
 34e:	bb 1f       	adc	r27, r27
 350:	66 1f       	adc	r22, r22
 352:	77 1f       	adc	r23, r23
 354:	88 1f       	adc	r24, r24
 356:	c2 f7       	brpl	.-16     	; 0x348 <__addsf3x+0x6e>
 358:	0e c0       	rjmp	.+28     	; 0x376 <__addsf3x+0x9c>
 35a:	ba 0f       	add	r27, r26
 35c:	62 1f       	adc	r22, r18
 35e:	73 1f       	adc	r23, r19
 360:	84 1f       	adc	r24, r20
 362:	48 f4       	brcc	.+18     	; 0x376 <__addsf3x+0x9c>
 364:	87 95       	ror	r24
 366:	77 95       	ror	r23
 368:	67 95       	ror	r22
 36a:	b7 95       	ror	r27
 36c:	f7 95       	ror	r31
 36e:	9e 3f       	cpi	r25, 0xFE	; 254
 370:	08 f0       	brcs	.+2      	; 0x374 <__addsf3x+0x9a>
 372:	b0 cf       	rjmp	.-160    	; 0x2d4 <__addsf3+0x28>
 374:	93 95       	inc	r25
 376:	88 0f       	add	r24, r24
 378:	08 f0       	brcs	.+2      	; 0x37c <__addsf3x+0xa2>
 37a:	99 27       	eor	r25, r25
 37c:	ee 0f       	add	r30, r30
 37e:	97 95       	ror	r25
 380:	87 95       	ror	r24
 382:	08 95       	ret

00000384 <__fixsfsi>:
 384:	0e 94 c9 01 	call	0x392	; 0x392 <__fixunssfsi>
 388:	68 94       	set
 38a:	b1 11       	cpse	r27, r1
 38c:	0c 94 80 02 	jmp	0x500	; 0x500 <__fp_szero>
 390:	08 95       	ret

00000392 <__fixunssfsi>:
 392:	0e 94 65 02 	call	0x4ca	; 0x4ca <__fp_splitA>
 396:	88 f0       	brcs	.+34     	; 0x3ba <__fixunssfsi+0x28>
 398:	9f 57       	subi	r25, 0x7F	; 127
 39a:	98 f0       	brcs	.+38     	; 0x3c2 <__fixunssfsi+0x30>
 39c:	b9 2f       	mov	r27, r25
 39e:	99 27       	eor	r25, r25
 3a0:	b7 51       	subi	r27, 0x17	; 23
 3a2:	b0 f0       	brcs	.+44     	; 0x3d0 <__fixunssfsi+0x3e>
 3a4:	e1 f0       	breq	.+56     	; 0x3de <__fixunssfsi+0x4c>
 3a6:	66 0f       	add	r22, r22
 3a8:	77 1f       	adc	r23, r23
 3aa:	88 1f       	adc	r24, r24
 3ac:	99 1f       	adc	r25, r25
 3ae:	1a f0       	brmi	.+6      	; 0x3b6 <__fixunssfsi+0x24>
 3b0:	ba 95       	dec	r27
 3b2:	c9 f7       	brne	.-14     	; 0x3a6 <__fixunssfsi+0x14>
 3b4:	14 c0       	rjmp	.+40     	; 0x3de <__fixunssfsi+0x4c>
 3b6:	b1 30       	cpi	r27, 0x01	; 1
 3b8:	91 f0       	breq	.+36     	; 0x3de <__fixunssfsi+0x4c>
 3ba:	0e 94 7f 02 	call	0x4fe	; 0x4fe <__fp_zero>
 3be:	b1 e0       	ldi	r27, 0x01	; 1
 3c0:	08 95       	ret
 3c2:	0c 94 7f 02 	jmp	0x4fe	; 0x4fe <__fp_zero>
 3c6:	67 2f       	mov	r22, r23
 3c8:	78 2f       	mov	r23, r24
 3ca:	88 27       	eor	r24, r24
 3cc:	b8 5f       	subi	r27, 0xF8	; 248
 3ce:	39 f0       	breq	.+14     	; 0x3de <__fixunssfsi+0x4c>
 3d0:	b9 3f       	cpi	r27, 0xF9	; 249
 3d2:	cc f3       	brlt	.-14     	; 0x3c6 <__fixunssfsi+0x34>
 3d4:	86 95       	lsr	r24
 3d6:	77 95       	ror	r23
 3d8:	67 95       	ror	r22
 3da:	b3 95       	inc	r27
 3dc:	d9 f7       	brne	.-10     	; 0x3d4 <__fixunssfsi+0x42>
 3de:	3e f4       	brtc	.+14     	; 0x3ee <__fixunssfsi+0x5c>
 3e0:	90 95       	com	r25
 3e2:	80 95       	com	r24
 3e4:	70 95       	com	r23
 3e6:	61 95       	neg	r22
 3e8:	7f 4f       	sbci	r23, 0xFF	; 255
 3ea:	8f 4f       	sbci	r24, 0xFF	; 255
 3ec:	9f 4f       	sbci	r25, 0xFF	; 255
 3ee:	08 95       	ret

000003f0 <__floatunsisf>:
 3f0:	e8 94       	clt
 3f2:	09 c0       	rjmp	.+18     	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>

000003f4 <__floatsisf>:
 3f4:	97 fb       	bst	r25, 7
 3f6:	3e f4       	brtc	.+14     	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
 3f8:	90 95       	com	r25
 3fa:	80 95       	com	r24
 3fc:	70 95       	com	r23
 3fe:	61 95       	neg	r22
 400:	7f 4f       	sbci	r23, 0xFF	; 255
 402:	8f 4f       	sbci	r24, 0xFF	; 255
 404:	9f 4f       	sbci	r25, 0xFF	; 255
 406:	99 23       	and	r25, r25
 408:	a9 f0       	breq	.+42     	; 0x434 <__EEPROM_REGION_LENGTH__+0x34>
 40a:	f9 2f       	mov	r31, r25
 40c:	96 e9       	ldi	r25, 0x96	; 150
 40e:	bb 27       	eor	r27, r27
 410:	93 95       	inc	r25
 412:	f6 95       	lsr	r31
 414:	87 95       	ror	r24
 416:	77 95       	ror	r23
 418:	67 95       	ror	r22
 41a:	b7 95       	ror	r27
 41c:	f1 11       	cpse	r31, r1
 41e:	f8 cf       	rjmp	.-16     	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
 420:	fa f4       	brpl	.+62     	; 0x460 <__EEPROM_REGION_LENGTH__+0x60>
 422:	bb 0f       	add	r27, r27
 424:	11 f4       	brne	.+4      	; 0x42a <__EEPROM_REGION_LENGTH__+0x2a>
 426:	60 ff       	sbrs	r22, 0
 428:	1b c0       	rjmp	.+54     	; 0x460 <__EEPROM_REGION_LENGTH__+0x60>
 42a:	6f 5f       	subi	r22, 0xFF	; 255
 42c:	7f 4f       	sbci	r23, 0xFF	; 255
 42e:	8f 4f       	sbci	r24, 0xFF	; 255
 430:	9f 4f       	sbci	r25, 0xFF	; 255
 432:	16 c0       	rjmp	.+44     	; 0x460 <__EEPROM_REGION_LENGTH__+0x60>
 434:	88 23       	and	r24, r24
 436:	11 f0       	breq	.+4      	; 0x43c <__EEPROM_REGION_LENGTH__+0x3c>
 438:	96 e9       	ldi	r25, 0x96	; 150
 43a:	11 c0       	rjmp	.+34     	; 0x45e <__EEPROM_REGION_LENGTH__+0x5e>
 43c:	77 23       	and	r23, r23
 43e:	21 f0       	breq	.+8      	; 0x448 <__EEPROM_REGION_LENGTH__+0x48>
 440:	9e e8       	ldi	r25, 0x8E	; 142
 442:	87 2f       	mov	r24, r23
 444:	76 2f       	mov	r23, r22
 446:	05 c0       	rjmp	.+10     	; 0x452 <__EEPROM_REGION_LENGTH__+0x52>
 448:	66 23       	and	r22, r22
 44a:	71 f0       	breq	.+28     	; 0x468 <__EEPROM_REGION_LENGTH__+0x68>
 44c:	96 e8       	ldi	r25, 0x86	; 134
 44e:	86 2f       	mov	r24, r22
 450:	70 e0       	ldi	r23, 0x00	; 0
 452:	60 e0       	ldi	r22, 0x00	; 0
 454:	2a f0       	brmi	.+10     	; 0x460 <__EEPROM_REGION_LENGTH__+0x60>
 456:	9a 95       	dec	r25
 458:	66 0f       	add	r22, r22
 45a:	77 1f       	adc	r23, r23
 45c:	88 1f       	adc	r24, r24
 45e:	da f7       	brpl	.-10     	; 0x456 <__EEPROM_REGION_LENGTH__+0x56>
 460:	88 0f       	add	r24, r24
 462:	96 95       	lsr	r25
 464:	87 95       	ror	r24
 466:	97 f9       	bld	r25, 7
 468:	08 95       	ret

0000046a <__fp_inf>:
 46a:	97 f9       	bld	r25, 7
 46c:	9f 67       	ori	r25, 0x7F	; 127
 46e:	80 e8       	ldi	r24, 0x80	; 128
 470:	70 e0       	ldi	r23, 0x00	; 0
 472:	60 e0       	ldi	r22, 0x00	; 0
 474:	08 95       	ret

00000476 <__fp_nan>:
 476:	9f ef       	ldi	r25, 0xFF	; 255
 478:	80 ec       	ldi	r24, 0xC0	; 192
 47a:	08 95       	ret

0000047c <__fp_pscA>:
 47c:	00 24       	eor	r0, r0
 47e:	0a 94       	dec	r0
 480:	16 16       	cp	r1, r22
 482:	17 06       	cpc	r1, r23
 484:	18 06       	cpc	r1, r24
 486:	09 06       	cpc	r0, r25
 488:	08 95       	ret

0000048a <__fp_pscB>:
 48a:	00 24       	eor	r0, r0
 48c:	0a 94       	dec	r0
 48e:	12 16       	cp	r1, r18
 490:	13 06       	cpc	r1, r19
 492:	14 06       	cpc	r1, r20
 494:	05 06       	cpc	r0, r21
 496:	08 95       	ret

00000498 <__fp_round>:
 498:	09 2e       	mov	r0, r25
 49a:	03 94       	inc	r0
 49c:	00 0c       	add	r0, r0
 49e:	11 f4       	brne	.+4      	; 0x4a4 <__fp_round+0xc>
 4a0:	88 23       	and	r24, r24
 4a2:	52 f0       	brmi	.+20     	; 0x4b8 <__fp_round+0x20>
 4a4:	bb 0f       	add	r27, r27
 4a6:	40 f4       	brcc	.+16     	; 0x4b8 <__fp_round+0x20>
 4a8:	bf 2b       	or	r27, r31
 4aa:	11 f4       	brne	.+4      	; 0x4b0 <__fp_round+0x18>
 4ac:	60 ff       	sbrs	r22, 0
 4ae:	04 c0       	rjmp	.+8      	; 0x4b8 <__fp_round+0x20>
 4b0:	6f 5f       	subi	r22, 0xFF	; 255
 4b2:	7f 4f       	sbci	r23, 0xFF	; 255
 4b4:	8f 4f       	sbci	r24, 0xFF	; 255
 4b6:	9f 4f       	sbci	r25, 0xFF	; 255
 4b8:	08 95       	ret

000004ba <__fp_split3>:
 4ba:	57 fd       	sbrc	r21, 7
 4bc:	90 58       	subi	r25, 0x80	; 128
 4be:	44 0f       	add	r20, r20
 4c0:	55 1f       	adc	r21, r21
 4c2:	59 f0       	breq	.+22     	; 0x4da <__fp_splitA+0x10>
 4c4:	5f 3f       	cpi	r21, 0xFF	; 255
 4c6:	71 f0       	breq	.+28     	; 0x4e4 <__fp_splitA+0x1a>
 4c8:	47 95       	ror	r20

000004ca <__fp_splitA>:
 4ca:	88 0f       	add	r24, r24
 4cc:	97 fb       	bst	r25, 7
 4ce:	99 1f       	adc	r25, r25
 4d0:	61 f0       	breq	.+24     	; 0x4ea <__fp_splitA+0x20>
 4d2:	9f 3f       	cpi	r25, 0xFF	; 255
 4d4:	79 f0       	breq	.+30     	; 0x4f4 <__fp_splitA+0x2a>
 4d6:	87 95       	ror	r24
 4d8:	08 95       	ret
 4da:	12 16       	cp	r1, r18
 4dc:	13 06       	cpc	r1, r19
 4de:	14 06       	cpc	r1, r20
 4e0:	55 1f       	adc	r21, r21
 4e2:	f2 cf       	rjmp	.-28     	; 0x4c8 <__fp_split3+0xe>
 4e4:	46 95       	lsr	r20
 4e6:	f1 df       	rcall	.-30     	; 0x4ca <__fp_splitA>
 4e8:	08 c0       	rjmp	.+16     	; 0x4fa <__fp_splitA+0x30>
 4ea:	16 16       	cp	r1, r22
 4ec:	17 06       	cpc	r1, r23
 4ee:	18 06       	cpc	r1, r24
 4f0:	99 1f       	adc	r25, r25
 4f2:	f1 cf       	rjmp	.-30     	; 0x4d6 <__fp_splitA+0xc>
 4f4:	86 95       	lsr	r24
 4f6:	71 05       	cpc	r23, r1
 4f8:	61 05       	cpc	r22, r1
 4fa:	08 94       	sec
 4fc:	08 95       	ret

000004fe <__fp_zero>:
 4fe:	e8 94       	clt

00000500 <__fp_szero>:
 500:	bb 27       	eor	r27, r27
 502:	66 27       	eor	r22, r22
 504:	77 27       	eor	r23, r23
 506:	cb 01       	movw	r24, r22
 508:	97 f9       	bld	r25, 7
 50a:	08 95       	ret

0000050c <__mulsf3>:
 50c:	0e 94 99 02 	call	0x532	; 0x532 <__mulsf3x>
 510:	0c 94 4c 02 	jmp	0x498	; 0x498 <__fp_round>
 514:	0e 94 3e 02 	call	0x47c	; 0x47c <__fp_pscA>
 518:	38 f0       	brcs	.+14     	; 0x528 <__mulsf3+0x1c>
 51a:	0e 94 45 02 	call	0x48a	; 0x48a <__fp_pscB>
 51e:	20 f0       	brcs	.+8      	; 0x528 <__mulsf3+0x1c>
 520:	95 23       	and	r25, r21
 522:	11 f0       	breq	.+4      	; 0x528 <__mulsf3+0x1c>
 524:	0c 94 35 02 	jmp	0x46a	; 0x46a <__fp_inf>
 528:	0c 94 3b 02 	jmp	0x476	; 0x476 <__fp_nan>
 52c:	11 24       	eor	r1, r1
 52e:	0c 94 80 02 	jmp	0x500	; 0x500 <__fp_szero>

00000532 <__mulsf3x>:
 532:	0e 94 5d 02 	call	0x4ba	; 0x4ba <__fp_split3>
 536:	70 f3       	brcs	.-36     	; 0x514 <__mulsf3+0x8>

00000538 <__mulsf3_pse>:
 538:	95 9f       	mul	r25, r21
 53a:	c1 f3       	breq	.-16     	; 0x52c <__mulsf3+0x20>
 53c:	95 0f       	add	r25, r21
 53e:	50 e0       	ldi	r21, 0x00	; 0
 540:	55 1f       	adc	r21, r21
 542:	62 9f       	mul	r22, r18
 544:	f0 01       	movw	r30, r0
 546:	72 9f       	mul	r23, r18
 548:	bb 27       	eor	r27, r27
 54a:	f0 0d       	add	r31, r0
 54c:	b1 1d       	adc	r27, r1
 54e:	63 9f       	mul	r22, r19
 550:	aa 27       	eor	r26, r26
 552:	f0 0d       	add	r31, r0
 554:	b1 1d       	adc	r27, r1
 556:	aa 1f       	adc	r26, r26
 558:	64 9f       	mul	r22, r20
 55a:	66 27       	eor	r22, r22
 55c:	b0 0d       	add	r27, r0
 55e:	a1 1d       	adc	r26, r1
 560:	66 1f       	adc	r22, r22
 562:	82 9f       	mul	r24, r18
 564:	22 27       	eor	r18, r18
 566:	b0 0d       	add	r27, r0
 568:	a1 1d       	adc	r26, r1
 56a:	62 1f       	adc	r22, r18
 56c:	73 9f       	mul	r23, r19
 56e:	b0 0d       	add	r27, r0
 570:	a1 1d       	adc	r26, r1
 572:	62 1f       	adc	r22, r18
 574:	83 9f       	mul	r24, r19
 576:	a0 0d       	add	r26, r0
 578:	61 1d       	adc	r22, r1
 57a:	22 1f       	adc	r18, r18
 57c:	74 9f       	mul	r23, r20
 57e:	33 27       	eor	r19, r19
 580:	a0 0d       	add	r26, r0
 582:	61 1d       	adc	r22, r1
 584:	23 1f       	adc	r18, r19
 586:	84 9f       	mul	r24, r20
 588:	60 0d       	add	r22, r0
 58a:	21 1d       	adc	r18, r1
 58c:	82 2f       	mov	r24, r18
 58e:	76 2f       	mov	r23, r22
 590:	6a 2f       	mov	r22, r26
 592:	11 24       	eor	r1, r1
 594:	9f 57       	subi	r25, 0x7F	; 127
 596:	50 40       	sbci	r21, 0x00	; 0
 598:	9a f0       	brmi	.+38     	; 0x5c0 <__mulsf3_pse+0x88>
 59a:	f1 f0       	breq	.+60     	; 0x5d8 <__mulsf3_pse+0xa0>
 59c:	88 23       	and	r24, r24
 59e:	4a f0       	brmi	.+18     	; 0x5b2 <__mulsf3_pse+0x7a>
 5a0:	ee 0f       	add	r30, r30
 5a2:	ff 1f       	adc	r31, r31
 5a4:	bb 1f       	adc	r27, r27
 5a6:	66 1f       	adc	r22, r22
 5a8:	77 1f       	adc	r23, r23
 5aa:	88 1f       	adc	r24, r24
 5ac:	91 50       	subi	r25, 0x01	; 1
 5ae:	50 40       	sbci	r21, 0x00	; 0
 5b0:	a9 f7       	brne	.-22     	; 0x59c <__mulsf3_pse+0x64>
 5b2:	9e 3f       	cpi	r25, 0xFE	; 254
 5b4:	51 05       	cpc	r21, r1
 5b6:	80 f0       	brcs	.+32     	; 0x5d8 <__mulsf3_pse+0xa0>
 5b8:	0c 94 35 02 	jmp	0x46a	; 0x46a <__fp_inf>
 5bc:	0c 94 80 02 	jmp	0x500	; 0x500 <__fp_szero>
 5c0:	5f 3f       	cpi	r21, 0xFF	; 255
 5c2:	e4 f3       	brlt	.-8      	; 0x5bc <__mulsf3_pse+0x84>
 5c4:	98 3e       	cpi	r25, 0xE8	; 232
 5c6:	d4 f3       	brlt	.-12     	; 0x5bc <__mulsf3_pse+0x84>
 5c8:	86 95       	lsr	r24
 5ca:	77 95       	ror	r23
 5cc:	67 95       	ror	r22
 5ce:	b7 95       	ror	r27
 5d0:	f7 95       	ror	r31
 5d2:	e7 95       	ror	r30
 5d4:	9f 5f       	subi	r25, 0xFF	; 255
 5d6:	c1 f7       	brne	.-16     	; 0x5c8 <__mulsf3_pse+0x90>
 5d8:	fe 2b       	or	r31, r30
 5da:	88 0f       	add	r24, r24
 5dc:	91 1d       	adc	r25, r1
 5de:	96 95       	lsr	r25
 5e0:	87 95       	ror	r24
 5e2:	97 f9       	bld	r25, 7
 5e4:	08 95       	ret

000005e6 <printf>:
 5e6:	a0 e0       	ldi	r26, 0x00	; 0
 5e8:	b0 e0       	ldi	r27, 0x00	; 0
 5ea:	e9 ef       	ldi	r30, 0xF9	; 249
 5ec:	f2 e0       	ldi	r31, 0x02	; 2
 5ee:	0c 94 da 05 	jmp	0xbb4	; 0xbb4 <__prologue_saves__+0x20>
 5f2:	ae 01       	movw	r20, r28
 5f4:	4b 5f       	subi	r20, 0xFB	; 251
 5f6:	5f 4f       	sbci	r21, 0xFF	; 255
 5f8:	fa 01       	movw	r30, r20
 5fa:	61 91       	ld	r22, Z+
 5fc:	71 91       	ld	r23, Z+
 5fe:	af 01       	movw	r20, r30
 600:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <__data_end+0x2>
 604:	90 91 a7 01 	lds	r25, 0x01A7	; 0x8001a7 <__data_end+0x3>
 608:	0e 94 39 03 	call	0x672	; 0x672 <vfprintf>
 60c:	e2 e0       	ldi	r30, 0x02	; 2
 60e:	0c 94 f6 05 	jmp	0xbec	; 0xbec <__epilogue_restores__+0x20>

00000612 <puts>:
 612:	0f 93       	push	r16
 614:	1f 93       	push	r17
 616:	cf 93       	push	r28
 618:	df 93       	push	r29
 61a:	e0 91 a6 01 	lds	r30, 0x01A6	; 0x8001a6 <__data_end+0x2>
 61e:	f0 91 a7 01 	lds	r31, 0x01A7	; 0x8001a7 <__data_end+0x3>
 622:	23 81       	ldd	r18, Z+3	; 0x03
 624:	21 ff       	sbrs	r18, 1
 626:	1b c0       	rjmp	.+54     	; 0x65e <puts+0x4c>
 628:	8c 01       	movw	r16, r24
 62a:	d0 e0       	ldi	r29, 0x00	; 0
 62c:	c0 e0       	ldi	r28, 0x00	; 0
 62e:	f8 01       	movw	r30, r16
 630:	81 91       	ld	r24, Z+
 632:	8f 01       	movw	r16, r30
 634:	60 91 a6 01 	lds	r22, 0x01A6	; 0x8001a6 <__data_end+0x2>
 638:	70 91 a7 01 	lds	r23, 0x01A7	; 0x8001a7 <__data_end+0x3>
 63c:	db 01       	movw	r26, r22
 63e:	18 96       	adiw	r26, 0x08	; 8
 640:	ed 91       	ld	r30, X+
 642:	fc 91       	ld	r31, X
 644:	19 97       	sbiw	r26, 0x09	; 9
 646:	88 23       	and	r24, r24
 648:	31 f0       	breq	.+12     	; 0x656 <puts+0x44>
 64a:	09 95       	icall
 64c:	89 2b       	or	r24, r25
 64e:	79 f3       	breq	.-34     	; 0x62e <puts+0x1c>
 650:	df ef       	ldi	r29, 0xFF	; 255
 652:	cf ef       	ldi	r28, 0xFF	; 255
 654:	ec cf       	rjmp	.-40     	; 0x62e <puts+0x1c>
 656:	8a e0       	ldi	r24, 0x0A	; 10
 658:	09 95       	icall
 65a:	89 2b       	or	r24, r25
 65c:	19 f0       	breq	.+6      	; 0x664 <puts+0x52>
 65e:	8f ef       	ldi	r24, 0xFF	; 255
 660:	9f ef       	ldi	r25, 0xFF	; 255
 662:	02 c0       	rjmp	.+4      	; 0x668 <puts+0x56>
 664:	8d 2f       	mov	r24, r29
 666:	9c 2f       	mov	r25, r28
 668:	df 91       	pop	r29
 66a:	cf 91       	pop	r28
 66c:	1f 91       	pop	r17
 66e:	0f 91       	pop	r16
 670:	08 95       	ret

00000672 <vfprintf>:
 672:	ab e0       	ldi	r26, 0x0B	; 11
 674:	b0 e0       	ldi	r27, 0x00	; 0
 676:	ef e3       	ldi	r30, 0x3F	; 63
 678:	f3 e0       	ldi	r31, 0x03	; 3
 67a:	0c 94 ca 05 	jmp	0xb94	; 0xb94 <__prologue_saves__>
 67e:	6c 01       	movw	r12, r24
 680:	7b 01       	movw	r14, r22
 682:	8a 01       	movw	r16, r20
 684:	fc 01       	movw	r30, r24
 686:	17 82       	std	Z+7, r1	; 0x07
 688:	16 82       	std	Z+6, r1	; 0x06
 68a:	83 81       	ldd	r24, Z+3	; 0x03
 68c:	81 ff       	sbrs	r24, 1
 68e:	cc c1       	rjmp	.+920    	; 0xa28 <__stack+0x129>
 690:	ce 01       	movw	r24, r28
 692:	01 96       	adiw	r24, 0x01	; 1
 694:	3c 01       	movw	r6, r24
 696:	f6 01       	movw	r30, r12
 698:	93 81       	ldd	r25, Z+3	; 0x03
 69a:	f7 01       	movw	r30, r14
 69c:	93 fd       	sbrc	r25, 3
 69e:	85 91       	lpm	r24, Z+
 6a0:	93 ff       	sbrs	r25, 3
 6a2:	81 91       	ld	r24, Z+
 6a4:	7f 01       	movw	r14, r30
 6a6:	88 23       	and	r24, r24
 6a8:	09 f4       	brne	.+2      	; 0x6ac <vfprintf+0x3a>
 6aa:	ba c1       	rjmp	.+884    	; 0xa20 <__stack+0x121>
 6ac:	85 32       	cpi	r24, 0x25	; 37
 6ae:	39 f4       	brne	.+14     	; 0x6be <vfprintf+0x4c>
 6b0:	93 fd       	sbrc	r25, 3
 6b2:	85 91       	lpm	r24, Z+
 6b4:	93 ff       	sbrs	r25, 3
 6b6:	81 91       	ld	r24, Z+
 6b8:	7f 01       	movw	r14, r30
 6ba:	85 32       	cpi	r24, 0x25	; 37
 6bc:	29 f4       	brne	.+10     	; 0x6c8 <vfprintf+0x56>
 6be:	b6 01       	movw	r22, r12
 6c0:	90 e0       	ldi	r25, 0x00	; 0
 6c2:	0e 94 30 05 	call	0xa60	; 0xa60 <fputc>
 6c6:	e7 cf       	rjmp	.-50     	; 0x696 <vfprintf+0x24>
 6c8:	91 2c       	mov	r9, r1
 6ca:	21 2c       	mov	r2, r1
 6cc:	31 2c       	mov	r3, r1
 6ce:	ff e1       	ldi	r31, 0x1F	; 31
 6d0:	f3 15       	cp	r31, r3
 6d2:	d8 f0       	brcs	.+54     	; 0x70a <vfprintf+0x98>
 6d4:	8b 32       	cpi	r24, 0x2B	; 43
 6d6:	79 f0       	breq	.+30     	; 0x6f6 <vfprintf+0x84>
 6d8:	38 f4       	brcc	.+14     	; 0x6e8 <vfprintf+0x76>
 6da:	80 32       	cpi	r24, 0x20	; 32
 6dc:	79 f0       	breq	.+30     	; 0x6fc <vfprintf+0x8a>
 6de:	83 32       	cpi	r24, 0x23	; 35
 6e0:	a1 f4       	brne	.+40     	; 0x70a <vfprintf+0x98>
 6e2:	23 2d       	mov	r18, r3
 6e4:	20 61       	ori	r18, 0x10	; 16
 6e6:	1d c0       	rjmp	.+58     	; 0x722 <vfprintf+0xb0>
 6e8:	8d 32       	cpi	r24, 0x2D	; 45
 6ea:	61 f0       	breq	.+24     	; 0x704 <vfprintf+0x92>
 6ec:	80 33       	cpi	r24, 0x30	; 48
 6ee:	69 f4       	brne	.+26     	; 0x70a <vfprintf+0x98>
 6f0:	23 2d       	mov	r18, r3
 6f2:	21 60       	ori	r18, 0x01	; 1
 6f4:	16 c0       	rjmp	.+44     	; 0x722 <vfprintf+0xb0>
 6f6:	83 2d       	mov	r24, r3
 6f8:	82 60       	ori	r24, 0x02	; 2
 6fa:	38 2e       	mov	r3, r24
 6fc:	e3 2d       	mov	r30, r3
 6fe:	e4 60       	ori	r30, 0x04	; 4
 700:	3e 2e       	mov	r3, r30
 702:	2a c0       	rjmp	.+84     	; 0x758 <vfprintf+0xe6>
 704:	f3 2d       	mov	r31, r3
 706:	f8 60       	ori	r31, 0x08	; 8
 708:	1d c0       	rjmp	.+58     	; 0x744 <vfprintf+0xd2>
 70a:	37 fc       	sbrc	r3, 7
 70c:	2d c0       	rjmp	.+90     	; 0x768 <vfprintf+0xf6>
 70e:	20 ed       	ldi	r18, 0xD0	; 208
 710:	28 0f       	add	r18, r24
 712:	2a 30       	cpi	r18, 0x0A	; 10
 714:	40 f0       	brcs	.+16     	; 0x726 <vfprintf+0xb4>
 716:	8e 32       	cpi	r24, 0x2E	; 46
 718:	b9 f4       	brne	.+46     	; 0x748 <vfprintf+0xd6>
 71a:	36 fc       	sbrc	r3, 6
 71c:	81 c1       	rjmp	.+770    	; 0xa20 <__stack+0x121>
 71e:	23 2d       	mov	r18, r3
 720:	20 64       	ori	r18, 0x40	; 64
 722:	32 2e       	mov	r3, r18
 724:	19 c0       	rjmp	.+50     	; 0x758 <vfprintf+0xe6>
 726:	36 fe       	sbrs	r3, 6
 728:	06 c0       	rjmp	.+12     	; 0x736 <vfprintf+0xc4>
 72a:	8a e0       	ldi	r24, 0x0A	; 10
 72c:	98 9e       	mul	r9, r24
 72e:	20 0d       	add	r18, r0
 730:	11 24       	eor	r1, r1
 732:	92 2e       	mov	r9, r18
 734:	11 c0       	rjmp	.+34     	; 0x758 <vfprintf+0xe6>
 736:	ea e0       	ldi	r30, 0x0A	; 10
 738:	2e 9e       	mul	r2, r30
 73a:	20 0d       	add	r18, r0
 73c:	11 24       	eor	r1, r1
 73e:	22 2e       	mov	r2, r18
 740:	f3 2d       	mov	r31, r3
 742:	f0 62       	ori	r31, 0x20	; 32
 744:	3f 2e       	mov	r3, r31
 746:	08 c0       	rjmp	.+16     	; 0x758 <vfprintf+0xe6>
 748:	8c 36       	cpi	r24, 0x6C	; 108
 74a:	21 f4       	brne	.+8      	; 0x754 <vfprintf+0xe2>
 74c:	83 2d       	mov	r24, r3
 74e:	80 68       	ori	r24, 0x80	; 128
 750:	38 2e       	mov	r3, r24
 752:	02 c0       	rjmp	.+4      	; 0x758 <vfprintf+0xe6>
 754:	88 36       	cpi	r24, 0x68	; 104
 756:	41 f4       	brne	.+16     	; 0x768 <vfprintf+0xf6>
 758:	f7 01       	movw	r30, r14
 75a:	93 fd       	sbrc	r25, 3
 75c:	85 91       	lpm	r24, Z+
 75e:	93 ff       	sbrs	r25, 3
 760:	81 91       	ld	r24, Z+
 762:	7f 01       	movw	r14, r30
 764:	81 11       	cpse	r24, r1
 766:	b3 cf       	rjmp	.-154    	; 0x6ce <vfprintf+0x5c>
 768:	98 2f       	mov	r25, r24
 76a:	9f 7d       	andi	r25, 0xDF	; 223
 76c:	95 54       	subi	r25, 0x45	; 69
 76e:	93 30       	cpi	r25, 0x03	; 3
 770:	28 f4       	brcc	.+10     	; 0x77c <vfprintf+0x10a>
 772:	0c 5f       	subi	r16, 0xFC	; 252
 774:	1f 4f       	sbci	r17, 0xFF	; 255
 776:	9f e3       	ldi	r25, 0x3F	; 63
 778:	99 83       	std	Y+1, r25	; 0x01
 77a:	0d c0       	rjmp	.+26     	; 0x796 <vfprintf+0x124>
 77c:	83 36       	cpi	r24, 0x63	; 99
 77e:	31 f0       	breq	.+12     	; 0x78c <vfprintf+0x11a>
 780:	83 37       	cpi	r24, 0x73	; 115
 782:	71 f0       	breq	.+28     	; 0x7a0 <vfprintf+0x12e>
 784:	83 35       	cpi	r24, 0x53	; 83
 786:	09 f0       	breq	.+2      	; 0x78a <vfprintf+0x118>
 788:	59 c0       	rjmp	.+178    	; 0x83c <__DATA_REGION_LENGTH__+0x3c>
 78a:	21 c0       	rjmp	.+66     	; 0x7ce <vfprintf+0x15c>
 78c:	f8 01       	movw	r30, r16
 78e:	80 81       	ld	r24, Z
 790:	89 83       	std	Y+1, r24	; 0x01
 792:	0e 5f       	subi	r16, 0xFE	; 254
 794:	1f 4f       	sbci	r17, 0xFF	; 255
 796:	88 24       	eor	r8, r8
 798:	83 94       	inc	r8
 79a:	91 2c       	mov	r9, r1
 79c:	53 01       	movw	r10, r6
 79e:	13 c0       	rjmp	.+38     	; 0x7c6 <vfprintf+0x154>
 7a0:	28 01       	movw	r4, r16
 7a2:	f2 e0       	ldi	r31, 0x02	; 2
 7a4:	4f 0e       	add	r4, r31
 7a6:	51 1c       	adc	r5, r1
 7a8:	f8 01       	movw	r30, r16
 7aa:	a0 80       	ld	r10, Z
 7ac:	b1 80       	ldd	r11, Z+1	; 0x01
 7ae:	36 fe       	sbrs	r3, 6
 7b0:	03 c0       	rjmp	.+6      	; 0x7b8 <vfprintf+0x146>
 7b2:	69 2d       	mov	r22, r9
 7b4:	70 e0       	ldi	r23, 0x00	; 0
 7b6:	02 c0       	rjmp	.+4      	; 0x7bc <vfprintf+0x14a>
 7b8:	6f ef       	ldi	r22, 0xFF	; 255
 7ba:	7f ef       	ldi	r23, 0xFF	; 255
 7bc:	c5 01       	movw	r24, r10
 7be:	0e 94 25 05 	call	0xa4a	; 0xa4a <strnlen>
 7c2:	4c 01       	movw	r8, r24
 7c4:	82 01       	movw	r16, r4
 7c6:	f3 2d       	mov	r31, r3
 7c8:	ff 77       	andi	r31, 0x7F	; 127
 7ca:	3f 2e       	mov	r3, r31
 7cc:	16 c0       	rjmp	.+44     	; 0x7fa <vfprintf+0x188>
 7ce:	28 01       	movw	r4, r16
 7d0:	22 e0       	ldi	r18, 0x02	; 2
 7d2:	42 0e       	add	r4, r18
 7d4:	51 1c       	adc	r5, r1
 7d6:	f8 01       	movw	r30, r16
 7d8:	a0 80       	ld	r10, Z
 7da:	b1 80       	ldd	r11, Z+1	; 0x01
 7dc:	36 fe       	sbrs	r3, 6
 7de:	03 c0       	rjmp	.+6      	; 0x7e6 <vfprintf+0x174>
 7e0:	69 2d       	mov	r22, r9
 7e2:	70 e0       	ldi	r23, 0x00	; 0
 7e4:	02 c0       	rjmp	.+4      	; 0x7ea <vfprintf+0x178>
 7e6:	6f ef       	ldi	r22, 0xFF	; 255
 7e8:	7f ef       	ldi	r23, 0xFF	; 255
 7ea:	c5 01       	movw	r24, r10
 7ec:	0e 94 1a 05 	call	0xa34	; 0xa34 <strnlen_P>
 7f0:	4c 01       	movw	r8, r24
 7f2:	f3 2d       	mov	r31, r3
 7f4:	f0 68       	ori	r31, 0x80	; 128
 7f6:	3f 2e       	mov	r3, r31
 7f8:	82 01       	movw	r16, r4
 7fa:	33 fc       	sbrc	r3, 3
 7fc:	1b c0       	rjmp	.+54     	; 0x834 <__DATA_REGION_LENGTH__+0x34>
 7fe:	82 2d       	mov	r24, r2
 800:	90 e0       	ldi	r25, 0x00	; 0
 802:	88 16       	cp	r8, r24
 804:	99 06       	cpc	r9, r25
 806:	b0 f4       	brcc	.+44     	; 0x834 <__DATA_REGION_LENGTH__+0x34>
 808:	b6 01       	movw	r22, r12
 80a:	80 e2       	ldi	r24, 0x20	; 32
 80c:	90 e0       	ldi	r25, 0x00	; 0
 80e:	0e 94 30 05 	call	0xa60	; 0xa60 <fputc>
 812:	2a 94       	dec	r2
 814:	f4 cf       	rjmp	.-24     	; 0x7fe <vfprintf+0x18c>
 816:	f5 01       	movw	r30, r10
 818:	37 fc       	sbrc	r3, 7
 81a:	85 91       	lpm	r24, Z+
 81c:	37 fe       	sbrs	r3, 7
 81e:	81 91       	ld	r24, Z+
 820:	5f 01       	movw	r10, r30
 822:	b6 01       	movw	r22, r12
 824:	90 e0       	ldi	r25, 0x00	; 0
 826:	0e 94 30 05 	call	0xa60	; 0xa60 <fputc>
 82a:	21 10       	cpse	r2, r1
 82c:	2a 94       	dec	r2
 82e:	21 e0       	ldi	r18, 0x01	; 1
 830:	82 1a       	sub	r8, r18
 832:	91 08       	sbc	r9, r1
 834:	81 14       	cp	r8, r1
 836:	91 04       	cpc	r9, r1
 838:	71 f7       	brne	.-36     	; 0x816 <__DATA_REGION_LENGTH__+0x16>
 83a:	e8 c0       	rjmp	.+464    	; 0xa0c <__stack+0x10d>
 83c:	84 36       	cpi	r24, 0x64	; 100
 83e:	11 f0       	breq	.+4      	; 0x844 <__DATA_REGION_LENGTH__+0x44>
 840:	89 36       	cpi	r24, 0x69	; 105
 842:	41 f5       	brne	.+80     	; 0x894 <__DATA_REGION_LENGTH__+0x94>
 844:	f8 01       	movw	r30, r16
 846:	37 fe       	sbrs	r3, 7
 848:	07 c0       	rjmp	.+14     	; 0x858 <__DATA_REGION_LENGTH__+0x58>
 84a:	60 81       	ld	r22, Z
 84c:	71 81       	ldd	r23, Z+1	; 0x01
 84e:	82 81       	ldd	r24, Z+2	; 0x02
 850:	93 81       	ldd	r25, Z+3	; 0x03
 852:	0c 5f       	subi	r16, 0xFC	; 252
 854:	1f 4f       	sbci	r17, 0xFF	; 255
 856:	08 c0       	rjmp	.+16     	; 0x868 <__DATA_REGION_LENGTH__+0x68>
 858:	60 81       	ld	r22, Z
 85a:	71 81       	ldd	r23, Z+1	; 0x01
 85c:	07 2e       	mov	r0, r23
 85e:	00 0c       	add	r0, r0
 860:	88 0b       	sbc	r24, r24
 862:	99 0b       	sbc	r25, r25
 864:	0e 5f       	subi	r16, 0xFE	; 254
 866:	1f 4f       	sbci	r17, 0xFF	; 255
 868:	f3 2d       	mov	r31, r3
 86a:	ff 76       	andi	r31, 0x6F	; 111
 86c:	3f 2e       	mov	r3, r31
 86e:	97 ff       	sbrs	r25, 7
 870:	09 c0       	rjmp	.+18     	; 0x884 <__DATA_REGION_LENGTH__+0x84>
 872:	90 95       	com	r25
 874:	80 95       	com	r24
 876:	70 95       	com	r23
 878:	61 95       	neg	r22
 87a:	7f 4f       	sbci	r23, 0xFF	; 255
 87c:	8f 4f       	sbci	r24, 0xFF	; 255
 87e:	9f 4f       	sbci	r25, 0xFF	; 255
 880:	f0 68       	ori	r31, 0x80	; 128
 882:	3f 2e       	mov	r3, r31
 884:	2a e0       	ldi	r18, 0x0A	; 10
 886:	30 e0       	ldi	r19, 0x00	; 0
 888:	a3 01       	movw	r20, r6
 88a:	0e 94 6c 05 	call	0xad8	; 0xad8 <__ultoa_invert>
 88e:	88 2e       	mov	r8, r24
 890:	86 18       	sub	r8, r6
 892:	45 c0       	rjmp	.+138    	; 0x91e <__stack+0x1f>
 894:	85 37       	cpi	r24, 0x75	; 117
 896:	31 f4       	brne	.+12     	; 0x8a4 <__DATA_REGION_LENGTH__+0xa4>
 898:	23 2d       	mov	r18, r3
 89a:	2f 7e       	andi	r18, 0xEF	; 239
 89c:	b2 2e       	mov	r11, r18
 89e:	2a e0       	ldi	r18, 0x0A	; 10
 8a0:	30 e0       	ldi	r19, 0x00	; 0
 8a2:	25 c0       	rjmp	.+74     	; 0x8ee <__DATA_REGION_LENGTH__+0xee>
 8a4:	93 2d       	mov	r25, r3
 8a6:	99 7f       	andi	r25, 0xF9	; 249
 8a8:	b9 2e       	mov	r11, r25
 8aa:	8f 36       	cpi	r24, 0x6F	; 111
 8ac:	c1 f0       	breq	.+48     	; 0x8de <__DATA_REGION_LENGTH__+0xde>
 8ae:	18 f4       	brcc	.+6      	; 0x8b6 <__DATA_REGION_LENGTH__+0xb6>
 8b0:	88 35       	cpi	r24, 0x58	; 88
 8b2:	79 f0       	breq	.+30     	; 0x8d2 <__DATA_REGION_LENGTH__+0xd2>
 8b4:	b5 c0       	rjmp	.+362    	; 0xa20 <__stack+0x121>
 8b6:	80 37       	cpi	r24, 0x70	; 112
 8b8:	19 f0       	breq	.+6      	; 0x8c0 <__DATA_REGION_LENGTH__+0xc0>
 8ba:	88 37       	cpi	r24, 0x78	; 120
 8bc:	21 f0       	breq	.+8      	; 0x8c6 <__DATA_REGION_LENGTH__+0xc6>
 8be:	b0 c0       	rjmp	.+352    	; 0xa20 <__stack+0x121>
 8c0:	e9 2f       	mov	r30, r25
 8c2:	e0 61       	ori	r30, 0x10	; 16
 8c4:	be 2e       	mov	r11, r30
 8c6:	b4 fe       	sbrs	r11, 4
 8c8:	0d c0       	rjmp	.+26     	; 0x8e4 <__DATA_REGION_LENGTH__+0xe4>
 8ca:	fb 2d       	mov	r31, r11
 8cc:	f4 60       	ori	r31, 0x04	; 4
 8ce:	bf 2e       	mov	r11, r31
 8d0:	09 c0       	rjmp	.+18     	; 0x8e4 <__DATA_REGION_LENGTH__+0xe4>
 8d2:	34 fe       	sbrs	r3, 4
 8d4:	0a c0       	rjmp	.+20     	; 0x8ea <__DATA_REGION_LENGTH__+0xea>
 8d6:	29 2f       	mov	r18, r25
 8d8:	26 60       	ori	r18, 0x06	; 6
 8da:	b2 2e       	mov	r11, r18
 8dc:	06 c0       	rjmp	.+12     	; 0x8ea <__DATA_REGION_LENGTH__+0xea>
 8de:	28 e0       	ldi	r18, 0x08	; 8
 8e0:	30 e0       	ldi	r19, 0x00	; 0
 8e2:	05 c0       	rjmp	.+10     	; 0x8ee <__DATA_REGION_LENGTH__+0xee>
 8e4:	20 e1       	ldi	r18, 0x10	; 16
 8e6:	30 e0       	ldi	r19, 0x00	; 0
 8e8:	02 c0       	rjmp	.+4      	; 0x8ee <__DATA_REGION_LENGTH__+0xee>
 8ea:	20 e1       	ldi	r18, 0x10	; 16
 8ec:	32 e0       	ldi	r19, 0x02	; 2
 8ee:	f8 01       	movw	r30, r16
 8f0:	b7 fe       	sbrs	r11, 7
 8f2:	07 c0       	rjmp	.+14     	; 0x902 <__stack+0x3>
 8f4:	60 81       	ld	r22, Z
 8f6:	71 81       	ldd	r23, Z+1	; 0x01
 8f8:	82 81       	ldd	r24, Z+2	; 0x02
 8fa:	93 81       	ldd	r25, Z+3	; 0x03
 8fc:	0c 5f       	subi	r16, 0xFC	; 252
 8fe:	1f 4f       	sbci	r17, 0xFF	; 255
 900:	06 c0       	rjmp	.+12     	; 0x90e <__stack+0xf>
 902:	60 81       	ld	r22, Z
 904:	71 81       	ldd	r23, Z+1	; 0x01
 906:	80 e0       	ldi	r24, 0x00	; 0
 908:	90 e0       	ldi	r25, 0x00	; 0
 90a:	0e 5f       	subi	r16, 0xFE	; 254
 90c:	1f 4f       	sbci	r17, 0xFF	; 255
 90e:	a3 01       	movw	r20, r6
 910:	0e 94 6c 05 	call	0xad8	; 0xad8 <__ultoa_invert>
 914:	88 2e       	mov	r8, r24
 916:	86 18       	sub	r8, r6
 918:	fb 2d       	mov	r31, r11
 91a:	ff 77       	andi	r31, 0x7F	; 127
 91c:	3f 2e       	mov	r3, r31
 91e:	36 fe       	sbrs	r3, 6
 920:	0d c0       	rjmp	.+26     	; 0x93c <__stack+0x3d>
 922:	23 2d       	mov	r18, r3
 924:	2e 7f       	andi	r18, 0xFE	; 254
 926:	a2 2e       	mov	r10, r18
 928:	89 14       	cp	r8, r9
 92a:	58 f4       	brcc	.+22     	; 0x942 <__stack+0x43>
 92c:	34 fe       	sbrs	r3, 4
 92e:	0b c0       	rjmp	.+22     	; 0x946 <__stack+0x47>
 930:	32 fc       	sbrc	r3, 2
 932:	09 c0       	rjmp	.+18     	; 0x946 <__stack+0x47>
 934:	83 2d       	mov	r24, r3
 936:	8e 7e       	andi	r24, 0xEE	; 238
 938:	a8 2e       	mov	r10, r24
 93a:	05 c0       	rjmp	.+10     	; 0x946 <__stack+0x47>
 93c:	b8 2c       	mov	r11, r8
 93e:	a3 2c       	mov	r10, r3
 940:	03 c0       	rjmp	.+6      	; 0x948 <__stack+0x49>
 942:	b8 2c       	mov	r11, r8
 944:	01 c0       	rjmp	.+2      	; 0x948 <__stack+0x49>
 946:	b9 2c       	mov	r11, r9
 948:	a4 fe       	sbrs	r10, 4
 94a:	0f c0       	rjmp	.+30     	; 0x96a <__stack+0x6b>
 94c:	fe 01       	movw	r30, r28
 94e:	e8 0d       	add	r30, r8
 950:	f1 1d       	adc	r31, r1
 952:	80 81       	ld	r24, Z
 954:	80 33       	cpi	r24, 0x30	; 48
 956:	21 f4       	brne	.+8      	; 0x960 <__stack+0x61>
 958:	9a 2d       	mov	r25, r10
 95a:	99 7e       	andi	r25, 0xE9	; 233
 95c:	a9 2e       	mov	r10, r25
 95e:	09 c0       	rjmp	.+18     	; 0x972 <__stack+0x73>
 960:	a2 fe       	sbrs	r10, 2
 962:	06 c0       	rjmp	.+12     	; 0x970 <__stack+0x71>
 964:	b3 94       	inc	r11
 966:	b3 94       	inc	r11
 968:	04 c0       	rjmp	.+8      	; 0x972 <__stack+0x73>
 96a:	8a 2d       	mov	r24, r10
 96c:	86 78       	andi	r24, 0x86	; 134
 96e:	09 f0       	breq	.+2      	; 0x972 <__stack+0x73>
 970:	b3 94       	inc	r11
 972:	a3 fc       	sbrc	r10, 3
 974:	11 c0       	rjmp	.+34     	; 0x998 <__stack+0x99>
 976:	a0 fe       	sbrs	r10, 0
 978:	06 c0       	rjmp	.+12     	; 0x986 <__stack+0x87>
 97a:	b2 14       	cp	r11, r2
 97c:	88 f4       	brcc	.+34     	; 0x9a0 <__stack+0xa1>
 97e:	28 0c       	add	r2, r8
 980:	92 2c       	mov	r9, r2
 982:	9b 18       	sub	r9, r11
 984:	0e c0       	rjmp	.+28     	; 0x9a2 <__stack+0xa3>
 986:	b2 14       	cp	r11, r2
 988:	60 f4       	brcc	.+24     	; 0x9a2 <__stack+0xa3>
 98a:	b6 01       	movw	r22, r12
 98c:	80 e2       	ldi	r24, 0x20	; 32
 98e:	90 e0       	ldi	r25, 0x00	; 0
 990:	0e 94 30 05 	call	0xa60	; 0xa60 <fputc>
 994:	b3 94       	inc	r11
 996:	f7 cf       	rjmp	.-18     	; 0x986 <__stack+0x87>
 998:	b2 14       	cp	r11, r2
 99a:	18 f4       	brcc	.+6      	; 0x9a2 <__stack+0xa3>
 99c:	2b 18       	sub	r2, r11
 99e:	02 c0       	rjmp	.+4      	; 0x9a4 <__stack+0xa5>
 9a0:	98 2c       	mov	r9, r8
 9a2:	21 2c       	mov	r2, r1
 9a4:	a4 fe       	sbrs	r10, 4
 9a6:	10 c0       	rjmp	.+32     	; 0x9c8 <__stack+0xc9>
 9a8:	b6 01       	movw	r22, r12
 9aa:	80 e3       	ldi	r24, 0x30	; 48
 9ac:	90 e0       	ldi	r25, 0x00	; 0
 9ae:	0e 94 30 05 	call	0xa60	; 0xa60 <fputc>
 9b2:	a2 fe       	sbrs	r10, 2
 9b4:	17 c0       	rjmp	.+46     	; 0x9e4 <__stack+0xe5>
 9b6:	a1 fc       	sbrc	r10, 1
 9b8:	03 c0       	rjmp	.+6      	; 0x9c0 <__stack+0xc1>
 9ba:	88 e7       	ldi	r24, 0x78	; 120
 9bc:	90 e0       	ldi	r25, 0x00	; 0
 9be:	02 c0       	rjmp	.+4      	; 0x9c4 <__stack+0xc5>
 9c0:	88 e5       	ldi	r24, 0x58	; 88
 9c2:	90 e0       	ldi	r25, 0x00	; 0
 9c4:	b6 01       	movw	r22, r12
 9c6:	0c c0       	rjmp	.+24     	; 0x9e0 <__stack+0xe1>
 9c8:	8a 2d       	mov	r24, r10
 9ca:	86 78       	andi	r24, 0x86	; 134
 9cc:	59 f0       	breq	.+22     	; 0x9e4 <__stack+0xe5>
 9ce:	a1 fe       	sbrs	r10, 1
 9d0:	02 c0       	rjmp	.+4      	; 0x9d6 <__stack+0xd7>
 9d2:	8b e2       	ldi	r24, 0x2B	; 43
 9d4:	01 c0       	rjmp	.+2      	; 0x9d8 <__stack+0xd9>
 9d6:	80 e2       	ldi	r24, 0x20	; 32
 9d8:	a7 fc       	sbrc	r10, 7
 9da:	8d e2       	ldi	r24, 0x2D	; 45
 9dc:	b6 01       	movw	r22, r12
 9de:	90 e0       	ldi	r25, 0x00	; 0
 9e0:	0e 94 30 05 	call	0xa60	; 0xa60 <fputc>
 9e4:	89 14       	cp	r8, r9
 9e6:	38 f4       	brcc	.+14     	; 0x9f6 <__stack+0xf7>
 9e8:	b6 01       	movw	r22, r12
 9ea:	80 e3       	ldi	r24, 0x30	; 48
 9ec:	90 e0       	ldi	r25, 0x00	; 0
 9ee:	0e 94 30 05 	call	0xa60	; 0xa60 <fputc>
 9f2:	9a 94       	dec	r9
 9f4:	f7 cf       	rjmp	.-18     	; 0x9e4 <__stack+0xe5>
 9f6:	8a 94       	dec	r8
 9f8:	f3 01       	movw	r30, r6
 9fa:	e8 0d       	add	r30, r8
 9fc:	f1 1d       	adc	r31, r1
 9fe:	80 81       	ld	r24, Z
 a00:	b6 01       	movw	r22, r12
 a02:	90 e0       	ldi	r25, 0x00	; 0
 a04:	0e 94 30 05 	call	0xa60	; 0xa60 <fputc>
 a08:	81 10       	cpse	r8, r1
 a0a:	f5 cf       	rjmp	.-22     	; 0x9f6 <__stack+0xf7>
 a0c:	22 20       	and	r2, r2
 a0e:	09 f4       	brne	.+2      	; 0xa12 <__stack+0x113>
 a10:	42 ce       	rjmp	.-892    	; 0x696 <vfprintf+0x24>
 a12:	b6 01       	movw	r22, r12
 a14:	80 e2       	ldi	r24, 0x20	; 32
 a16:	90 e0       	ldi	r25, 0x00	; 0
 a18:	0e 94 30 05 	call	0xa60	; 0xa60 <fputc>
 a1c:	2a 94       	dec	r2
 a1e:	f6 cf       	rjmp	.-20     	; 0xa0c <__stack+0x10d>
 a20:	f6 01       	movw	r30, r12
 a22:	86 81       	ldd	r24, Z+6	; 0x06
 a24:	97 81       	ldd	r25, Z+7	; 0x07
 a26:	02 c0       	rjmp	.+4      	; 0xa2c <__stack+0x12d>
 a28:	8f ef       	ldi	r24, 0xFF	; 255
 a2a:	9f ef       	ldi	r25, 0xFF	; 255
 a2c:	2b 96       	adiw	r28, 0x0b	; 11
 a2e:	e2 e1       	ldi	r30, 0x12	; 18
 a30:	0c 94 e6 05 	jmp	0xbcc	; 0xbcc <__epilogue_restores__>

00000a34 <strnlen_P>:
 a34:	fc 01       	movw	r30, r24
 a36:	05 90       	lpm	r0, Z+
 a38:	61 50       	subi	r22, 0x01	; 1
 a3a:	70 40       	sbci	r23, 0x00	; 0
 a3c:	01 10       	cpse	r0, r1
 a3e:	d8 f7       	brcc	.-10     	; 0xa36 <strnlen_P+0x2>
 a40:	80 95       	com	r24
 a42:	90 95       	com	r25
 a44:	8e 0f       	add	r24, r30
 a46:	9f 1f       	adc	r25, r31
 a48:	08 95       	ret

00000a4a <strnlen>:
 a4a:	fc 01       	movw	r30, r24
 a4c:	61 50       	subi	r22, 0x01	; 1
 a4e:	70 40       	sbci	r23, 0x00	; 0
 a50:	01 90       	ld	r0, Z+
 a52:	01 10       	cpse	r0, r1
 a54:	d8 f7       	brcc	.-10     	; 0xa4c <strnlen+0x2>
 a56:	80 95       	com	r24
 a58:	90 95       	com	r25
 a5a:	8e 0f       	add	r24, r30
 a5c:	9f 1f       	adc	r25, r31
 a5e:	08 95       	ret

00000a60 <fputc>:
 a60:	0f 93       	push	r16
 a62:	1f 93       	push	r17
 a64:	cf 93       	push	r28
 a66:	df 93       	push	r29
 a68:	fb 01       	movw	r30, r22
 a6a:	23 81       	ldd	r18, Z+3	; 0x03
 a6c:	21 fd       	sbrc	r18, 1
 a6e:	03 c0       	rjmp	.+6      	; 0xa76 <fputc+0x16>
 a70:	8f ef       	ldi	r24, 0xFF	; 255
 a72:	9f ef       	ldi	r25, 0xFF	; 255
 a74:	2c c0       	rjmp	.+88     	; 0xace <fputc+0x6e>
 a76:	22 ff       	sbrs	r18, 2
 a78:	16 c0       	rjmp	.+44     	; 0xaa6 <fputc+0x46>
 a7a:	46 81       	ldd	r20, Z+6	; 0x06
 a7c:	57 81       	ldd	r21, Z+7	; 0x07
 a7e:	24 81       	ldd	r18, Z+4	; 0x04
 a80:	35 81       	ldd	r19, Z+5	; 0x05
 a82:	42 17       	cp	r20, r18
 a84:	53 07       	cpc	r21, r19
 a86:	44 f4       	brge	.+16     	; 0xa98 <fputc+0x38>
 a88:	a0 81       	ld	r26, Z
 a8a:	b1 81       	ldd	r27, Z+1	; 0x01
 a8c:	9d 01       	movw	r18, r26
 a8e:	2f 5f       	subi	r18, 0xFF	; 255
 a90:	3f 4f       	sbci	r19, 0xFF	; 255
 a92:	31 83       	std	Z+1, r19	; 0x01
 a94:	20 83       	st	Z, r18
 a96:	8c 93       	st	X, r24
 a98:	26 81       	ldd	r18, Z+6	; 0x06
 a9a:	37 81       	ldd	r19, Z+7	; 0x07
 a9c:	2f 5f       	subi	r18, 0xFF	; 255
 a9e:	3f 4f       	sbci	r19, 0xFF	; 255
 aa0:	37 83       	std	Z+7, r19	; 0x07
 aa2:	26 83       	std	Z+6, r18	; 0x06
 aa4:	14 c0       	rjmp	.+40     	; 0xace <fputc+0x6e>
 aa6:	8b 01       	movw	r16, r22
 aa8:	ec 01       	movw	r28, r24
 aaa:	fb 01       	movw	r30, r22
 aac:	00 84       	ldd	r0, Z+8	; 0x08
 aae:	f1 85       	ldd	r31, Z+9	; 0x09
 ab0:	e0 2d       	mov	r30, r0
 ab2:	09 95       	icall
 ab4:	89 2b       	or	r24, r25
 ab6:	e1 f6       	brne	.-72     	; 0xa70 <fputc+0x10>
 ab8:	d8 01       	movw	r26, r16
 aba:	16 96       	adiw	r26, 0x06	; 6
 abc:	8d 91       	ld	r24, X+
 abe:	9c 91       	ld	r25, X
 ac0:	17 97       	sbiw	r26, 0x07	; 7
 ac2:	01 96       	adiw	r24, 0x01	; 1
 ac4:	17 96       	adiw	r26, 0x07	; 7
 ac6:	9c 93       	st	X, r25
 ac8:	8e 93       	st	-X, r24
 aca:	16 97       	sbiw	r26, 0x06	; 6
 acc:	ce 01       	movw	r24, r28
 ace:	df 91       	pop	r29
 ad0:	cf 91       	pop	r28
 ad2:	1f 91       	pop	r17
 ad4:	0f 91       	pop	r16
 ad6:	08 95       	ret

00000ad8 <__ultoa_invert>:
 ad8:	fa 01       	movw	r30, r20
 ada:	aa 27       	eor	r26, r26
 adc:	28 30       	cpi	r18, 0x08	; 8
 ade:	51 f1       	breq	.+84     	; 0xb34 <__ultoa_invert+0x5c>
 ae0:	20 31       	cpi	r18, 0x10	; 16
 ae2:	81 f1       	breq	.+96     	; 0xb44 <__ultoa_invert+0x6c>
 ae4:	e8 94       	clt
 ae6:	6f 93       	push	r22
 ae8:	6e 7f       	andi	r22, 0xFE	; 254
 aea:	6e 5f       	subi	r22, 0xFE	; 254
 aec:	7f 4f       	sbci	r23, 0xFF	; 255
 aee:	8f 4f       	sbci	r24, 0xFF	; 255
 af0:	9f 4f       	sbci	r25, 0xFF	; 255
 af2:	af 4f       	sbci	r26, 0xFF	; 255
 af4:	b1 e0       	ldi	r27, 0x01	; 1
 af6:	3e d0       	rcall	.+124    	; 0xb74 <__ultoa_invert+0x9c>
 af8:	b4 e0       	ldi	r27, 0x04	; 4
 afa:	3c d0       	rcall	.+120    	; 0xb74 <__ultoa_invert+0x9c>
 afc:	67 0f       	add	r22, r23
 afe:	78 1f       	adc	r23, r24
 b00:	89 1f       	adc	r24, r25
 b02:	9a 1f       	adc	r25, r26
 b04:	a1 1d       	adc	r26, r1
 b06:	68 0f       	add	r22, r24
 b08:	79 1f       	adc	r23, r25
 b0a:	8a 1f       	adc	r24, r26
 b0c:	91 1d       	adc	r25, r1
 b0e:	a1 1d       	adc	r26, r1
 b10:	6a 0f       	add	r22, r26
 b12:	71 1d       	adc	r23, r1
 b14:	81 1d       	adc	r24, r1
 b16:	91 1d       	adc	r25, r1
 b18:	a1 1d       	adc	r26, r1
 b1a:	20 d0       	rcall	.+64     	; 0xb5c <__ultoa_invert+0x84>
 b1c:	09 f4       	brne	.+2      	; 0xb20 <__ultoa_invert+0x48>
 b1e:	68 94       	set
 b20:	3f 91       	pop	r19
 b22:	2a e0       	ldi	r18, 0x0A	; 10
 b24:	26 9f       	mul	r18, r22
 b26:	11 24       	eor	r1, r1
 b28:	30 19       	sub	r19, r0
 b2a:	30 5d       	subi	r19, 0xD0	; 208
 b2c:	31 93       	st	Z+, r19
 b2e:	de f6       	brtc	.-74     	; 0xae6 <__ultoa_invert+0xe>
 b30:	cf 01       	movw	r24, r30
 b32:	08 95       	ret
 b34:	46 2f       	mov	r20, r22
 b36:	47 70       	andi	r20, 0x07	; 7
 b38:	40 5d       	subi	r20, 0xD0	; 208
 b3a:	41 93       	st	Z+, r20
 b3c:	b3 e0       	ldi	r27, 0x03	; 3
 b3e:	0f d0       	rcall	.+30     	; 0xb5e <__ultoa_invert+0x86>
 b40:	c9 f7       	brne	.-14     	; 0xb34 <__ultoa_invert+0x5c>
 b42:	f6 cf       	rjmp	.-20     	; 0xb30 <__ultoa_invert+0x58>
 b44:	46 2f       	mov	r20, r22
 b46:	4f 70       	andi	r20, 0x0F	; 15
 b48:	40 5d       	subi	r20, 0xD0	; 208
 b4a:	4a 33       	cpi	r20, 0x3A	; 58
 b4c:	18 f0       	brcs	.+6      	; 0xb54 <__ultoa_invert+0x7c>
 b4e:	49 5d       	subi	r20, 0xD9	; 217
 b50:	31 fd       	sbrc	r19, 1
 b52:	40 52       	subi	r20, 0x20	; 32
 b54:	41 93       	st	Z+, r20
 b56:	02 d0       	rcall	.+4      	; 0xb5c <__ultoa_invert+0x84>
 b58:	a9 f7       	brne	.-22     	; 0xb44 <__ultoa_invert+0x6c>
 b5a:	ea cf       	rjmp	.-44     	; 0xb30 <__ultoa_invert+0x58>
 b5c:	b4 e0       	ldi	r27, 0x04	; 4
 b5e:	a6 95       	lsr	r26
 b60:	97 95       	ror	r25
 b62:	87 95       	ror	r24
 b64:	77 95       	ror	r23
 b66:	67 95       	ror	r22
 b68:	ba 95       	dec	r27
 b6a:	c9 f7       	brne	.-14     	; 0xb5e <__ultoa_invert+0x86>
 b6c:	00 97       	sbiw	r24, 0x00	; 0
 b6e:	61 05       	cpc	r22, r1
 b70:	71 05       	cpc	r23, r1
 b72:	08 95       	ret
 b74:	9b 01       	movw	r18, r22
 b76:	ac 01       	movw	r20, r24
 b78:	0a 2e       	mov	r0, r26
 b7a:	06 94       	lsr	r0
 b7c:	57 95       	ror	r21
 b7e:	47 95       	ror	r20
 b80:	37 95       	ror	r19
 b82:	27 95       	ror	r18
 b84:	ba 95       	dec	r27
 b86:	c9 f7       	brne	.-14     	; 0xb7a <__ultoa_invert+0xa2>
 b88:	62 0f       	add	r22, r18
 b8a:	73 1f       	adc	r23, r19
 b8c:	84 1f       	adc	r24, r20
 b8e:	95 1f       	adc	r25, r21
 b90:	a0 1d       	adc	r26, r0
 b92:	08 95       	ret

00000b94 <__prologue_saves__>:
 b94:	2f 92       	push	r2
 b96:	3f 92       	push	r3
 b98:	4f 92       	push	r4
 b9a:	5f 92       	push	r5
 b9c:	6f 92       	push	r6
 b9e:	7f 92       	push	r7
 ba0:	8f 92       	push	r8
 ba2:	9f 92       	push	r9
 ba4:	af 92       	push	r10
 ba6:	bf 92       	push	r11
 ba8:	cf 92       	push	r12
 baa:	df 92       	push	r13
 bac:	ef 92       	push	r14
 bae:	ff 92       	push	r15
 bb0:	0f 93       	push	r16
 bb2:	1f 93       	push	r17
 bb4:	cf 93       	push	r28
 bb6:	df 93       	push	r29
 bb8:	cd b7       	in	r28, 0x3d	; 61
 bba:	de b7       	in	r29, 0x3e	; 62
 bbc:	ca 1b       	sub	r28, r26
 bbe:	db 0b       	sbc	r29, r27
 bc0:	0f b6       	in	r0, 0x3f	; 63
 bc2:	f8 94       	cli
 bc4:	de bf       	out	0x3e, r29	; 62
 bc6:	0f be       	out	0x3f, r0	; 63
 bc8:	cd bf       	out	0x3d, r28	; 61
 bca:	09 94       	ijmp

00000bcc <__epilogue_restores__>:
 bcc:	2a 88       	ldd	r2, Y+18	; 0x12
 bce:	39 88       	ldd	r3, Y+17	; 0x11
 bd0:	48 88       	ldd	r4, Y+16	; 0x10
 bd2:	5f 84       	ldd	r5, Y+15	; 0x0f
 bd4:	6e 84       	ldd	r6, Y+14	; 0x0e
 bd6:	7d 84       	ldd	r7, Y+13	; 0x0d
 bd8:	8c 84       	ldd	r8, Y+12	; 0x0c
 bda:	9b 84       	ldd	r9, Y+11	; 0x0b
 bdc:	aa 84       	ldd	r10, Y+10	; 0x0a
 bde:	b9 84       	ldd	r11, Y+9	; 0x09
 be0:	c8 84       	ldd	r12, Y+8	; 0x08
 be2:	df 80       	ldd	r13, Y+7	; 0x07
 be4:	ee 80       	ldd	r14, Y+6	; 0x06
 be6:	fd 80       	ldd	r15, Y+5	; 0x05
 be8:	0c 81       	ldd	r16, Y+4	; 0x04
 bea:	1b 81       	ldd	r17, Y+3	; 0x03
 bec:	aa 81       	ldd	r26, Y+2	; 0x02
 bee:	b9 81       	ldd	r27, Y+1	; 0x01
 bf0:	ce 0f       	add	r28, r30
 bf2:	d1 1d       	adc	r29, r1
 bf4:	0f b6       	in	r0, 0x3f	; 63
 bf6:	f8 94       	cli
 bf8:	de bf       	out	0x3e, r29	; 62
 bfa:	0f be       	out	0x3f, r0	; 63
 bfc:	cd bf       	out	0x3d, r28	; 61
 bfe:	ed 01       	movw	r28, r26
 c00:	08 95       	ret

00000c02 <_exit>:
 c02:	f8 94       	cli

00000c04 <__stop_program>:
 c04:	ff cf       	rjmp	.-2      	; 0xc04 <__stop_program>
