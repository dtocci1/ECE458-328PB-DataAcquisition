
DataAcquisition.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000a4  00800100  00000e3e  00000ed2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000e3e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  008001a4  008001a4  00000f76  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000f76  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000fd4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000058  00000000  00000000  00001014  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000cf6  00000000  00000000  0000106c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a96  00000000  00000000  00001d62  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000044c  00000000  00000000  000027f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000f0  00000000  00000000  00002c44  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005ee  00000000  00000000  00002d34  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000002c7  00000000  00000000  00003322  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000048  00000000  00000000  000035e9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
   4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
   8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
   c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  10:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  14:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  18:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  1c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  20:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  24:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  28:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  2c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  30:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  34:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  38:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  3c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  40:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  44:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  48:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  4c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  50:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  54:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  58:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  5c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  60:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  64:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  68:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  6c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  70:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  74:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  78:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  7c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  80:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  84:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  88:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  8c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  90:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  94:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  98:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  9c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  ac:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  b0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d8 e0       	ldi	r29, 0x08	; 8
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61

000000c0 <__do_copy_data>:
  c0:	11 e0       	ldi	r17, 0x01	; 1
  c2:	a0 e0       	ldi	r26, 0x00	; 0
  c4:	b1 e0       	ldi	r27, 0x01	; 1
  c6:	ee e3       	ldi	r30, 0x3E	; 62
  c8:	fe e0       	ldi	r31, 0x0E	; 14
  ca:	02 c0       	rjmp	.+4      	; 0xd0 <__do_copy_data+0x10>
  cc:	05 90       	lpm	r0, Z+
  ce:	0d 92       	st	X+, r0
  d0:	a4 3a       	cpi	r26, 0xA4	; 164
  d2:	b1 07       	cpc	r27, r17
  d4:	d9 f7       	brne	.-10     	; 0xcc <__do_copy_data+0xc>

000000d6 <__do_clear_bss>:
  d6:	21 e0       	ldi	r18, 0x01	; 1
  d8:	a4 ea       	ldi	r26, 0xA4	; 164
  da:	b1 e0       	ldi	r27, 0x01	; 1
  dc:	01 c0       	rjmp	.+2      	; 0xe0 <.do_clear_bss_start>

000000de <.do_clear_bss_loop>:
  de:	1d 92       	st	X+, r1

000000e0 <.do_clear_bss_start>:
  e0:	aa 3a       	cpi	r26, 0xAA	; 170
  e2:	b2 07       	cpc	r27, r18
  e4:	e1 f7       	brne	.-8      	; 0xde <.do_clear_bss_loop>
  e6:	0e 94 0b 01 	call	0x216	; 0x216 <main>
  ea:	0c 94 1d 07 	jmp	0xe3a	; 0xe3a <_exit>

000000ee <__bad_interrupt>:
  ee:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000f2 <USART0SendByte>:
	//enable transmission and reception
	UCSR0B |= (1<<RXEN0)|(1<<TXEN0);
}

int USART0SendByte(char u8Data, FILE *stream)
{
  f2:	cf 93       	push	r28
  f4:	c8 2f       	mov	r28, r24
	if(u8Data == '\n')
  f6:	8a 30       	cpi	r24, 0x0A	; 10
  f8:	19 f4       	brne	.+6      	; 0x100 <USART0SendByte+0xe>
	{
		USART0SendByte('\r', stream);
  fa:	8d e0       	ldi	r24, 0x0D	; 13
  fc:	0e 94 79 00 	call	0xf2	; 0xf2 <USART0SendByte>
	}
	//wait while previous byte is completed
	while(!(UCSR0A&(1<<UDRE0))){};
 100:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 104:	85 ff       	sbrs	r24, 5
 106:	fc cf       	rjmp	.-8      	; 0x100 <USART0SendByte+0xe>
	// Transmit data
	UDR0 = u8Data;
 108:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
	return 0;
}
 10c:	80 e0       	ldi	r24, 0x00	; 0
 10e:	90 e0       	ldi	r25, 0x00	; 0
 110:	cf 91       	pop	r28
 112:	08 95       	ret

00000114 <returnPressure>:
#define VREF 5

float returnPressure(uint16_t pressure)
{
	float conversion;
	conversion = ((((5 * ((double)pressure / 1024)) - 0.5) * 25.3815) + 12.422) * 1000;// * 25.3815) - 0.6351236) * 1000; // convert to 10-bit value to Volts, then multiply by 23.3815 (PSI/V) for pressure
 114:	bc 01       	movw	r22, r24
 116:	80 e0       	ldi	r24, 0x00	; 0
 118:	90 e0       	ldi	r25, 0x00	; 0
 11a:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <__floatunsisf>
 11e:	20 e0       	ldi	r18, 0x00	; 0
 120:	30 e0       	ldi	r19, 0x00	; 0
 122:	40 e8       	ldi	r20, 0x80	; 128
 124:	5a e3       	ldi	r21, 0x3A	; 58
 126:	0e 94 a2 03 	call	0x744	; 0x744 <__mulsf3>
 12a:	20 e0       	ldi	r18, 0x00	; 0
 12c:	30 e0       	ldi	r19, 0x00	; 0
 12e:	40 ea       	ldi	r20, 0xA0	; 160
 130:	50 e4       	ldi	r21, 0x40	; 64
 132:	0e 94 a2 03 	call	0x744	; 0x744 <__mulsf3>
 136:	20 e0       	ldi	r18, 0x00	; 0
 138:	30 e0       	ldi	r19, 0x00	; 0
 13a:	40 e0       	ldi	r20, 0x00	; 0
 13c:	5f e3       	ldi	r21, 0x3F	; 63
 13e:	0e 94 d6 01 	call	0x3ac	; 0x3ac <__subsf3>
 142:	20 e5       	ldi	r18, 0x50	; 80
 144:	3d e0       	ldi	r19, 0x0D	; 13
 146:	4b ec       	ldi	r20, 0xCB	; 203
 148:	51 e4       	ldi	r21, 0x41	; 65
 14a:	0e 94 a2 03 	call	0x744	; 0x744 <__mulsf3>
 14e:	23 e8       	ldi	r18, 0x83	; 131
 150:	30 ec       	ldi	r19, 0xC0	; 192
 152:	46 e4       	ldi	r20, 0x46	; 70
 154:	51 e4       	ldi	r21, 0x41	; 65
 156:	0e 94 d7 01 	call	0x3ae	; 0x3ae <__addsf3>
 15a:	20 e0       	ldi	r18, 0x00	; 0
 15c:	30 e0       	ldi	r19, 0x00	; 0
 15e:	4a e7       	ldi	r20, 0x7A	; 122
 160:	54 e4       	ldi	r21, 0x44	; 68
 162:	0e 94 a2 03 	call	0x744	; 0x744 <__mulsf3>
	return conversion;
}
 166:	08 95       	ret

00000168 <returnTemperature>:

float returnTemperature(uint16_t resistance) // requires compensation
{
	float conversion;
	conversion = 0.260075107866203 * resistance - 260.068512926113;
 168:	bc 01       	movw	r22, r24
 16a:	80 e0       	ldi	r24, 0x00	; 0
 16c:	90 e0       	ldi	r25, 0x00	; 0
 16e:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <__floatunsisf>
 172:	21 e9       	ldi	r18, 0x91	; 145
 174:	38 e2       	ldi	r19, 0x28	; 40
 176:	45 e8       	ldi	r20, 0x85	; 133
 178:	5e e3       	ldi	r21, 0x3E	; 62
 17a:	0e 94 a2 03 	call	0x744	; 0x744 <__mulsf3>
 17e:	25 ec       	ldi	r18, 0xC5	; 197
 180:	38 e0       	ldi	r19, 0x08	; 8
 182:	42 e8       	ldi	r20, 0x82	; 130
 184:	53 e4       	ldi	r21, 0x43	; 67
 186:	0e 94 d6 01 	call	0x3ac	; 0x3ac <__subsf3>
	return conversion;
}
 18a:	08 95       	ret

0000018c <returnMoisture>:
	// Moisture sensor measures from 0 to 3.085V max based on water level
	// In theory, more voltage indicates more water is hitting the sensor
	// This needs to be validated in testing.
	// If statement need to be adjusted, reaches level 5 at half way on sensor somehow
	float conversion;
	conversion = ((double)moisture/1024) * 500; // convert to voltage (0-5V)
 18c:	bc 01       	movw	r22, r24
 18e:	80 e0       	ldi	r24, 0x00	; 0
 190:	90 e0       	ldi	r25, 0x00	; 0
 192:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <__floatunsisf>
 196:	20 e0       	ldi	r18, 0x00	; 0
 198:	30 e0       	ldi	r19, 0x00	; 0
 19a:	40 e8       	ldi	r20, 0x80	; 128
 19c:	5a e3       	ldi	r21, 0x3A	; 58
 19e:	0e 94 a2 03 	call	0x744	; 0x744 <__mulsf3>
 1a2:	20 e0       	ldi	r18, 0x00	; 0
 1a4:	30 e0       	ldi	r19, 0x00	; 0
 1a6:	4a ef       	ldi	r20, 0xFA	; 250
 1a8:	53 e4       	ldi	r21, 0x43	; 67
 1aa:	0e 94 a2 03 	call	0x744	; 0x744 <__mulsf3>
	return conversion;
 1ae:	0e 94 ba 02 	call	0x574	; 0x574 <__fixsfsi>
	else if (conversion < 2.4)
		return 4;
	else
		return 5;
		
}
 1b2:	cb 01       	movw	r24, r22
 1b4:	08 95       	ret

000001b6 <USART0Init>:

void USART0Init(void)
{
	// Set baud rate
	UBRR0H = (uint8_t)(UBRR_VALUE>>8);
 1b6:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
	UBRR0L = (uint8_t)UBRR_VALUE;
 1ba:	87 e6       	ldi	r24, 0x67	; 103
 1bc:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
	// Set frame format to 8 data bits, no parity, 1 stop bit
	UCSR0C |= (1<<UCSZ01)|(1<<UCSZ00);
 1c0:	e2 ec       	ldi	r30, 0xC2	; 194
 1c2:	f0 e0       	ldi	r31, 0x00	; 0
 1c4:	80 81       	ld	r24, Z
 1c6:	86 60       	ori	r24, 0x06	; 6
 1c8:	80 83       	st	Z, r24
	//enable transmission and reception
	UCSR0B |= (1<<RXEN0)|(1<<TXEN0);
 1ca:	e1 ec       	ldi	r30, 0xC1	; 193
 1cc:	f0 e0       	ldi	r31, 0x00	; 0
 1ce:	80 81       	ld	r24, Z
 1d0:	88 61       	ori	r24, 0x18	; 24
 1d2:	80 83       	st	Z, r24
 1d4:	08 95       	ret

000001d6 <InitADC>:
//set stream pointer
FILE usart0_str = FDEV_SETUP_STREAM(USART0SendByte, NULL, _FDEV_SETUP_WRITE);
void InitADC()
{
    // Select Vref = AVcc
    ADMUX |= (1<<REFS0);
 1d6:	ec e7       	ldi	r30, 0x7C	; 124
 1d8:	f0 e0       	ldi	r31, 0x00	; 0
 1da:	80 81       	ld	r24, Z
 1dc:	80 64       	ori	r24, 0x40	; 64
 1de:	80 83       	st	Z, r24
    //set prescaller to 128 and enable ADC  
    ADCSRA |= (1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0)|(1<<ADEN);     
 1e0:	ea e7       	ldi	r30, 0x7A	; 122
 1e2:	f0 e0       	ldi	r31, 0x00	; 0
 1e4:	80 81       	ld	r24, Z
 1e6:	87 68       	ori	r24, 0x87	; 135
 1e8:	80 83       	st	Z, r24
 1ea:	08 95       	ret

000001ec <ReadADC>:
}

uint16_t ReadADC(uint8_t ADCchannel)
{
    //select ADC channel with safety mask
    ADMUX = (ADMUX & 0xF0) | (ADCchannel & 0x0F); 
 1ec:	ec e7       	ldi	r30, 0x7C	; 124
 1ee:	f0 e0       	ldi	r31, 0x00	; 0
 1f0:	90 81       	ld	r25, Z
 1f2:	90 7f       	andi	r25, 0xF0	; 240
 1f4:	8f 70       	andi	r24, 0x0F	; 15
 1f6:	89 2b       	or	r24, r25
 1f8:	80 83       	st	Z, r24
    //single conversion mode
    ADCSRA |= (1<<ADSC);
 1fa:	ea e7       	ldi	r30, 0x7A	; 122
 1fc:	f0 e0       	ldi	r31, 0x00	; 0
 1fe:	80 81       	ld	r24, Z
 200:	80 64       	ori	r24, 0x40	; 64
 202:	80 83       	st	Z, r24
    // wait until ADC conversion is complete
    while( ADCSRA & (1<<ADSC) );
 204:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
 208:	86 fd       	sbrc	r24, 6
 20a:	fc cf       	rjmp	.-8      	; 0x204 <ReadADC+0x18>
   return ADC;
 20c:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
 210:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
}
 214:	08 95       	ret

00000216 <main>:
	double rtdVal, presVal, moisVal, tempVal;
	uint16_t curTime = 0;
	uint16_t convTempVal = 0;
	uint16_t moisPercent = 0;
	//initialize ADC
	InitADC();
 216:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <InitADC>
	//Initialize USART0
	USART0Init();
 21a:	0e 94 db 00 	call	0x1b6	; 0x1b6 <USART0Init>
	//assign our stream to standard I/O streams
	stdout=&usart0_str;
 21e:	80 e0       	ldi	r24, 0x00	; 0
 220:	91 e0       	ldi	r25, 0x01	; 1
 222:	90 93 a7 01 	sts	0x01A7, r25	; 0x8001a7 <__data_end+0x3>
 226:	80 93 a6 01 	sts	0x01A6, r24	; 0x8001a6 <__data_end+0x2>
	printf("Time (min)\tTemperature (C)\tPressure (mPSI)\tMoisture (%)\n"); // 15 char columns with tab spacing
 22a:	8e e0       	ldi	r24, 0x0E	; 14
 22c:	91 e0       	ldi	r25, 0x01	; 1
 22e:	9f 93       	push	r25
 230:	8f 93       	push	r24
 232:	0e 94 0f 04 	call	0x81e	; 0x81e <printf>
	printf("------------------------------------------------------------------------------\n");
 236:	87 e4       	ldi	r24, 0x47	; 71
 238:	91 e0       	ldi	r25, 0x01	; 1
 23a:	0e 94 25 04 	call	0x84a	; 0x84a <puts>
 23e:	0f 90       	pop	r0
 240:	0f 90       	pop	r0
}

int main()
{
	double rtdVal, presVal, moisVal, tempVal;
	uint16_t curTime = 0;
 242:	c0 e0       	ldi	r28, 0x00	; 0
 244:	d0 e0       	ldi	r29, 0x00	; 0
	stdout=&usart0_str;
	printf("Time (min)\tTemperature (C)\tPressure (mPSI)\tMoisture (%)\n"); // 15 char columns with tab spacing
	printf("------------------------------------------------------------------------------\n");
	while(1)
	{
		rtdVal = ReadADC(0);
 246:	80 e0       	ldi	r24, 0x00	; 0
 248:	0e 94 f6 00 	call	0x1ec	; 0x1ec <ReadADC>
 24c:	bc 01       	movw	r22, r24
 24e:	80 e0       	ldi	r24, 0x00	; 0
 250:	90 e0       	ldi	r25, 0x00	; 0
 252:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <__floatunsisf>
		rtdVal = 5 * (rtdVal/1024); // translate voltage change to resistance
 256:	20 e0       	ldi	r18, 0x00	; 0
 258:	30 e0       	ldi	r19, 0x00	; 0
 25a:	40 e8       	ldi	r20, 0x80	; 128
 25c:	5a e3       	ldi	r21, 0x3A	; 58
 25e:	0e 94 a2 03 	call	0x744	; 0x744 <__mulsf3>
 262:	20 e0       	ldi	r18, 0x00	; 0
 264:	30 e0       	ldi	r19, 0x00	; 0
 266:	40 ea       	ldi	r20, 0xA0	; 160
 268:	50 e4       	ldi	r21, 0x40	; 64
 26a:	0e 94 a2 03 	call	0x744	; 0x744 <__mulsf3>
 26e:	6b 01       	movw	r12, r22
 270:	7c 01       	movw	r14, r24
		rtdVal = (rtdVal * 1000)/(5-rtdVal);//returnTemperature(rtdVal); // Convert resistance to temperature via linear regression based on table
 272:	20 e0       	ldi	r18, 0x00	; 0
 274:	30 e0       	ldi	r19, 0x00	; 0
 276:	4a e7       	ldi	r20, 0x7A	; 122
 278:	54 e4       	ldi	r21, 0x44	; 68
 27a:	0e 94 a2 03 	call	0x744	; 0x744 <__mulsf3>
 27e:	4b 01       	movw	r8, r22
 280:	5c 01       	movw	r10, r24
 282:	a7 01       	movw	r20, r14
 284:	96 01       	movw	r18, r12
 286:	60 e0       	ldi	r22, 0x00	; 0
 288:	70 e0       	ldi	r23, 0x00	; 0
 28a:	80 ea       	ldi	r24, 0xA0	; 160
 28c:	90 e4       	ldi	r25, 0x40	; 64
 28e:	0e 94 d6 01 	call	0x3ac	; 0x3ac <__subsf3>
 292:	9b 01       	movw	r18, r22
 294:	ac 01       	movw	r20, r24
 296:	c5 01       	movw	r24, r10
 298:	b4 01       	movw	r22, r8
 29a:	0e 94 48 02 	call	0x490	; 0x490 <__divsf3>
		tempVal = returnTemperature(rtdVal);
 29e:	0e 94 c1 02 	call	0x582	; 0x582 <__fixunssfsi>
 2a2:	cb 01       	movw	r24, r22
 2a4:	0e 94 b4 00 	call	0x168	; 0x168 <returnTemperature>
 2a8:	6b 01       	movw	r12, r22
 2aa:	7c 01       	movw	r14, r24
		presVal = returnPressure(ReadADC(1)); // Calculate pressure
 2ac:	81 e0       	ldi	r24, 0x01	; 1
 2ae:	0e 94 f6 00 	call	0x1ec	; 0x1ec <ReadADC>
 2b2:	0e 94 8a 00 	call	0x114	; 0x114 <returnPressure>
 2b6:	4b 01       	movw	r8, r22
 2b8:	5c 01       	movw	r10, r24
		moisVal = returnMoisture(ReadADC(2));	// Level from 1 - 5: 1 being light mist, 5 being heavy rainfall
 2ba:	82 e0       	ldi	r24, 0x02	; 2
 2bc:	0e 94 f6 00 	call	0x1ec	; 0x1ec <ReadADC>
 2c0:	0e 94 c6 00 	call	0x18c	; 0x18c <returnMoisture>
 2c4:	bc 01       	movw	r22, r24
 2c6:	99 0f       	add	r25, r25
 2c8:	88 0b       	sbc	r24, r24
 2ca:	99 0b       	sbc	r25, r25
 2cc:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <__floatsisf>
 2d0:	2b 01       	movw	r4, r22
 2d2:	3c 01       	movw	r6, r24
		
		// "Print" results to stdout (USART)
		printf("%u\t\t\t",curTime);
 2d4:	df 93       	push	r29
 2d6:	cf 93       	push	r28
 2d8:	87 e9       	ldi	r24, 0x97	; 151
 2da:	91 e0       	ldi	r25, 0x01	; 1
 2dc:	9f 93       	push	r25
 2de:	8f 93       	push	r24
 2e0:	0e 94 0f 04 	call	0x81e	; 0x81e <printf>
		if(tempVal < 0) {
 2e4:	0f 90       	pop	r0
 2e6:	0f 90       	pop	r0
 2e8:	0f 90       	pop	r0
 2ea:	0f 90       	pop	r0
 2ec:	20 e0       	ldi	r18, 0x00	; 0
 2ee:	30 e0       	ldi	r19, 0x00	; 0
 2f0:	a9 01       	movw	r20, r18
 2f2:	c7 01       	movw	r24, r14
 2f4:	b6 01       	movw	r22, r12
 2f6:	0e 94 43 02 	call	0x486	; 0x486 <__cmpsf2>
 2fa:	88 23       	and	r24, r24
 2fc:	b4 f4       	brge	.+44     	; 0x32a <main+0x114>
			convTempVal = 0 + -1*tempVal; // Don't use abs(), destorys int value - may be because its a float
 2fe:	a7 01       	movw	r20, r14
 300:	96 01       	movw	r18, r12
 302:	60 e0       	ldi	r22, 0x00	; 0
 304:	70 e0       	ldi	r23, 0x00	; 0
 306:	cb 01       	movw	r24, r22
 308:	0e 94 d6 01 	call	0x3ac	; 0x3ac <__subsf3>
 30c:	0e 94 c1 02 	call	0x582	; 0x582 <__fixunssfsi>
			printf("-%u\t\t\t", convTempVal);
 310:	7f 93       	push	r23
 312:	6f 93       	push	r22
 314:	86 e9       	ldi	r24, 0x96	; 150
 316:	91 e0       	ldi	r25, 0x01	; 1
 318:	9f 93       	push	r25
 31a:	8f 93       	push	r24
 31c:	0e 94 0f 04 	call	0x81e	; 0x81e <printf>
 320:	0f 90       	pop	r0
 322:	0f 90       	pop	r0
 324:	0f 90       	pop	r0
 326:	0f 90       	pop	r0
 328:	10 c0       	rjmp	.+32     	; 0x34a <main+0x134>
		}
		else
		{
			convTempVal = tempVal;
 32a:	c7 01       	movw	r24, r14
 32c:	b6 01       	movw	r22, r12
 32e:	0e 94 c1 02 	call	0x582	; 0x582 <__fixunssfsi>
			printf("%u\t\t\t", convTempVal);
 332:	7f 93       	push	r23
 334:	6f 93       	push	r22
 336:	87 e9       	ldi	r24, 0x97	; 151
 338:	91 e0       	ldi	r25, 0x01	; 1
 33a:	9f 93       	push	r25
 33c:	8f 93       	push	r24
 33e:	0e 94 0f 04 	call	0x81e	; 0x81e <printf>
 342:	0f 90       	pop	r0
 344:	0f 90       	pop	r0
 346:	0f 90       	pop	r0
 348:	0f 90       	pop	r0
		}
		printf("%u\t\t\t",(uint16_t)presVal);
 34a:	c5 01       	movw	r24, r10
 34c:	b4 01       	movw	r22, r8
 34e:	0e 94 c1 02 	call	0x582	; 0x582 <__fixunssfsi>
 352:	7f 93       	push	r23
 354:	6f 93       	push	r22
 356:	87 e9       	ldi	r24, 0x97	; 151
 358:	91 e0       	ldi	r25, 0x01	; 1
 35a:	9f 93       	push	r25
 35c:	8f 93       	push	r24
 35e:	0e 94 0f 04 	call	0x81e	; 0x81e <printf>
		moisPercent = (moisVal / 3);
 362:	20 e0       	ldi	r18, 0x00	; 0
 364:	30 e0       	ldi	r19, 0x00	; 0
 366:	40 e4       	ldi	r20, 0x40	; 64
 368:	50 e4       	ldi	r21, 0x40	; 64
 36a:	c3 01       	movw	r24, r6
 36c:	b2 01       	movw	r22, r4
 36e:	0e 94 48 02 	call	0x490	; 0x490 <__divsf3>
 372:	0e 94 c1 02 	call	0x582	; 0x582 <__fixunssfsi>
		printf("%u\t\t\t\n",(uint16_t)moisPercent);
 376:	7f 93       	push	r23
 378:	6f 93       	push	r22
 37a:	8d e9       	ldi	r24, 0x9D	; 157
 37c:	91 e0       	ldi	r25, 0x01	; 1
 37e:	9f 93       	push	r25
 380:	8f 93       	push	r24
 382:	0e 94 0f 04 	call	0x81e	; 0x81e <printf>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 386:	9f ef       	ldi	r25, 0xFF	; 255
 388:	2b e4       	ldi	r18, 0x4B	; 75
 38a:	8d e1       	ldi	r24, 0x1D	; 29
 38c:	91 50       	subi	r25, 0x01	; 1
 38e:	20 40       	sbci	r18, 0x00	; 0
 390:	80 40       	sbci	r24, 0x00	; 0
 392:	e1 f7       	brne	.-8      	; 0x38c <main+0x176>
 394:	00 c0       	rjmp	.+0      	; 0x396 <main+0x180>
 396:	00 00       	nop
		_delay_ms(600);
		curTime += 1;
 398:	21 96       	adiw	r28, 0x01	; 1
	} 
 39a:	8d b7       	in	r24, 0x3d	; 61
 39c:	9e b7       	in	r25, 0x3e	; 62
 39e:	08 96       	adiw	r24, 0x08	; 8
 3a0:	0f b6       	in	r0, 0x3f	; 63
 3a2:	f8 94       	cli
 3a4:	9e bf       	out	0x3e, r25	; 62
 3a6:	0f be       	out	0x3f, r0	; 63
 3a8:	8d bf       	out	0x3d, r24	; 61
 3aa:	4d cf       	rjmp	.-358    	; 0x246 <main+0x30>

000003ac <__subsf3>:
 3ac:	50 58       	subi	r21, 0x80	; 128

000003ae <__addsf3>:
 3ae:	bb 27       	eor	r27, r27
 3b0:	aa 27       	eor	r26, r26
 3b2:	0e 94 ee 01 	call	0x3dc	; 0x3dc <__addsf3x>
 3b6:	0c 94 68 03 	jmp	0x6d0	; 0x6d0 <__fp_round>
 3ba:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <__fp_pscA>
 3be:	38 f0       	brcs	.+14     	; 0x3ce <__addsf3+0x20>
 3c0:	0e 94 61 03 	call	0x6c2	; 0x6c2 <__fp_pscB>
 3c4:	20 f0       	brcs	.+8      	; 0x3ce <__addsf3+0x20>
 3c6:	39 f4       	brne	.+14     	; 0x3d6 <__addsf3+0x28>
 3c8:	9f 3f       	cpi	r25, 0xFF	; 255
 3ca:	19 f4       	brne	.+6      	; 0x3d2 <__addsf3+0x24>
 3cc:	26 f4       	brtc	.+8      	; 0x3d6 <__addsf3+0x28>
 3ce:	0c 94 57 03 	jmp	0x6ae	; 0x6ae <__fp_nan>
 3d2:	0e f4       	brtc	.+2      	; 0x3d6 <__addsf3+0x28>
 3d4:	e0 95       	com	r30
 3d6:	e7 fb       	bst	r30, 7
 3d8:	0c 94 51 03 	jmp	0x6a2	; 0x6a2 <__fp_inf>

000003dc <__addsf3x>:
 3dc:	e9 2f       	mov	r30, r25
 3de:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__fp_split3>
 3e2:	58 f3       	brcs	.-42     	; 0x3ba <__addsf3+0xc>
 3e4:	ba 17       	cp	r27, r26
 3e6:	62 07       	cpc	r22, r18
 3e8:	73 07       	cpc	r23, r19
 3ea:	84 07       	cpc	r24, r20
 3ec:	95 07       	cpc	r25, r21
 3ee:	20 f0       	brcs	.+8      	; 0x3f8 <__addsf3x+0x1c>
 3f0:	79 f4       	brne	.+30     	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
 3f2:	a6 f5       	brtc	.+104    	; 0x45c <__EEPROM_REGION_LENGTH__+0x5c>
 3f4:	0c 94 9b 03 	jmp	0x736	; 0x736 <__fp_zero>
 3f8:	0e f4       	brtc	.+2      	; 0x3fc <__addsf3x+0x20>
 3fa:	e0 95       	com	r30
 3fc:	0b 2e       	mov	r0, r27
 3fe:	ba 2f       	mov	r27, r26
 400:	a0 2d       	mov	r26, r0
 402:	0b 01       	movw	r0, r22
 404:	b9 01       	movw	r22, r18
 406:	90 01       	movw	r18, r0
 408:	0c 01       	movw	r0, r24
 40a:	ca 01       	movw	r24, r20
 40c:	a0 01       	movw	r20, r0
 40e:	11 24       	eor	r1, r1
 410:	ff 27       	eor	r31, r31
 412:	59 1b       	sub	r21, r25
 414:	99 f0       	breq	.+38     	; 0x43c <__EEPROM_REGION_LENGTH__+0x3c>
 416:	59 3f       	cpi	r21, 0xF9	; 249
 418:	50 f4       	brcc	.+20     	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
 41a:	50 3e       	cpi	r21, 0xE0	; 224
 41c:	68 f1       	brcs	.+90     	; 0x478 <__EEPROM_REGION_LENGTH__+0x78>
 41e:	1a 16       	cp	r1, r26
 420:	f0 40       	sbci	r31, 0x00	; 0
 422:	a2 2f       	mov	r26, r18
 424:	23 2f       	mov	r18, r19
 426:	34 2f       	mov	r19, r20
 428:	44 27       	eor	r20, r20
 42a:	58 5f       	subi	r21, 0xF8	; 248
 42c:	f3 cf       	rjmp	.-26     	; 0x414 <__EEPROM_REGION_LENGTH__+0x14>
 42e:	46 95       	lsr	r20
 430:	37 95       	ror	r19
 432:	27 95       	ror	r18
 434:	a7 95       	ror	r26
 436:	f0 40       	sbci	r31, 0x00	; 0
 438:	53 95       	inc	r21
 43a:	c9 f7       	brne	.-14     	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
 43c:	7e f4       	brtc	.+30     	; 0x45c <__EEPROM_REGION_LENGTH__+0x5c>
 43e:	1f 16       	cp	r1, r31
 440:	ba 0b       	sbc	r27, r26
 442:	62 0b       	sbc	r22, r18
 444:	73 0b       	sbc	r23, r19
 446:	84 0b       	sbc	r24, r20
 448:	ba f0       	brmi	.+46     	; 0x478 <__EEPROM_REGION_LENGTH__+0x78>
 44a:	91 50       	subi	r25, 0x01	; 1
 44c:	a1 f0       	breq	.+40     	; 0x476 <__EEPROM_REGION_LENGTH__+0x76>
 44e:	ff 0f       	add	r31, r31
 450:	bb 1f       	adc	r27, r27
 452:	66 1f       	adc	r22, r22
 454:	77 1f       	adc	r23, r23
 456:	88 1f       	adc	r24, r24
 458:	c2 f7       	brpl	.-16     	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
 45a:	0e c0       	rjmp	.+28     	; 0x478 <__EEPROM_REGION_LENGTH__+0x78>
 45c:	ba 0f       	add	r27, r26
 45e:	62 1f       	adc	r22, r18
 460:	73 1f       	adc	r23, r19
 462:	84 1f       	adc	r24, r20
 464:	48 f4       	brcc	.+18     	; 0x478 <__EEPROM_REGION_LENGTH__+0x78>
 466:	87 95       	ror	r24
 468:	77 95       	ror	r23
 46a:	67 95       	ror	r22
 46c:	b7 95       	ror	r27
 46e:	f7 95       	ror	r31
 470:	9e 3f       	cpi	r25, 0xFE	; 254
 472:	08 f0       	brcs	.+2      	; 0x476 <__EEPROM_REGION_LENGTH__+0x76>
 474:	b0 cf       	rjmp	.-160    	; 0x3d6 <__addsf3+0x28>
 476:	93 95       	inc	r25
 478:	88 0f       	add	r24, r24
 47a:	08 f0       	brcs	.+2      	; 0x47e <__EEPROM_REGION_LENGTH__+0x7e>
 47c:	99 27       	eor	r25, r25
 47e:	ee 0f       	add	r30, r30
 480:	97 95       	ror	r25
 482:	87 95       	ror	r24
 484:	08 95       	ret

00000486 <__cmpsf2>:
 486:	0e 94 2d 03 	call	0x65a	; 0x65a <__fp_cmp>
 48a:	08 f4       	brcc	.+2      	; 0x48e <__cmpsf2+0x8>
 48c:	81 e0       	ldi	r24, 0x01	; 1
 48e:	08 95       	ret

00000490 <__divsf3>:
 490:	0e 94 5c 02 	call	0x4b8	; 0x4b8 <__divsf3x>
 494:	0c 94 68 03 	jmp	0x6d0	; 0x6d0 <__fp_round>
 498:	0e 94 61 03 	call	0x6c2	; 0x6c2 <__fp_pscB>
 49c:	58 f0       	brcs	.+22     	; 0x4b4 <__divsf3+0x24>
 49e:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <__fp_pscA>
 4a2:	40 f0       	brcs	.+16     	; 0x4b4 <__divsf3+0x24>
 4a4:	29 f4       	brne	.+10     	; 0x4b0 <__divsf3+0x20>
 4a6:	5f 3f       	cpi	r21, 0xFF	; 255
 4a8:	29 f0       	breq	.+10     	; 0x4b4 <__divsf3+0x24>
 4aa:	0c 94 51 03 	jmp	0x6a2	; 0x6a2 <__fp_inf>
 4ae:	51 11       	cpse	r21, r1
 4b0:	0c 94 9c 03 	jmp	0x738	; 0x738 <__fp_szero>
 4b4:	0c 94 57 03 	jmp	0x6ae	; 0x6ae <__fp_nan>

000004b8 <__divsf3x>:
 4b8:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__fp_split3>
 4bc:	68 f3       	brcs	.-38     	; 0x498 <__divsf3+0x8>

000004be <__divsf3_pse>:
 4be:	99 23       	and	r25, r25
 4c0:	b1 f3       	breq	.-20     	; 0x4ae <__divsf3+0x1e>
 4c2:	55 23       	and	r21, r21
 4c4:	91 f3       	breq	.-28     	; 0x4aa <__divsf3+0x1a>
 4c6:	95 1b       	sub	r25, r21
 4c8:	55 0b       	sbc	r21, r21
 4ca:	bb 27       	eor	r27, r27
 4cc:	aa 27       	eor	r26, r26
 4ce:	62 17       	cp	r22, r18
 4d0:	73 07       	cpc	r23, r19
 4d2:	84 07       	cpc	r24, r20
 4d4:	38 f0       	brcs	.+14     	; 0x4e4 <__divsf3_pse+0x26>
 4d6:	9f 5f       	subi	r25, 0xFF	; 255
 4d8:	5f 4f       	sbci	r21, 0xFF	; 255
 4da:	22 0f       	add	r18, r18
 4dc:	33 1f       	adc	r19, r19
 4de:	44 1f       	adc	r20, r20
 4e0:	aa 1f       	adc	r26, r26
 4e2:	a9 f3       	breq	.-22     	; 0x4ce <__divsf3_pse+0x10>
 4e4:	35 d0       	rcall	.+106    	; 0x550 <__divsf3_pse+0x92>
 4e6:	0e 2e       	mov	r0, r30
 4e8:	3a f0       	brmi	.+14     	; 0x4f8 <__divsf3_pse+0x3a>
 4ea:	e0 e8       	ldi	r30, 0x80	; 128
 4ec:	32 d0       	rcall	.+100    	; 0x552 <__divsf3_pse+0x94>
 4ee:	91 50       	subi	r25, 0x01	; 1
 4f0:	50 40       	sbci	r21, 0x00	; 0
 4f2:	e6 95       	lsr	r30
 4f4:	00 1c       	adc	r0, r0
 4f6:	ca f7       	brpl	.-14     	; 0x4ea <__divsf3_pse+0x2c>
 4f8:	2b d0       	rcall	.+86     	; 0x550 <__divsf3_pse+0x92>
 4fa:	fe 2f       	mov	r31, r30
 4fc:	29 d0       	rcall	.+82     	; 0x550 <__divsf3_pse+0x92>
 4fe:	66 0f       	add	r22, r22
 500:	77 1f       	adc	r23, r23
 502:	88 1f       	adc	r24, r24
 504:	bb 1f       	adc	r27, r27
 506:	26 17       	cp	r18, r22
 508:	37 07       	cpc	r19, r23
 50a:	48 07       	cpc	r20, r24
 50c:	ab 07       	cpc	r26, r27
 50e:	b0 e8       	ldi	r27, 0x80	; 128
 510:	09 f0       	breq	.+2      	; 0x514 <__divsf3_pse+0x56>
 512:	bb 0b       	sbc	r27, r27
 514:	80 2d       	mov	r24, r0
 516:	bf 01       	movw	r22, r30
 518:	ff 27       	eor	r31, r31
 51a:	93 58       	subi	r25, 0x83	; 131
 51c:	5f 4f       	sbci	r21, 0xFF	; 255
 51e:	3a f0       	brmi	.+14     	; 0x52e <__divsf3_pse+0x70>
 520:	9e 3f       	cpi	r25, 0xFE	; 254
 522:	51 05       	cpc	r21, r1
 524:	78 f0       	brcs	.+30     	; 0x544 <__divsf3_pse+0x86>
 526:	0c 94 51 03 	jmp	0x6a2	; 0x6a2 <__fp_inf>
 52a:	0c 94 9c 03 	jmp	0x738	; 0x738 <__fp_szero>
 52e:	5f 3f       	cpi	r21, 0xFF	; 255
 530:	e4 f3       	brlt	.-8      	; 0x52a <__divsf3_pse+0x6c>
 532:	98 3e       	cpi	r25, 0xE8	; 232
 534:	d4 f3       	brlt	.-12     	; 0x52a <__divsf3_pse+0x6c>
 536:	86 95       	lsr	r24
 538:	77 95       	ror	r23
 53a:	67 95       	ror	r22
 53c:	b7 95       	ror	r27
 53e:	f7 95       	ror	r31
 540:	9f 5f       	subi	r25, 0xFF	; 255
 542:	c9 f7       	brne	.-14     	; 0x536 <__divsf3_pse+0x78>
 544:	88 0f       	add	r24, r24
 546:	91 1d       	adc	r25, r1
 548:	96 95       	lsr	r25
 54a:	87 95       	ror	r24
 54c:	97 f9       	bld	r25, 7
 54e:	08 95       	ret
 550:	e1 e0       	ldi	r30, 0x01	; 1
 552:	66 0f       	add	r22, r22
 554:	77 1f       	adc	r23, r23
 556:	88 1f       	adc	r24, r24
 558:	bb 1f       	adc	r27, r27
 55a:	62 17       	cp	r22, r18
 55c:	73 07       	cpc	r23, r19
 55e:	84 07       	cpc	r24, r20
 560:	ba 07       	cpc	r27, r26
 562:	20 f0       	brcs	.+8      	; 0x56c <__divsf3_pse+0xae>
 564:	62 1b       	sub	r22, r18
 566:	73 0b       	sbc	r23, r19
 568:	84 0b       	sbc	r24, r20
 56a:	ba 0b       	sbc	r27, r26
 56c:	ee 1f       	adc	r30, r30
 56e:	88 f7       	brcc	.-30     	; 0x552 <__divsf3_pse+0x94>
 570:	e0 95       	com	r30
 572:	08 95       	ret

00000574 <__fixsfsi>:
 574:	0e 94 c1 02 	call	0x582	; 0x582 <__fixunssfsi>
 578:	68 94       	set
 57a:	b1 11       	cpse	r27, r1
 57c:	0c 94 9c 03 	jmp	0x738	; 0x738 <__fp_szero>
 580:	08 95       	ret

00000582 <__fixunssfsi>:
 582:	0e 94 81 03 	call	0x702	; 0x702 <__fp_splitA>
 586:	88 f0       	brcs	.+34     	; 0x5aa <__fixunssfsi+0x28>
 588:	9f 57       	subi	r25, 0x7F	; 127
 58a:	98 f0       	brcs	.+38     	; 0x5b2 <__fixunssfsi+0x30>
 58c:	b9 2f       	mov	r27, r25
 58e:	99 27       	eor	r25, r25
 590:	b7 51       	subi	r27, 0x17	; 23
 592:	b0 f0       	brcs	.+44     	; 0x5c0 <__fixunssfsi+0x3e>
 594:	e1 f0       	breq	.+56     	; 0x5ce <__fixunssfsi+0x4c>
 596:	66 0f       	add	r22, r22
 598:	77 1f       	adc	r23, r23
 59a:	88 1f       	adc	r24, r24
 59c:	99 1f       	adc	r25, r25
 59e:	1a f0       	brmi	.+6      	; 0x5a6 <__fixunssfsi+0x24>
 5a0:	ba 95       	dec	r27
 5a2:	c9 f7       	brne	.-14     	; 0x596 <__fixunssfsi+0x14>
 5a4:	14 c0       	rjmp	.+40     	; 0x5ce <__fixunssfsi+0x4c>
 5a6:	b1 30       	cpi	r27, 0x01	; 1
 5a8:	91 f0       	breq	.+36     	; 0x5ce <__fixunssfsi+0x4c>
 5aa:	0e 94 9b 03 	call	0x736	; 0x736 <__fp_zero>
 5ae:	b1 e0       	ldi	r27, 0x01	; 1
 5b0:	08 95       	ret
 5b2:	0c 94 9b 03 	jmp	0x736	; 0x736 <__fp_zero>
 5b6:	67 2f       	mov	r22, r23
 5b8:	78 2f       	mov	r23, r24
 5ba:	88 27       	eor	r24, r24
 5bc:	b8 5f       	subi	r27, 0xF8	; 248
 5be:	39 f0       	breq	.+14     	; 0x5ce <__fixunssfsi+0x4c>
 5c0:	b9 3f       	cpi	r27, 0xF9	; 249
 5c2:	cc f3       	brlt	.-14     	; 0x5b6 <__fixunssfsi+0x34>
 5c4:	86 95       	lsr	r24
 5c6:	77 95       	ror	r23
 5c8:	67 95       	ror	r22
 5ca:	b3 95       	inc	r27
 5cc:	d9 f7       	brne	.-10     	; 0x5c4 <__fixunssfsi+0x42>
 5ce:	3e f4       	brtc	.+14     	; 0x5de <__fixunssfsi+0x5c>
 5d0:	90 95       	com	r25
 5d2:	80 95       	com	r24
 5d4:	70 95       	com	r23
 5d6:	61 95       	neg	r22
 5d8:	7f 4f       	sbci	r23, 0xFF	; 255
 5da:	8f 4f       	sbci	r24, 0xFF	; 255
 5dc:	9f 4f       	sbci	r25, 0xFF	; 255
 5de:	08 95       	ret

000005e0 <__floatunsisf>:
 5e0:	e8 94       	clt
 5e2:	09 c0       	rjmp	.+18     	; 0x5f6 <__floatsisf+0x12>

000005e4 <__floatsisf>:
 5e4:	97 fb       	bst	r25, 7
 5e6:	3e f4       	brtc	.+14     	; 0x5f6 <__floatsisf+0x12>
 5e8:	90 95       	com	r25
 5ea:	80 95       	com	r24
 5ec:	70 95       	com	r23
 5ee:	61 95       	neg	r22
 5f0:	7f 4f       	sbci	r23, 0xFF	; 255
 5f2:	8f 4f       	sbci	r24, 0xFF	; 255
 5f4:	9f 4f       	sbci	r25, 0xFF	; 255
 5f6:	99 23       	and	r25, r25
 5f8:	a9 f0       	breq	.+42     	; 0x624 <__floatsisf+0x40>
 5fa:	f9 2f       	mov	r31, r25
 5fc:	96 e9       	ldi	r25, 0x96	; 150
 5fe:	bb 27       	eor	r27, r27
 600:	93 95       	inc	r25
 602:	f6 95       	lsr	r31
 604:	87 95       	ror	r24
 606:	77 95       	ror	r23
 608:	67 95       	ror	r22
 60a:	b7 95       	ror	r27
 60c:	f1 11       	cpse	r31, r1
 60e:	f8 cf       	rjmp	.-16     	; 0x600 <__floatsisf+0x1c>
 610:	fa f4       	brpl	.+62     	; 0x650 <__floatsisf+0x6c>
 612:	bb 0f       	add	r27, r27
 614:	11 f4       	brne	.+4      	; 0x61a <__floatsisf+0x36>
 616:	60 ff       	sbrs	r22, 0
 618:	1b c0       	rjmp	.+54     	; 0x650 <__floatsisf+0x6c>
 61a:	6f 5f       	subi	r22, 0xFF	; 255
 61c:	7f 4f       	sbci	r23, 0xFF	; 255
 61e:	8f 4f       	sbci	r24, 0xFF	; 255
 620:	9f 4f       	sbci	r25, 0xFF	; 255
 622:	16 c0       	rjmp	.+44     	; 0x650 <__floatsisf+0x6c>
 624:	88 23       	and	r24, r24
 626:	11 f0       	breq	.+4      	; 0x62c <__floatsisf+0x48>
 628:	96 e9       	ldi	r25, 0x96	; 150
 62a:	11 c0       	rjmp	.+34     	; 0x64e <__floatsisf+0x6a>
 62c:	77 23       	and	r23, r23
 62e:	21 f0       	breq	.+8      	; 0x638 <__floatsisf+0x54>
 630:	9e e8       	ldi	r25, 0x8E	; 142
 632:	87 2f       	mov	r24, r23
 634:	76 2f       	mov	r23, r22
 636:	05 c0       	rjmp	.+10     	; 0x642 <__floatsisf+0x5e>
 638:	66 23       	and	r22, r22
 63a:	71 f0       	breq	.+28     	; 0x658 <__floatsisf+0x74>
 63c:	96 e8       	ldi	r25, 0x86	; 134
 63e:	86 2f       	mov	r24, r22
 640:	70 e0       	ldi	r23, 0x00	; 0
 642:	60 e0       	ldi	r22, 0x00	; 0
 644:	2a f0       	brmi	.+10     	; 0x650 <__floatsisf+0x6c>
 646:	9a 95       	dec	r25
 648:	66 0f       	add	r22, r22
 64a:	77 1f       	adc	r23, r23
 64c:	88 1f       	adc	r24, r24
 64e:	da f7       	brpl	.-10     	; 0x646 <__floatsisf+0x62>
 650:	88 0f       	add	r24, r24
 652:	96 95       	lsr	r25
 654:	87 95       	ror	r24
 656:	97 f9       	bld	r25, 7
 658:	08 95       	ret

0000065a <__fp_cmp>:
 65a:	99 0f       	add	r25, r25
 65c:	00 08       	sbc	r0, r0
 65e:	55 0f       	add	r21, r21
 660:	aa 0b       	sbc	r26, r26
 662:	e0 e8       	ldi	r30, 0x80	; 128
 664:	fe ef       	ldi	r31, 0xFE	; 254
 666:	16 16       	cp	r1, r22
 668:	17 06       	cpc	r1, r23
 66a:	e8 07       	cpc	r30, r24
 66c:	f9 07       	cpc	r31, r25
 66e:	c0 f0       	brcs	.+48     	; 0x6a0 <__fp_cmp+0x46>
 670:	12 16       	cp	r1, r18
 672:	13 06       	cpc	r1, r19
 674:	e4 07       	cpc	r30, r20
 676:	f5 07       	cpc	r31, r21
 678:	98 f0       	brcs	.+38     	; 0x6a0 <__fp_cmp+0x46>
 67a:	62 1b       	sub	r22, r18
 67c:	73 0b       	sbc	r23, r19
 67e:	84 0b       	sbc	r24, r20
 680:	95 0b       	sbc	r25, r21
 682:	39 f4       	brne	.+14     	; 0x692 <__fp_cmp+0x38>
 684:	0a 26       	eor	r0, r26
 686:	61 f0       	breq	.+24     	; 0x6a0 <__fp_cmp+0x46>
 688:	23 2b       	or	r18, r19
 68a:	24 2b       	or	r18, r20
 68c:	25 2b       	or	r18, r21
 68e:	21 f4       	brne	.+8      	; 0x698 <__fp_cmp+0x3e>
 690:	08 95       	ret
 692:	0a 26       	eor	r0, r26
 694:	09 f4       	brne	.+2      	; 0x698 <__fp_cmp+0x3e>
 696:	a1 40       	sbci	r26, 0x01	; 1
 698:	a6 95       	lsr	r26
 69a:	8f ef       	ldi	r24, 0xFF	; 255
 69c:	81 1d       	adc	r24, r1
 69e:	81 1d       	adc	r24, r1
 6a0:	08 95       	ret

000006a2 <__fp_inf>:
 6a2:	97 f9       	bld	r25, 7
 6a4:	9f 67       	ori	r25, 0x7F	; 127
 6a6:	80 e8       	ldi	r24, 0x80	; 128
 6a8:	70 e0       	ldi	r23, 0x00	; 0
 6aa:	60 e0       	ldi	r22, 0x00	; 0
 6ac:	08 95       	ret

000006ae <__fp_nan>:
 6ae:	9f ef       	ldi	r25, 0xFF	; 255
 6b0:	80 ec       	ldi	r24, 0xC0	; 192
 6b2:	08 95       	ret

000006b4 <__fp_pscA>:
 6b4:	00 24       	eor	r0, r0
 6b6:	0a 94       	dec	r0
 6b8:	16 16       	cp	r1, r22
 6ba:	17 06       	cpc	r1, r23
 6bc:	18 06       	cpc	r1, r24
 6be:	09 06       	cpc	r0, r25
 6c0:	08 95       	ret

000006c2 <__fp_pscB>:
 6c2:	00 24       	eor	r0, r0
 6c4:	0a 94       	dec	r0
 6c6:	12 16       	cp	r1, r18
 6c8:	13 06       	cpc	r1, r19
 6ca:	14 06       	cpc	r1, r20
 6cc:	05 06       	cpc	r0, r21
 6ce:	08 95       	ret

000006d0 <__fp_round>:
 6d0:	09 2e       	mov	r0, r25
 6d2:	03 94       	inc	r0
 6d4:	00 0c       	add	r0, r0
 6d6:	11 f4       	brne	.+4      	; 0x6dc <__fp_round+0xc>
 6d8:	88 23       	and	r24, r24
 6da:	52 f0       	brmi	.+20     	; 0x6f0 <__fp_round+0x20>
 6dc:	bb 0f       	add	r27, r27
 6de:	40 f4       	brcc	.+16     	; 0x6f0 <__fp_round+0x20>
 6e0:	bf 2b       	or	r27, r31
 6e2:	11 f4       	brne	.+4      	; 0x6e8 <__fp_round+0x18>
 6e4:	60 ff       	sbrs	r22, 0
 6e6:	04 c0       	rjmp	.+8      	; 0x6f0 <__fp_round+0x20>
 6e8:	6f 5f       	subi	r22, 0xFF	; 255
 6ea:	7f 4f       	sbci	r23, 0xFF	; 255
 6ec:	8f 4f       	sbci	r24, 0xFF	; 255
 6ee:	9f 4f       	sbci	r25, 0xFF	; 255
 6f0:	08 95       	ret

000006f2 <__fp_split3>:
 6f2:	57 fd       	sbrc	r21, 7
 6f4:	90 58       	subi	r25, 0x80	; 128
 6f6:	44 0f       	add	r20, r20
 6f8:	55 1f       	adc	r21, r21
 6fa:	59 f0       	breq	.+22     	; 0x712 <__fp_splitA+0x10>
 6fc:	5f 3f       	cpi	r21, 0xFF	; 255
 6fe:	71 f0       	breq	.+28     	; 0x71c <__fp_splitA+0x1a>
 700:	47 95       	ror	r20

00000702 <__fp_splitA>:
 702:	88 0f       	add	r24, r24
 704:	97 fb       	bst	r25, 7
 706:	99 1f       	adc	r25, r25
 708:	61 f0       	breq	.+24     	; 0x722 <__fp_splitA+0x20>
 70a:	9f 3f       	cpi	r25, 0xFF	; 255
 70c:	79 f0       	breq	.+30     	; 0x72c <__fp_splitA+0x2a>
 70e:	87 95       	ror	r24
 710:	08 95       	ret
 712:	12 16       	cp	r1, r18
 714:	13 06       	cpc	r1, r19
 716:	14 06       	cpc	r1, r20
 718:	55 1f       	adc	r21, r21
 71a:	f2 cf       	rjmp	.-28     	; 0x700 <__fp_split3+0xe>
 71c:	46 95       	lsr	r20
 71e:	f1 df       	rcall	.-30     	; 0x702 <__fp_splitA>
 720:	08 c0       	rjmp	.+16     	; 0x732 <__fp_splitA+0x30>
 722:	16 16       	cp	r1, r22
 724:	17 06       	cpc	r1, r23
 726:	18 06       	cpc	r1, r24
 728:	99 1f       	adc	r25, r25
 72a:	f1 cf       	rjmp	.-30     	; 0x70e <__fp_splitA+0xc>
 72c:	86 95       	lsr	r24
 72e:	71 05       	cpc	r23, r1
 730:	61 05       	cpc	r22, r1
 732:	08 94       	sec
 734:	08 95       	ret

00000736 <__fp_zero>:
 736:	e8 94       	clt

00000738 <__fp_szero>:
 738:	bb 27       	eor	r27, r27
 73a:	66 27       	eor	r22, r22
 73c:	77 27       	eor	r23, r23
 73e:	cb 01       	movw	r24, r22
 740:	97 f9       	bld	r25, 7
 742:	08 95       	ret

00000744 <__mulsf3>:
 744:	0e 94 b5 03 	call	0x76a	; 0x76a <__mulsf3x>
 748:	0c 94 68 03 	jmp	0x6d0	; 0x6d0 <__fp_round>
 74c:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <__fp_pscA>
 750:	38 f0       	brcs	.+14     	; 0x760 <__mulsf3+0x1c>
 752:	0e 94 61 03 	call	0x6c2	; 0x6c2 <__fp_pscB>
 756:	20 f0       	brcs	.+8      	; 0x760 <__mulsf3+0x1c>
 758:	95 23       	and	r25, r21
 75a:	11 f0       	breq	.+4      	; 0x760 <__mulsf3+0x1c>
 75c:	0c 94 51 03 	jmp	0x6a2	; 0x6a2 <__fp_inf>
 760:	0c 94 57 03 	jmp	0x6ae	; 0x6ae <__fp_nan>
 764:	11 24       	eor	r1, r1
 766:	0c 94 9c 03 	jmp	0x738	; 0x738 <__fp_szero>

0000076a <__mulsf3x>:
 76a:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__fp_split3>
 76e:	70 f3       	brcs	.-36     	; 0x74c <__mulsf3+0x8>

00000770 <__mulsf3_pse>:
 770:	95 9f       	mul	r25, r21
 772:	c1 f3       	breq	.-16     	; 0x764 <__mulsf3+0x20>
 774:	95 0f       	add	r25, r21
 776:	50 e0       	ldi	r21, 0x00	; 0
 778:	55 1f       	adc	r21, r21
 77a:	62 9f       	mul	r22, r18
 77c:	f0 01       	movw	r30, r0
 77e:	72 9f       	mul	r23, r18
 780:	bb 27       	eor	r27, r27
 782:	f0 0d       	add	r31, r0
 784:	b1 1d       	adc	r27, r1
 786:	63 9f       	mul	r22, r19
 788:	aa 27       	eor	r26, r26
 78a:	f0 0d       	add	r31, r0
 78c:	b1 1d       	adc	r27, r1
 78e:	aa 1f       	adc	r26, r26
 790:	64 9f       	mul	r22, r20
 792:	66 27       	eor	r22, r22
 794:	b0 0d       	add	r27, r0
 796:	a1 1d       	adc	r26, r1
 798:	66 1f       	adc	r22, r22
 79a:	82 9f       	mul	r24, r18
 79c:	22 27       	eor	r18, r18
 79e:	b0 0d       	add	r27, r0
 7a0:	a1 1d       	adc	r26, r1
 7a2:	62 1f       	adc	r22, r18
 7a4:	73 9f       	mul	r23, r19
 7a6:	b0 0d       	add	r27, r0
 7a8:	a1 1d       	adc	r26, r1
 7aa:	62 1f       	adc	r22, r18
 7ac:	83 9f       	mul	r24, r19
 7ae:	a0 0d       	add	r26, r0
 7b0:	61 1d       	adc	r22, r1
 7b2:	22 1f       	adc	r18, r18
 7b4:	74 9f       	mul	r23, r20
 7b6:	33 27       	eor	r19, r19
 7b8:	a0 0d       	add	r26, r0
 7ba:	61 1d       	adc	r22, r1
 7bc:	23 1f       	adc	r18, r19
 7be:	84 9f       	mul	r24, r20
 7c0:	60 0d       	add	r22, r0
 7c2:	21 1d       	adc	r18, r1
 7c4:	82 2f       	mov	r24, r18
 7c6:	76 2f       	mov	r23, r22
 7c8:	6a 2f       	mov	r22, r26
 7ca:	11 24       	eor	r1, r1
 7cc:	9f 57       	subi	r25, 0x7F	; 127
 7ce:	50 40       	sbci	r21, 0x00	; 0
 7d0:	9a f0       	brmi	.+38     	; 0x7f8 <__mulsf3_pse+0x88>
 7d2:	f1 f0       	breq	.+60     	; 0x810 <__DATA_REGION_LENGTH__+0x10>
 7d4:	88 23       	and	r24, r24
 7d6:	4a f0       	brmi	.+18     	; 0x7ea <__mulsf3_pse+0x7a>
 7d8:	ee 0f       	add	r30, r30
 7da:	ff 1f       	adc	r31, r31
 7dc:	bb 1f       	adc	r27, r27
 7de:	66 1f       	adc	r22, r22
 7e0:	77 1f       	adc	r23, r23
 7e2:	88 1f       	adc	r24, r24
 7e4:	91 50       	subi	r25, 0x01	; 1
 7e6:	50 40       	sbci	r21, 0x00	; 0
 7e8:	a9 f7       	brne	.-22     	; 0x7d4 <__mulsf3_pse+0x64>
 7ea:	9e 3f       	cpi	r25, 0xFE	; 254
 7ec:	51 05       	cpc	r21, r1
 7ee:	80 f0       	brcs	.+32     	; 0x810 <__DATA_REGION_LENGTH__+0x10>
 7f0:	0c 94 51 03 	jmp	0x6a2	; 0x6a2 <__fp_inf>
 7f4:	0c 94 9c 03 	jmp	0x738	; 0x738 <__fp_szero>
 7f8:	5f 3f       	cpi	r21, 0xFF	; 255
 7fa:	e4 f3       	brlt	.-8      	; 0x7f4 <__mulsf3_pse+0x84>
 7fc:	98 3e       	cpi	r25, 0xE8	; 232
 7fe:	d4 f3       	brlt	.-12     	; 0x7f4 <__mulsf3_pse+0x84>
 800:	86 95       	lsr	r24
 802:	77 95       	ror	r23
 804:	67 95       	ror	r22
 806:	b7 95       	ror	r27
 808:	f7 95       	ror	r31
 80a:	e7 95       	ror	r30
 80c:	9f 5f       	subi	r25, 0xFF	; 255
 80e:	c1 f7       	brne	.-16     	; 0x800 <__DATA_REGION_LENGTH__>
 810:	fe 2b       	or	r31, r30
 812:	88 0f       	add	r24, r24
 814:	91 1d       	adc	r25, r1
 816:	96 95       	lsr	r25
 818:	87 95       	ror	r24
 81a:	97 f9       	bld	r25, 7
 81c:	08 95       	ret

0000081e <printf>:
 81e:	a0 e0       	ldi	r26, 0x00	; 0
 820:	b0 e0       	ldi	r27, 0x00	; 0
 822:	e5 e1       	ldi	r30, 0x15	; 21
 824:	f4 e0       	ldi	r31, 0x04	; 4
 826:	0c 94 f6 06 	jmp	0xdec	; 0xdec <__prologue_saves__+0x20>
 82a:	ae 01       	movw	r20, r28
 82c:	4b 5f       	subi	r20, 0xFB	; 251
 82e:	5f 4f       	sbci	r21, 0xFF	; 255
 830:	fa 01       	movw	r30, r20
 832:	61 91       	ld	r22, Z+
 834:	71 91       	ld	r23, Z+
 836:	af 01       	movw	r20, r30
 838:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <__data_end+0x2>
 83c:	90 91 a7 01 	lds	r25, 0x01A7	; 0x8001a7 <__data_end+0x3>
 840:	0e 94 55 04 	call	0x8aa	; 0x8aa <vfprintf>
 844:	e2 e0       	ldi	r30, 0x02	; 2
 846:	0c 94 12 07 	jmp	0xe24	; 0xe24 <__epilogue_restores__+0x20>

0000084a <puts>:
 84a:	0f 93       	push	r16
 84c:	1f 93       	push	r17
 84e:	cf 93       	push	r28
 850:	df 93       	push	r29
 852:	e0 91 a6 01 	lds	r30, 0x01A6	; 0x8001a6 <__data_end+0x2>
 856:	f0 91 a7 01 	lds	r31, 0x01A7	; 0x8001a7 <__data_end+0x3>
 85a:	23 81       	ldd	r18, Z+3	; 0x03
 85c:	21 ff       	sbrs	r18, 1
 85e:	1b c0       	rjmp	.+54     	; 0x896 <puts+0x4c>
 860:	8c 01       	movw	r16, r24
 862:	d0 e0       	ldi	r29, 0x00	; 0
 864:	c0 e0       	ldi	r28, 0x00	; 0
 866:	f8 01       	movw	r30, r16
 868:	81 91       	ld	r24, Z+
 86a:	8f 01       	movw	r16, r30
 86c:	60 91 a6 01 	lds	r22, 0x01A6	; 0x8001a6 <__data_end+0x2>
 870:	70 91 a7 01 	lds	r23, 0x01A7	; 0x8001a7 <__data_end+0x3>
 874:	db 01       	movw	r26, r22
 876:	18 96       	adiw	r26, 0x08	; 8
 878:	ed 91       	ld	r30, X+
 87a:	fc 91       	ld	r31, X
 87c:	19 97       	sbiw	r26, 0x09	; 9
 87e:	88 23       	and	r24, r24
 880:	31 f0       	breq	.+12     	; 0x88e <puts+0x44>
 882:	09 95       	icall
 884:	89 2b       	or	r24, r25
 886:	79 f3       	breq	.-34     	; 0x866 <puts+0x1c>
 888:	df ef       	ldi	r29, 0xFF	; 255
 88a:	cf ef       	ldi	r28, 0xFF	; 255
 88c:	ec cf       	rjmp	.-40     	; 0x866 <puts+0x1c>
 88e:	8a e0       	ldi	r24, 0x0A	; 10
 890:	09 95       	icall
 892:	89 2b       	or	r24, r25
 894:	19 f0       	breq	.+6      	; 0x89c <puts+0x52>
 896:	8f ef       	ldi	r24, 0xFF	; 255
 898:	9f ef       	ldi	r25, 0xFF	; 255
 89a:	02 c0       	rjmp	.+4      	; 0x8a0 <puts+0x56>
 89c:	8d 2f       	mov	r24, r29
 89e:	9c 2f       	mov	r25, r28
 8a0:	df 91       	pop	r29
 8a2:	cf 91       	pop	r28
 8a4:	1f 91       	pop	r17
 8a6:	0f 91       	pop	r16
 8a8:	08 95       	ret

000008aa <vfprintf>:
 8aa:	ab e0       	ldi	r26, 0x0B	; 11
 8ac:	b0 e0       	ldi	r27, 0x00	; 0
 8ae:	eb e5       	ldi	r30, 0x5B	; 91
 8b0:	f4 e0       	ldi	r31, 0x04	; 4
 8b2:	0c 94 e6 06 	jmp	0xdcc	; 0xdcc <__prologue_saves__>
 8b6:	6c 01       	movw	r12, r24
 8b8:	7b 01       	movw	r14, r22
 8ba:	8a 01       	movw	r16, r20
 8bc:	fc 01       	movw	r30, r24
 8be:	17 82       	std	Z+7, r1	; 0x07
 8c0:	16 82       	std	Z+6, r1	; 0x06
 8c2:	83 81       	ldd	r24, Z+3	; 0x03
 8c4:	81 ff       	sbrs	r24, 1
 8c6:	cc c1       	rjmp	.+920    	; 0xc60 <__stack+0x361>
 8c8:	ce 01       	movw	r24, r28
 8ca:	01 96       	adiw	r24, 0x01	; 1
 8cc:	3c 01       	movw	r6, r24
 8ce:	f6 01       	movw	r30, r12
 8d0:	93 81       	ldd	r25, Z+3	; 0x03
 8d2:	f7 01       	movw	r30, r14
 8d4:	93 fd       	sbrc	r25, 3
 8d6:	85 91       	lpm	r24, Z+
 8d8:	93 ff       	sbrs	r25, 3
 8da:	81 91       	ld	r24, Z+
 8dc:	7f 01       	movw	r14, r30
 8de:	88 23       	and	r24, r24
 8e0:	09 f4       	brne	.+2      	; 0x8e4 <vfprintf+0x3a>
 8e2:	ba c1       	rjmp	.+884    	; 0xc58 <__stack+0x359>
 8e4:	85 32       	cpi	r24, 0x25	; 37
 8e6:	39 f4       	brne	.+14     	; 0x8f6 <vfprintf+0x4c>
 8e8:	93 fd       	sbrc	r25, 3
 8ea:	85 91       	lpm	r24, Z+
 8ec:	93 ff       	sbrs	r25, 3
 8ee:	81 91       	ld	r24, Z+
 8f0:	7f 01       	movw	r14, r30
 8f2:	85 32       	cpi	r24, 0x25	; 37
 8f4:	29 f4       	brne	.+10     	; 0x900 <__stack+0x1>
 8f6:	b6 01       	movw	r22, r12
 8f8:	90 e0       	ldi	r25, 0x00	; 0
 8fa:	0e 94 4c 06 	call	0xc98	; 0xc98 <fputc>
 8fe:	e7 cf       	rjmp	.-50     	; 0x8ce <vfprintf+0x24>
 900:	91 2c       	mov	r9, r1
 902:	21 2c       	mov	r2, r1
 904:	31 2c       	mov	r3, r1
 906:	ff e1       	ldi	r31, 0x1F	; 31
 908:	f3 15       	cp	r31, r3
 90a:	d8 f0       	brcs	.+54     	; 0x942 <__stack+0x43>
 90c:	8b 32       	cpi	r24, 0x2B	; 43
 90e:	79 f0       	breq	.+30     	; 0x92e <__stack+0x2f>
 910:	38 f4       	brcc	.+14     	; 0x920 <__stack+0x21>
 912:	80 32       	cpi	r24, 0x20	; 32
 914:	79 f0       	breq	.+30     	; 0x934 <__stack+0x35>
 916:	83 32       	cpi	r24, 0x23	; 35
 918:	a1 f4       	brne	.+40     	; 0x942 <__stack+0x43>
 91a:	23 2d       	mov	r18, r3
 91c:	20 61       	ori	r18, 0x10	; 16
 91e:	1d c0       	rjmp	.+58     	; 0x95a <__stack+0x5b>
 920:	8d 32       	cpi	r24, 0x2D	; 45
 922:	61 f0       	breq	.+24     	; 0x93c <__stack+0x3d>
 924:	80 33       	cpi	r24, 0x30	; 48
 926:	69 f4       	brne	.+26     	; 0x942 <__stack+0x43>
 928:	23 2d       	mov	r18, r3
 92a:	21 60       	ori	r18, 0x01	; 1
 92c:	16 c0       	rjmp	.+44     	; 0x95a <__stack+0x5b>
 92e:	83 2d       	mov	r24, r3
 930:	82 60       	ori	r24, 0x02	; 2
 932:	38 2e       	mov	r3, r24
 934:	e3 2d       	mov	r30, r3
 936:	e4 60       	ori	r30, 0x04	; 4
 938:	3e 2e       	mov	r3, r30
 93a:	2a c0       	rjmp	.+84     	; 0x990 <__stack+0x91>
 93c:	f3 2d       	mov	r31, r3
 93e:	f8 60       	ori	r31, 0x08	; 8
 940:	1d c0       	rjmp	.+58     	; 0x97c <__stack+0x7d>
 942:	37 fc       	sbrc	r3, 7
 944:	2d c0       	rjmp	.+90     	; 0x9a0 <__stack+0xa1>
 946:	20 ed       	ldi	r18, 0xD0	; 208
 948:	28 0f       	add	r18, r24
 94a:	2a 30       	cpi	r18, 0x0A	; 10
 94c:	40 f0       	brcs	.+16     	; 0x95e <__stack+0x5f>
 94e:	8e 32       	cpi	r24, 0x2E	; 46
 950:	b9 f4       	brne	.+46     	; 0x980 <__stack+0x81>
 952:	36 fc       	sbrc	r3, 6
 954:	81 c1       	rjmp	.+770    	; 0xc58 <__stack+0x359>
 956:	23 2d       	mov	r18, r3
 958:	20 64       	ori	r18, 0x40	; 64
 95a:	32 2e       	mov	r3, r18
 95c:	19 c0       	rjmp	.+50     	; 0x990 <__stack+0x91>
 95e:	36 fe       	sbrs	r3, 6
 960:	06 c0       	rjmp	.+12     	; 0x96e <__stack+0x6f>
 962:	8a e0       	ldi	r24, 0x0A	; 10
 964:	98 9e       	mul	r9, r24
 966:	20 0d       	add	r18, r0
 968:	11 24       	eor	r1, r1
 96a:	92 2e       	mov	r9, r18
 96c:	11 c0       	rjmp	.+34     	; 0x990 <__stack+0x91>
 96e:	ea e0       	ldi	r30, 0x0A	; 10
 970:	2e 9e       	mul	r2, r30
 972:	20 0d       	add	r18, r0
 974:	11 24       	eor	r1, r1
 976:	22 2e       	mov	r2, r18
 978:	f3 2d       	mov	r31, r3
 97a:	f0 62       	ori	r31, 0x20	; 32
 97c:	3f 2e       	mov	r3, r31
 97e:	08 c0       	rjmp	.+16     	; 0x990 <__stack+0x91>
 980:	8c 36       	cpi	r24, 0x6C	; 108
 982:	21 f4       	brne	.+8      	; 0x98c <__stack+0x8d>
 984:	83 2d       	mov	r24, r3
 986:	80 68       	ori	r24, 0x80	; 128
 988:	38 2e       	mov	r3, r24
 98a:	02 c0       	rjmp	.+4      	; 0x990 <__stack+0x91>
 98c:	88 36       	cpi	r24, 0x68	; 104
 98e:	41 f4       	brne	.+16     	; 0x9a0 <__stack+0xa1>
 990:	f7 01       	movw	r30, r14
 992:	93 fd       	sbrc	r25, 3
 994:	85 91       	lpm	r24, Z+
 996:	93 ff       	sbrs	r25, 3
 998:	81 91       	ld	r24, Z+
 99a:	7f 01       	movw	r14, r30
 99c:	81 11       	cpse	r24, r1
 99e:	b3 cf       	rjmp	.-154    	; 0x906 <__stack+0x7>
 9a0:	98 2f       	mov	r25, r24
 9a2:	9f 7d       	andi	r25, 0xDF	; 223
 9a4:	95 54       	subi	r25, 0x45	; 69
 9a6:	93 30       	cpi	r25, 0x03	; 3
 9a8:	28 f4       	brcc	.+10     	; 0x9b4 <__stack+0xb5>
 9aa:	0c 5f       	subi	r16, 0xFC	; 252
 9ac:	1f 4f       	sbci	r17, 0xFF	; 255
 9ae:	9f e3       	ldi	r25, 0x3F	; 63
 9b0:	99 83       	std	Y+1, r25	; 0x01
 9b2:	0d c0       	rjmp	.+26     	; 0x9ce <__stack+0xcf>
 9b4:	83 36       	cpi	r24, 0x63	; 99
 9b6:	31 f0       	breq	.+12     	; 0x9c4 <__stack+0xc5>
 9b8:	83 37       	cpi	r24, 0x73	; 115
 9ba:	71 f0       	breq	.+28     	; 0x9d8 <__stack+0xd9>
 9bc:	83 35       	cpi	r24, 0x53	; 83
 9be:	09 f0       	breq	.+2      	; 0x9c2 <__stack+0xc3>
 9c0:	59 c0       	rjmp	.+178    	; 0xa74 <__stack+0x175>
 9c2:	21 c0       	rjmp	.+66     	; 0xa06 <__stack+0x107>
 9c4:	f8 01       	movw	r30, r16
 9c6:	80 81       	ld	r24, Z
 9c8:	89 83       	std	Y+1, r24	; 0x01
 9ca:	0e 5f       	subi	r16, 0xFE	; 254
 9cc:	1f 4f       	sbci	r17, 0xFF	; 255
 9ce:	88 24       	eor	r8, r8
 9d0:	83 94       	inc	r8
 9d2:	91 2c       	mov	r9, r1
 9d4:	53 01       	movw	r10, r6
 9d6:	13 c0       	rjmp	.+38     	; 0x9fe <__stack+0xff>
 9d8:	28 01       	movw	r4, r16
 9da:	f2 e0       	ldi	r31, 0x02	; 2
 9dc:	4f 0e       	add	r4, r31
 9de:	51 1c       	adc	r5, r1
 9e0:	f8 01       	movw	r30, r16
 9e2:	a0 80       	ld	r10, Z
 9e4:	b1 80       	ldd	r11, Z+1	; 0x01
 9e6:	36 fe       	sbrs	r3, 6
 9e8:	03 c0       	rjmp	.+6      	; 0x9f0 <__stack+0xf1>
 9ea:	69 2d       	mov	r22, r9
 9ec:	70 e0       	ldi	r23, 0x00	; 0
 9ee:	02 c0       	rjmp	.+4      	; 0x9f4 <__stack+0xf5>
 9f0:	6f ef       	ldi	r22, 0xFF	; 255
 9f2:	7f ef       	ldi	r23, 0xFF	; 255
 9f4:	c5 01       	movw	r24, r10
 9f6:	0e 94 41 06 	call	0xc82	; 0xc82 <strnlen>
 9fa:	4c 01       	movw	r8, r24
 9fc:	82 01       	movw	r16, r4
 9fe:	f3 2d       	mov	r31, r3
 a00:	ff 77       	andi	r31, 0x7F	; 127
 a02:	3f 2e       	mov	r3, r31
 a04:	16 c0       	rjmp	.+44     	; 0xa32 <__stack+0x133>
 a06:	28 01       	movw	r4, r16
 a08:	22 e0       	ldi	r18, 0x02	; 2
 a0a:	42 0e       	add	r4, r18
 a0c:	51 1c       	adc	r5, r1
 a0e:	f8 01       	movw	r30, r16
 a10:	a0 80       	ld	r10, Z
 a12:	b1 80       	ldd	r11, Z+1	; 0x01
 a14:	36 fe       	sbrs	r3, 6
 a16:	03 c0       	rjmp	.+6      	; 0xa1e <__stack+0x11f>
 a18:	69 2d       	mov	r22, r9
 a1a:	70 e0       	ldi	r23, 0x00	; 0
 a1c:	02 c0       	rjmp	.+4      	; 0xa22 <__stack+0x123>
 a1e:	6f ef       	ldi	r22, 0xFF	; 255
 a20:	7f ef       	ldi	r23, 0xFF	; 255
 a22:	c5 01       	movw	r24, r10
 a24:	0e 94 36 06 	call	0xc6c	; 0xc6c <strnlen_P>
 a28:	4c 01       	movw	r8, r24
 a2a:	f3 2d       	mov	r31, r3
 a2c:	f0 68       	ori	r31, 0x80	; 128
 a2e:	3f 2e       	mov	r3, r31
 a30:	82 01       	movw	r16, r4
 a32:	33 fc       	sbrc	r3, 3
 a34:	1b c0       	rjmp	.+54     	; 0xa6c <__stack+0x16d>
 a36:	82 2d       	mov	r24, r2
 a38:	90 e0       	ldi	r25, 0x00	; 0
 a3a:	88 16       	cp	r8, r24
 a3c:	99 06       	cpc	r9, r25
 a3e:	b0 f4       	brcc	.+44     	; 0xa6c <__stack+0x16d>
 a40:	b6 01       	movw	r22, r12
 a42:	80 e2       	ldi	r24, 0x20	; 32
 a44:	90 e0       	ldi	r25, 0x00	; 0
 a46:	0e 94 4c 06 	call	0xc98	; 0xc98 <fputc>
 a4a:	2a 94       	dec	r2
 a4c:	f4 cf       	rjmp	.-24     	; 0xa36 <__stack+0x137>
 a4e:	f5 01       	movw	r30, r10
 a50:	37 fc       	sbrc	r3, 7
 a52:	85 91       	lpm	r24, Z+
 a54:	37 fe       	sbrs	r3, 7
 a56:	81 91       	ld	r24, Z+
 a58:	5f 01       	movw	r10, r30
 a5a:	b6 01       	movw	r22, r12
 a5c:	90 e0       	ldi	r25, 0x00	; 0
 a5e:	0e 94 4c 06 	call	0xc98	; 0xc98 <fputc>
 a62:	21 10       	cpse	r2, r1
 a64:	2a 94       	dec	r2
 a66:	21 e0       	ldi	r18, 0x01	; 1
 a68:	82 1a       	sub	r8, r18
 a6a:	91 08       	sbc	r9, r1
 a6c:	81 14       	cp	r8, r1
 a6e:	91 04       	cpc	r9, r1
 a70:	71 f7       	brne	.-36     	; 0xa4e <__stack+0x14f>
 a72:	e8 c0       	rjmp	.+464    	; 0xc44 <__stack+0x345>
 a74:	84 36       	cpi	r24, 0x64	; 100
 a76:	11 f0       	breq	.+4      	; 0xa7c <__stack+0x17d>
 a78:	89 36       	cpi	r24, 0x69	; 105
 a7a:	41 f5       	brne	.+80     	; 0xacc <__stack+0x1cd>
 a7c:	f8 01       	movw	r30, r16
 a7e:	37 fe       	sbrs	r3, 7
 a80:	07 c0       	rjmp	.+14     	; 0xa90 <__stack+0x191>
 a82:	60 81       	ld	r22, Z
 a84:	71 81       	ldd	r23, Z+1	; 0x01
 a86:	82 81       	ldd	r24, Z+2	; 0x02
 a88:	93 81       	ldd	r25, Z+3	; 0x03
 a8a:	0c 5f       	subi	r16, 0xFC	; 252
 a8c:	1f 4f       	sbci	r17, 0xFF	; 255
 a8e:	08 c0       	rjmp	.+16     	; 0xaa0 <__stack+0x1a1>
 a90:	60 81       	ld	r22, Z
 a92:	71 81       	ldd	r23, Z+1	; 0x01
 a94:	07 2e       	mov	r0, r23
 a96:	00 0c       	add	r0, r0
 a98:	88 0b       	sbc	r24, r24
 a9a:	99 0b       	sbc	r25, r25
 a9c:	0e 5f       	subi	r16, 0xFE	; 254
 a9e:	1f 4f       	sbci	r17, 0xFF	; 255
 aa0:	f3 2d       	mov	r31, r3
 aa2:	ff 76       	andi	r31, 0x6F	; 111
 aa4:	3f 2e       	mov	r3, r31
 aa6:	97 ff       	sbrs	r25, 7
 aa8:	09 c0       	rjmp	.+18     	; 0xabc <__stack+0x1bd>
 aaa:	90 95       	com	r25
 aac:	80 95       	com	r24
 aae:	70 95       	com	r23
 ab0:	61 95       	neg	r22
 ab2:	7f 4f       	sbci	r23, 0xFF	; 255
 ab4:	8f 4f       	sbci	r24, 0xFF	; 255
 ab6:	9f 4f       	sbci	r25, 0xFF	; 255
 ab8:	f0 68       	ori	r31, 0x80	; 128
 aba:	3f 2e       	mov	r3, r31
 abc:	2a e0       	ldi	r18, 0x0A	; 10
 abe:	30 e0       	ldi	r19, 0x00	; 0
 ac0:	a3 01       	movw	r20, r6
 ac2:	0e 94 88 06 	call	0xd10	; 0xd10 <__ultoa_invert>
 ac6:	88 2e       	mov	r8, r24
 ac8:	86 18       	sub	r8, r6
 aca:	45 c0       	rjmp	.+138    	; 0xb56 <__stack+0x257>
 acc:	85 37       	cpi	r24, 0x75	; 117
 ace:	31 f4       	brne	.+12     	; 0xadc <__stack+0x1dd>
 ad0:	23 2d       	mov	r18, r3
 ad2:	2f 7e       	andi	r18, 0xEF	; 239
 ad4:	b2 2e       	mov	r11, r18
 ad6:	2a e0       	ldi	r18, 0x0A	; 10
 ad8:	30 e0       	ldi	r19, 0x00	; 0
 ada:	25 c0       	rjmp	.+74     	; 0xb26 <__stack+0x227>
 adc:	93 2d       	mov	r25, r3
 ade:	99 7f       	andi	r25, 0xF9	; 249
 ae0:	b9 2e       	mov	r11, r25
 ae2:	8f 36       	cpi	r24, 0x6F	; 111
 ae4:	c1 f0       	breq	.+48     	; 0xb16 <__stack+0x217>
 ae6:	18 f4       	brcc	.+6      	; 0xaee <__stack+0x1ef>
 ae8:	88 35       	cpi	r24, 0x58	; 88
 aea:	79 f0       	breq	.+30     	; 0xb0a <__stack+0x20b>
 aec:	b5 c0       	rjmp	.+362    	; 0xc58 <__stack+0x359>
 aee:	80 37       	cpi	r24, 0x70	; 112
 af0:	19 f0       	breq	.+6      	; 0xaf8 <__stack+0x1f9>
 af2:	88 37       	cpi	r24, 0x78	; 120
 af4:	21 f0       	breq	.+8      	; 0xafe <__stack+0x1ff>
 af6:	b0 c0       	rjmp	.+352    	; 0xc58 <__stack+0x359>
 af8:	e9 2f       	mov	r30, r25
 afa:	e0 61       	ori	r30, 0x10	; 16
 afc:	be 2e       	mov	r11, r30
 afe:	b4 fe       	sbrs	r11, 4
 b00:	0d c0       	rjmp	.+26     	; 0xb1c <__stack+0x21d>
 b02:	fb 2d       	mov	r31, r11
 b04:	f4 60       	ori	r31, 0x04	; 4
 b06:	bf 2e       	mov	r11, r31
 b08:	09 c0       	rjmp	.+18     	; 0xb1c <__stack+0x21d>
 b0a:	34 fe       	sbrs	r3, 4
 b0c:	0a c0       	rjmp	.+20     	; 0xb22 <__stack+0x223>
 b0e:	29 2f       	mov	r18, r25
 b10:	26 60       	ori	r18, 0x06	; 6
 b12:	b2 2e       	mov	r11, r18
 b14:	06 c0       	rjmp	.+12     	; 0xb22 <__stack+0x223>
 b16:	28 e0       	ldi	r18, 0x08	; 8
 b18:	30 e0       	ldi	r19, 0x00	; 0
 b1a:	05 c0       	rjmp	.+10     	; 0xb26 <__stack+0x227>
 b1c:	20 e1       	ldi	r18, 0x10	; 16
 b1e:	30 e0       	ldi	r19, 0x00	; 0
 b20:	02 c0       	rjmp	.+4      	; 0xb26 <__stack+0x227>
 b22:	20 e1       	ldi	r18, 0x10	; 16
 b24:	32 e0       	ldi	r19, 0x02	; 2
 b26:	f8 01       	movw	r30, r16
 b28:	b7 fe       	sbrs	r11, 7
 b2a:	07 c0       	rjmp	.+14     	; 0xb3a <__stack+0x23b>
 b2c:	60 81       	ld	r22, Z
 b2e:	71 81       	ldd	r23, Z+1	; 0x01
 b30:	82 81       	ldd	r24, Z+2	; 0x02
 b32:	93 81       	ldd	r25, Z+3	; 0x03
 b34:	0c 5f       	subi	r16, 0xFC	; 252
 b36:	1f 4f       	sbci	r17, 0xFF	; 255
 b38:	06 c0       	rjmp	.+12     	; 0xb46 <__stack+0x247>
 b3a:	60 81       	ld	r22, Z
 b3c:	71 81       	ldd	r23, Z+1	; 0x01
 b3e:	80 e0       	ldi	r24, 0x00	; 0
 b40:	90 e0       	ldi	r25, 0x00	; 0
 b42:	0e 5f       	subi	r16, 0xFE	; 254
 b44:	1f 4f       	sbci	r17, 0xFF	; 255
 b46:	a3 01       	movw	r20, r6
 b48:	0e 94 88 06 	call	0xd10	; 0xd10 <__ultoa_invert>
 b4c:	88 2e       	mov	r8, r24
 b4e:	86 18       	sub	r8, r6
 b50:	fb 2d       	mov	r31, r11
 b52:	ff 77       	andi	r31, 0x7F	; 127
 b54:	3f 2e       	mov	r3, r31
 b56:	36 fe       	sbrs	r3, 6
 b58:	0d c0       	rjmp	.+26     	; 0xb74 <__stack+0x275>
 b5a:	23 2d       	mov	r18, r3
 b5c:	2e 7f       	andi	r18, 0xFE	; 254
 b5e:	a2 2e       	mov	r10, r18
 b60:	89 14       	cp	r8, r9
 b62:	58 f4       	brcc	.+22     	; 0xb7a <__stack+0x27b>
 b64:	34 fe       	sbrs	r3, 4
 b66:	0b c0       	rjmp	.+22     	; 0xb7e <__stack+0x27f>
 b68:	32 fc       	sbrc	r3, 2
 b6a:	09 c0       	rjmp	.+18     	; 0xb7e <__stack+0x27f>
 b6c:	83 2d       	mov	r24, r3
 b6e:	8e 7e       	andi	r24, 0xEE	; 238
 b70:	a8 2e       	mov	r10, r24
 b72:	05 c0       	rjmp	.+10     	; 0xb7e <__stack+0x27f>
 b74:	b8 2c       	mov	r11, r8
 b76:	a3 2c       	mov	r10, r3
 b78:	03 c0       	rjmp	.+6      	; 0xb80 <__stack+0x281>
 b7a:	b8 2c       	mov	r11, r8
 b7c:	01 c0       	rjmp	.+2      	; 0xb80 <__stack+0x281>
 b7e:	b9 2c       	mov	r11, r9
 b80:	a4 fe       	sbrs	r10, 4
 b82:	0f c0       	rjmp	.+30     	; 0xba2 <__stack+0x2a3>
 b84:	fe 01       	movw	r30, r28
 b86:	e8 0d       	add	r30, r8
 b88:	f1 1d       	adc	r31, r1
 b8a:	80 81       	ld	r24, Z
 b8c:	80 33       	cpi	r24, 0x30	; 48
 b8e:	21 f4       	brne	.+8      	; 0xb98 <__stack+0x299>
 b90:	9a 2d       	mov	r25, r10
 b92:	99 7e       	andi	r25, 0xE9	; 233
 b94:	a9 2e       	mov	r10, r25
 b96:	09 c0       	rjmp	.+18     	; 0xbaa <__stack+0x2ab>
 b98:	a2 fe       	sbrs	r10, 2
 b9a:	06 c0       	rjmp	.+12     	; 0xba8 <__stack+0x2a9>
 b9c:	b3 94       	inc	r11
 b9e:	b3 94       	inc	r11
 ba0:	04 c0       	rjmp	.+8      	; 0xbaa <__stack+0x2ab>
 ba2:	8a 2d       	mov	r24, r10
 ba4:	86 78       	andi	r24, 0x86	; 134
 ba6:	09 f0       	breq	.+2      	; 0xbaa <__stack+0x2ab>
 ba8:	b3 94       	inc	r11
 baa:	a3 fc       	sbrc	r10, 3
 bac:	11 c0       	rjmp	.+34     	; 0xbd0 <__stack+0x2d1>
 bae:	a0 fe       	sbrs	r10, 0
 bb0:	06 c0       	rjmp	.+12     	; 0xbbe <__stack+0x2bf>
 bb2:	b2 14       	cp	r11, r2
 bb4:	88 f4       	brcc	.+34     	; 0xbd8 <__stack+0x2d9>
 bb6:	28 0c       	add	r2, r8
 bb8:	92 2c       	mov	r9, r2
 bba:	9b 18       	sub	r9, r11
 bbc:	0e c0       	rjmp	.+28     	; 0xbda <__stack+0x2db>
 bbe:	b2 14       	cp	r11, r2
 bc0:	60 f4       	brcc	.+24     	; 0xbda <__stack+0x2db>
 bc2:	b6 01       	movw	r22, r12
 bc4:	80 e2       	ldi	r24, 0x20	; 32
 bc6:	90 e0       	ldi	r25, 0x00	; 0
 bc8:	0e 94 4c 06 	call	0xc98	; 0xc98 <fputc>
 bcc:	b3 94       	inc	r11
 bce:	f7 cf       	rjmp	.-18     	; 0xbbe <__stack+0x2bf>
 bd0:	b2 14       	cp	r11, r2
 bd2:	18 f4       	brcc	.+6      	; 0xbda <__stack+0x2db>
 bd4:	2b 18       	sub	r2, r11
 bd6:	02 c0       	rjmp	.+4      	; 0xbdc <__stack+0x2dd>
 bd8:	98 2c       	mov	r9, r8
 bda:	21 2c       	mov	r2, r1
 bdc:	a4 fe       	sbrs	r10, 4
 bde:	10 c0       	rjmp	.+32     	; 0xc00 <__stack+0x301>
 be0:	b6 01       	movw	r22, r12
 be2:	80 e3       	ldi	r24, 0x30	; 48
 be4:	90 e0       	ldi	r25, 0x00	; 0
 be6:	0e 94 4c 06 	call	0xc98	; 0xc98 <fputc>
 bea:	a2 fe       	sbrs	r10, 2
 bec:	17 c0       	rjmp	.+46     	; 0xc1c <__stack+0x31d>
 bee:	a1 fc       	sbrc	r10, 1
 bf0:	03 c0       	rjmp	.+6      	; 0xbf8 <__stack+0x2f9>
 bf2:	88 e7       	ldi	r24, 0x78	; 120
 bf4:	90 e0       	ldi	r25, 0x00	; 0
 bf6:	02 c0       	rjmp	.+4      	; 0xbfc <__stack+0x2fd>
 bf8:	88 e5       	ldi	r24, 0x58	; 88
 bfa:	90 e0       	ldi	r25, 0x00	; 0
 bfc:	b6 01       	movw	r22, r12
 bfe:	0c c0       	rjmp	.+24     	; 0xc18 <__stack+0x319>
 c00:	8a 2d       	mov	r24, r10
 c02:	86 78       	andi	r24, 0x86	; 134
 c04:	59 f0       	breq	.+22     	; 0xc1c <__stack+0x31d>
 c06:	a1 fe       	sbrs	r10, 1
 c08:	02 c0       	rjmp	.+4      	; 0xc0e <__stack+0x30f>
 c0a:	8b e2       	ldi	r24, 0x2B	; 43
 c0c:	01 c0       	rjmp	.+2      	; 0xc10 <__stack+0x311>
 c0e:	80 e2       	ldi	r24, 0x20	; 32
 c10:	a7 fc       	sbrc	r10, 7
 c12:	8d e2       	ldi	r24, 0x2D	; 45
 c14:	b6 01       	movw	r22, r12
 c16:	90 e0       	ldi	r25, 0x00	; 0
 c18:	0e 94 4c 06 	call	0xc98	; 0xc98 <fputc>
 c1c:	89 14       	cp	r8, r9
 c1e:	38 f4       	brcc	.+14     	; 0xc2e <__stack+0x32f>
 c20:	b6 01       	movw	r22, r12
 c22:	80 e3       	ldi	r24, 0x30	; 48
 c24:	90 e0       	ldi	r25, 0x00	; 0
 c26:	0e 94 4c 06 	call	0xc98	; 0xc98 <fputc>
 c2a:	9a 94       	dec	r9
 c2c:	f7 cf       	rjmp	.-18     	; 0xc1c <__stack+0x31d>
 c2e:	8a 94       	dec	r8
 c30:	f3 01       	movw	r30, r6
 c32:	e8 0d       	add	r30, r8
 c34:	f1 1d       	adc	r31, r1
 c36:	80 81       	ld	r24, Z
 c38:	b6 01       	movw	r22, r12
 c3a:	90 e0       	ldi	r25, 0x00	; 0
 c3c:	0e 94 4c 06 	call	0xc98	; 0xc98 <fputc>
 c40:	81 10       	cpse	r8, r1
 c42:	f5 cf       	rjmp	.-22     	; 0xc2e <__stack+0x32f>
 c44:	22 20       	and	r2, r2
 c46:	09 f4       	brne	.+2      	; 0xc4a <__stack+0x34b>
 c48:	42 ce       	rjmp	.-892    	; 0x8ce <vfprintf+0x24>
 c4a:	b6 01       	movw	r22, r12
 c4c:	80 e2       	ldi	r24, 0x20	; 32
 c4e:	90 e0       	ldi	r25, 0x00	; 0
 c50:	0e 94 4c 06 	call	0xc98	; 0xc98 <fputc>
 c54:	2a 94       	dec	r2
 c56:	f6 cf       	rjmp	.-20     	; 0xc44 <__stack+0x345>
 c58:	f6 01       	movw	r30, r12
 c5a:	86 81       	ldd	r24, Z+6	; 0x06
 c5c:	97 81       	ldd	r25, Z+7	; 0x07
 c5e:	02 c0       	rjmp	.+4      	; 0xc64 <__stack+0x365>
 c60:	8f ef       	ldi	r24, 0xFF	; 255
 c62:	9f ef       	ldi	r25, 0xFF	; 255
 c64:	2b 96       	adiw	r28, 0x0b	; 11
 c66:	e2 e1       	ldi	r30, 0x12	; 18
 c68:	0c 94 02 07 	jmp	0xe04	; 0xe04 <__epilogue_restores__>

00000c6c <strnlen_P>:
 c6c:	fc 01       	movw	r30, r24
 c6e:	05 90       	lpm	r0, Z+
 c70:	61 50       	subi	r22, 0x01	; 1
 c72:	70 40       	sbci	r23, 0x00	; 0
 c74:	01 10       	cpse	r0, r1
 c76:	d8 f7       	brcc	.-10     	; 0xc6e <strnlen_P+0x2>
 c78:	80 95       	com	r24
 c7a:	90 95       	com	r25
 c7c:	8e 0f       	add	r24, r30
 c7e:	9f 1f       	adc	r25, r31
 c80:	08 95       	ret

00000c82 <strnlen>:
 c82:	fc 01       	movw	r30, r24
 c84:	61 50       	subi	r22, 0x01	; 1
 c86:	70 40       	sbci	r23, 0x00	; 0
 c88:	01 90       	ld	r0, Z+
 c8a:	01 10       	cpse	r0, r1
 c8c:	d8 f7       	brcc	.-10     	; 0xc84 <strnlen+0x2>
 c8e:	80 95       	com	r24
 c90:	90 95       	com	r25
 c92:	8e 0f       	add	r24, r30
 c94:	9f 1f       	adc	r25, r31
 c96:	08 95       	ret

00000c98 <fputc>:
 c98:	0f 93       	push	r16
 c9a:	1f 93       	push	r17
 c9c:	cf 93       	push	r28
 c9e:	df 93       	push	r29
 ca0:	fb 01       	movw	r30, r22
 ca2:	23 81       	ldd	r18, Z+3	; 0x03
 ca4:	21 fd       	sbrc	r18, 1
 ca6:	03 c0       	rjmp	.+6      	; 0xcae <fputc+0x16>
 ca8:	8f ef       	ldi	r24, 0xFF	; 255
 caa:	9f ef       	ldi	r25, 0xFF	; 255
 cac:	2c c0       	rjmp	.+88     	; 0xd06 <fputc+0x6e>
 cae:	22 ff       	sbrs	r18, 2
 cb0:	16 c0       	rjmp	.+44     	; 0xcde <fputc+0x46>
 cb2:	46 81       	ldd	r20, Z+6	; 0x06
 cb4:	57 81       	ldd	r21, Z+7	; 0x07
 cb6:	24 81       	ldd	r18, Z+4	; 0x04
 cb8:	35 81       	ldd	r19, Z+5	; 0x05
 cba:	42 17       	cp	r20, r18
 cbc:	53 07       	cpc	r21, r19
 cbe:	44 f4       	brge	.+16     	; 0xcd0 <fputc+0x38>
 cc0:	a0 81       	ld	r26, Z
 cc2:	b1 81       	ldd	r27, Z+1	; 0x01
 cc4:	9d 01       	movw	r18, r26
 cc6:	2f 5f       	subi	r18, 0xFF	; 255
 cc8:	3f 4f       	sbci	r19, 0xFF	; 255
 cca:	31 83       	std	Z+1, r19	; 0x01
 ccc:	20 83       	st	Z, r18
 cce:	8c 93       	st	X, r24
 cd0:	26 81       	ldd	r18, Z+6	; 0x06
 cd2:	37 81       	ldd	r19, Z+7	; 0x07
 cd4:	2f 5f       	subi	r18, 0xFF	; 255
 cd6:	3f 4f       	sbci	r19, 0xFF	; 255
 cd8:	37 83       	std	Z+7, r19	; 0x07
 cda:	26 83       	std	Z+6, r18	; 0x06
 cdc:	14 c0       	rjmp	.+40     	; 0xd06 <fputc+0x6e>
 cde:	8b 01       	movw	r16, r22
 ce0:	ec 01       	movw	r28, r24
 ce2:	fb 01       	movw	r30, r22
 ce4:	00 84       	ldd	r0, Z+8	; 0x08
 ce6:	f1 85       	ldd	r31, Z+9	; 0x09
 ce8:	e0 2d       	mov	r30, r0
 cea:	09 95       	icall
 cec:	89 2b       	or	r24, r25
 cee:	e1 f6       	brne	.-72     	; 0xca8 <fputc+0x10>
 cf0:	d8 01       	movw	r26, r16
 cf2:	16 96       	adiw	r26, 0x06	; 6
 cf4:	8d 91       	ld	r24, X+
 cf6:	9c 91       	ld	r25, X
 cf8:	17 97       	sbiw	r26, 0x07	; 7
 cfa:	01 96       	adiw	r24, 0x01	; 1
 cfc:	17 96       	adiw	r26, 0x07	; 7
 cfe:	9c 93       	st	X, r25
 d00:	8e 93       	st	-X, r24
 d02:	16 97       	sbiw	r26, 0x06	; 6
 d04:	ce 01       	movw	r24, r28
 d06:	df 91       	pop	r29
 d08:	cf 91       	pop	r28
 d0a:	1f 91       	pop	r17
 d0c:	0f 91       	pop	r16
 d0e:	08 95       	ret

00000d10 <__ultoa_invert>:
 d10:	fa 01       	movw	r30, r20
 d12:	aa 27       	eor	r26, r26
 d14:	28 30       	cpi	r18, 0x08	; 8
 d16:	51 f1       	breq	.+84     	; 0xd6c <__ultoa_invert+0x5c>
 d18:	20 31       	cpi	r18, 0x10	; 16
 d1a:	81 f1       	breq	.+96     	; 0xd7c <__ultoa_invert+0x6c>
 d1c:	e8 94       	clt
 d1e:	6f 93       	push	r22
 d20:	6e 7f       	andi	r22, 0xFE	; 254
 d22:	6e 5f       	subi	r22, 0xFE	; 254
 d24:	7f 4f       	sbci	r23, 0xFF	; 255
 d26:	8f 4f       	sbci	r24, 0xFF	; 255
 d28:	9f 4f       	sbci	r25, 0xFF	; 255
 d2a:	af 4f       	sbci	r26, 0xFF	; 255
 d2c:	b1 e0       	ldi	r27, 0x01	; 1
 d2e:	3e d0       	rcall	.+124    	; 0xdac <__ultoa_invert+0x9c>
 d30:	b4 e0       	ldi	r27, 0x04	; 4
 d32:	3c d0       	rcall	.+120    	; 0xdac <__ultoa_invert+0x9c>
 d34:	67 0f       	add	r22, r23
 d36:	78 1f       	adc	r23, r24
 d38:	89 1f       	adc	r24, r25
 d3a:	9a 1f       	adc	r25, r26
 d3c:	a1 1d       	adc	r26, r1
 d3e:	68 0f       	add	r22, r24
 d40:	79 1f       	adc	r23, r25
 d42:	8a 1f       	adc	r24, r26
 d44:	91 1d       	adc	r25, r1
 d46:	a1 1d       	adc	r26, r1
 d48:	6a 0f       	add	r22, r26
 d4a:	71 1d       	adc	r23, r1
 d4c:	81 1d       	adc	r24, r1
 d4e:	91 1d       	adc	r25, r1
 d50:	a1 1d       	adc	r26, r1
 d52:	20 d0       	rcall	.+64     	; 0xd94 <__ultoa_invert+0x84>
 d54:	09 f4       	brne	.+2      	; 0xd58 <__ultoa_invert+0x48>
 d56:	68 94       	set
 d58:	3f 91       	pop	r19
 d5a:	2a e0       	ldi	r18, 0x0A	; 10
 d5c:	26 9f       	mul	r18, r22
 d5e:	11 24       	eor	r1, r1
 d60:	30 19       	sub	r19, r0
 d62:	30 5d       	subi	r19, 0xD0	; 208
 d64:	31 93       	st	Z+, r19
 d66:	de f6       	brtc	.-74     	; 0xd1e <__ultoa_invert+0xe>
 d68:	cf 01       	movw	r24, r30
 d6a:	08 95       	ret
 d6c:	46 2f       	mov	r20, r22
 d6e:	47 70       	andi	r20, 0x07	; 7
 d70:	40 5d       	subi	r20, 0xD0	; 208
 d72:	41 93       	st	Z+, r20
 d74:	b3 e0       	ldi	r27, 0x03	; 3
 d76:	0f d0       	rcall	.+30     	; 0xd96 <__ultoa_invert+0x86>
 d78:	c9 f7       	brne	.-14     	; 0xd6c <__ultoa_invert+0x5c>
 d7a:	f6 cf       	rjmp	.-20     	; 0xd68 <__ultoa_invert+0x58>
 d7c:	46 2f       	mov	r20, r22
 d7e:	4f 70       	andi	r20, 0x0F	; 15
 d80:	40 5d       	subi	r20, 0xD0	; 208
 d82:	4a 33       	cpi	r20, 0x3A	; 58
 d84:	18 f0       	brcs	.+6      	; 0xd8c <__ultoa_invert+0x7c>
 d86:	49 5d       	subi	r20, 0xD9	; 217
 d88:	31 fd       	sbrc	r19, 1
 d8a:	40 52       	subi	r20, 0x20	; 32
 d8c:	41 93       	st	Z+, r20
 d8e:	02 d0       	rcall	.+4      	; 0xd94 <__ultoa_invert+0x84>
 d90:	a9 f7       	brne	.-22     	; 0xd7c <__ultoa_invert+0x6c>
 d92:	ea cf       	rjmp	.-44     	; 0xd68 <__ultoa_invert+0x58>
 d94:	b4 e0       	ldi	r27, 0x04	; 4
 d96:	a6 95       	lsr	r26
 d98:	97 95       	ror	r25
 d9a:	87 95       	ror	r24
 d9c:	77 95       	ror	r23
 d9e:	67 95       	ror	r22
 da0:	ba 95       	dec	r27
 da2:	c9 f7       	brne	.-14     	; 0xd96 <__ultoa_invert+0x86>
 da4:	00 97       	sbiw	r24, 0x00	; 0
 da6:	61 05       	cpc	r22, r1
 da8:	71 05       	cpc	r23, r1
 daa:	08 95       	ret
 dac:	9b 01       	movw	r18, r22
 dae:	ac 01       	movw	r20, r24
 db0:	0a 2e       	mov	r0, r26
 db2:	06 94       	lsr	r0
 db4:	57 95       	ror	r21
 db6:	47 95       	ror	r20
 db8:	37 95       	ror	r19
 dba:	27 95       	ror	r18
 dbc:	ba 95       	dec	r27
 dbe:	c9 f7       	brne	.-14     	; 0xdb2 <__ultoa_invert+0xa2>
 dc0:	62 0f       	add	r22, r18
 dc2:	73 1f       	adc	r23, r19
 dc4:	84 1f       	adc	r24, r20
 dc6:	95 1f       	adc	r25, r21
 dc8:	a0 1d       	adc	r26, r0
 dca:	08 95       	ret

00000dcc <__prologue_saves__>:
 dcc:	2f 92       	push	r2
 dce:	3f 92       	push	r3
 dd0:	4f 92       	push	r4
 dd2:	5f 92       	push	r5
 dd4:	6f 92       	push	r6
 dd6:	7f 92       	push	r7
 dd8:	8f 92       	push	r8
 dda:	9f 92       	push	r9
 ddc:	af 92       	push	r10
 dde:	bf 92       	push	r11
 de0:	cf 92       	push	r12
 de2:	df 92       	push	r13
 de4:	ef 92       	push	r14
 de6:	ff 92       	push	r15
 de8:	0f 93       	push	r16
 dea:	1f 93       	push	r17
 dec:	cf 93       	push	r28
 dee:	df 93       	push	r29
 df0:	cd b7       	in	r28, 0x3d	; 61
 df2:	de b7       	in	r29, 0x3e	; 62
 df4:	ca 1b       	sub	r28, r26
 df6:	db 0b       	sbc	r29, r27
 df8:	0f b6       	in	r0, 0x3f	; 63
 dfa:	f8 94       	cli
 dfc:	de bf       	out	0x3e, r29	; 62
 dfe:	0f be       	out	0x3f, r0	; 63
 e00:	cd bf       	out	0x3d, r28	; 61
 e02:	09 94       	ijmp

00000e04 <__epilogue_restores__>:
 e04:	2a 88       	ldd	r2, Y+18	; 0x12
 e06:	39 88       	ldd	r3, Y+17	; 0x11
 e08:	48 88       	ldd	r4, Y+16	; 0x10
 e0a:	5f 84       	ldd	r5, Y+15	; 0x0f
 e0c:	6e 84       	ldd	r6, Y+14	; 0x0e
 e0e:	7d 84       	ldd	r7, Y+13	; 0x0d
 e10:	8c 84       	ldd	r8, Y+12	; 0x0c
 e12:	9b 84       	ldd	r9, Y+11	; 0x0b
 e14:	aa 84       	ldd	r10, Y+10	; 0x0a
 e16:	b9 84       	ldd	r11, Y+9	; 0x09
 e18:	c8 84       	ldd	r12, Y+8	; 0x08
 e1a:	df 80       	ldd	r13, Y+7	; 0x07
 e1c:	ee 80       	ldd	r14, Y+6	; 0x06
 e1e:	fd 80       	ldd	r15, Y+5	; 0x05
 e20:	0c 81       	ldd	r16, Y+4	; 0x04
 e22:	1b 81       	ldd	r17, Y+3	; 0x03
 e24:	aa 81       	ldd	r26, Y+2	; 0x02
 e26:	b9 81       	ldd	r27, Y+1	; 0x01
 e28:	ce 0f       	add	r28, r30
 e2a:	d1 1d       	adc	r29, r1
 e2c:	0f b6       	in	r0, 0x3f	; 63
 e2e:	f8 94       	cli
 e30:	de bf       	out	0x3e, r29	; 62
 e32:	0f be       	out	0x3f, r0	; 63
 e34:	cd bf       	out	0x3d, r28	; 61
 e36:	ed 01       	movw	r28, r26
 e38:	08 95       	ret

00000e3a <_exit>:
 e3a:	f8 94       	cli

00000e3c <__stop_program>:
 e3c:	ff cf       	rjmp	.-2      	; 0xe3c <__stop_program>
