
DataAcquisition.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000a4  00800100  00000e16  00000eaa  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000e16  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  008001a4  008001a4  00000f4e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000f4e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000fac  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000058  00000000  00000000  00000fec  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000cde  00000000  00000000  00001044  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a96  00000000  00000000  00001d22  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000446  00000000  00000000  000027b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000e8  00000000  00000000  00002c00  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005e2  00000000  00000000  00002ce8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000002a0  00000000  00000000  000032ca  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000048  00000000  00000000  0000356a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
   4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
   8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
   c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  10:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  14:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  18:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  1c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  20:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  24:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  28:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  2c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  30:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  34:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  38:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  3c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  40:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  44:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  48:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  4c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  50:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  54:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  58:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  5c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  60:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  64:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  68:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  6c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  70:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  74:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  78:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  7c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  80:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  84:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  88:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  8c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  90:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  94:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  98:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  9c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  ac:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  b0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d8 e0       	ldi	r29, 0x08	; 8
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61

000000c0 <__do_copy_data>:
  c0:	11 e0       	ldi	r17, 0x01	; 1
  c2:	a0 e0       	ldi	r26, 0x00	; 0
  c4:	b1 e0       	ldi	r27, 0x01	; 1
  c6:	e6 e1       	ldi	r30, 0x16	; 22
  c8:	fe e0       	ldi	r31, 0x0E	; 14
  ca:	02 c0       	rjmp	.+4      	; 0xd0 <__do_copy_data+0x10>
  cc:	05 90       	lpm	r0, Z+
  ce:	0d 92       	st	X+, r0
  d0:	a4 3a       	cpi	r26, 0xA4	; 164
  d2:	b1 07       	cpc	r27, r17
  d4:	d9 f7       	brne	.-10     	; 0xcc <__do_copy_data+0xc>

000000d6 <__do_clear_bss>:
  d6:	21 e0       	ldi	r18, 0x01	; 1
  d8:	a4 ea       	ldi	r26, 0xA4	; 164
  da:	b1 e0       	ldi	r27, 0x01	; 1
  dc:	01 c0       	rjmp	.+2      	; 0xe0 <.do_clear_bss_start>

000000de <.do_clear_bss_loop>:
  de:	1d 92       	st	X+, r1

000000e0 <.do_clear_bss_start>:
  e0:	aa 3a       	cpi	r26, 0xAA	; 170
  e2:	b2 07       	cpc	r27, r18
  e4:	e1 f7       	brne	.-8      	; 0xde <.do_clear_bss_loop>
  e6:	0e 94 0b 01 	call	0x216	; 0x216 <main>
  ea:	0c 94 09 07 	jmp	0xe12	; 0xe12 <_exit>

000000ee <__bad_interrupt>:
  ee:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000f2 <USART0SendByte>:
	//enable transmission and reception
	UCSR0B |= (1<<RXEN0)|(1<<TXEN0);
}

int USART0SendByte(char u8Data, FILE *stream)
{
  f2:	cf 93       	push	r28
  f4:	c8 2f       	mov	r28, r24
	if(u8Data == '\n')
  f6:	8a 30       	cpi	r24, 0x0A	; 10
  f8:	19 f4       	brne	.+6      	; 0x100 <USART0SendByte+0xe>
	{
		USART0SendByte('\r', stream);
  fa:	8d e0       	ldi	r24, 0x0D	; 13
  fc:	0e 94 79 00 	call	0xf2	; 0xf2 <USART0SendByte>
	}
	//wait while previous byte is completed
	while(!(UCSR0A&(1<<UDRE0))){};
 100:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 104:	85 ff       	sbrs	r24, 5
 106:	fc cf       	rjmp	.-8      	; 0x100 <USART0SendByte+0xe>
	// Transmit data
	UDR0 = u8Data;
 108:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
	return 0;
}
 10c:	80 e0       	ldi	r24, 0x00	; 0
 10e:	90 e0       	ldi	r25, 0x00	; 0
 110:	cf 91       	pop	r28
 112:	08 95       	ret

00000114 <returnPressure>:
#define VREF 5

float returnPressure(uint16_t pressure)
{
	float conversion;
	conversion = ((((5 * ((double)pressure / 1024)) - 0.5) * 25.3815) + 12.422) * 1000;// * 25.3815) - 0.6351236) * 1000; // convert to 10-bit value to Volts, then multiply by 23.3815 (PSI/V) for pressure
 114:	bc 01       	movw	r22, r24
 116:	80 e0       	ldi	r24, 0x00	; 0
 118:	90 e0       	ldi	r25, 0x00	; 0
 11a:	0e 94 dc 02 	call	0x5b8	; 0x5b8 <__floatunsisf>
 11e:	20 e0       	ldi	r18, 0x00	; 0
 120:	30 e0       	ldi	r19, 0x00	; 0
 122:	40 e8       	ldi	r20, 0x80	; 128
 124:	5a e3       	ldi	r21, 0x3A	; 58
 126:	0e 94 8e 03 	call	0x71c	; 0x71c <__mulsf3>
 12a:	20 e0       	ldi	r18, 0x00	; 0
 12c:	30 e0       	ldi	r19, 0x00	; 0
 12e:	40 ea       	ldi	r20, 0xA0	; 160
 130:	50 e4       	ldi	r21, 0x40	; 64
 132:	0e 94 8e 03 	call	0x71c	; 0x71c <__mulsf3>
 136:	20 e0       	ldi	r18, 0x00	; 0
 138:	30 e0       	ldi	r19, 0x00	; 0
 13a:	40 e0       	ldi	r20, 0x00	; 0
 13c:	5f e3       	ldi	r21, 0x3F	; 63
 13e:	0e 94 c2 01 	call	0x384	; 0x384 <__subsf3>
 142:	20 e5       	ldi	r18, 0x50	; 80
 144:	3d e0       	ldi	r19, 0x0D	; 13
 146:	4b ec       	ldi	r20, 0xCB	; 203
 148:	51 e4       	ldi	r21, 0x41	; 65
 14a:	0e 94 8e 03 	call	0x71c	; 0x71c <__mulsf3>
 14e:	23 e8       	ldi	r18, 0x83	; 131
 150:	30 ec       	ldi	r19, 0xC0	; 192
 152:	46 e4       	ldi	r20, 0x46	; 70
 154:	51 e4       	ldi	r21, 0x41	; 65
 156:	0e 94 c3 01 	call	0x386	; 0x386 <__addsf3>
 15a:	20 e0       	ldi	r18, 0x00	; 0
 15c:	30 e0       	ldi	r19, 0x00	; 0
 15e:	4a e7       	ldi	r20, 0x7A	; 122
 160:	54 e4       	ldi	r21, 0x44	; 68
 162:	0e 94 8e 03 	call	0x71c	; 0x71c <__mulsf3>
	return conversion;
}
 166:	08 95       	ret

00000168 <returnTemperature>:

float returnTemperature(uint16_t resistance) // requires compensation
{
	float conversion;
	conversion = 0.260075107866203 * resistance - 260.068512926113;
 168:	bc 01       	movw	r22, r24
 16a:	80 e0       	ldi	r24, 0x00	; 0
 16c:	90 e0       	ldi	r25, 0x00	; 0
 16e:	0e 94 dc 02 	call	0x5b8	; 0x5b8 <__floatunsisf>
 172:	21 e9       	ldi	r18, 0x91	; 145
 174:	38 e2       	ldi	r19, 0x28	; 40
 176:	45 e8       	ldi	r20, 0x85	; 133
 178:	5e e3       	ldi	r21, 0x3E	; 62
 17a:	0e 94 8e 03 	call	0x71c	; 0x71c <__mulsf3>
 17e:	25 ec       	ldi	r18, 0xC5	; 197
 180:	38 e0       	ldi	r19, 0x08	; 8
 182:	42 e8       	ldi	r20, 0x82	; 130
 184:	53 e4       	ldi	r21, 0x43	; 67
 186:	0e 94 c2 01 	call	0x384	; 0x384 <__subsf3>
	return conversion;
}
 18a:	08 95       	ret

0000018c <returnMoisture>:
	// Moisture sensor measures from 0 to 3.085V max based on water level
	// In theory, more voltage indicates more water is hitting the sensor
	// This needs to be validated in testing.
	// If statement need to be adjusted, reaches level 5 at half way on sensor somehow
	float conversion;
	conversion = ((double)moisture/1024) * 5000; // convert to voltage (0-5V)
 18c:	bc 01       	movw	r22, r24
 18e:	80 e0       	ldi	r24, 0x00	; 0
 190:	90 e0       	ldi	r25, 0x00	; 0
 192:	0e 94 dc 02 	call	0x5b8	; 0x5b8 <__floatunsisf>
 196:	20 e0       	ldi	r18, 0x00	; 0
 198:	30 e0       	ldi	r19, 0x00	; 0
 19a:	40 e8       	ldi	r20, 0x80	; 128
 19c:	5a e3       	ldi	r21, 0x3A	; 58
 19e:	0e 94 8e 03 	call	0x71c	; 0x71c <__mulsf3>
 1a2:	20 e0       	ldi	r18, 0x00	; 0
 1a4:	30 e4       	ldi	r19, 0x40	; 64
 1a6:	4c e9       	ldi	r20, 0x9C	; 156
 1a8:	55 e4       	ldi	r21, 0x45	; 69
 1aa:	0e 94 8e 03 	call	0x71c	; 0x71c <__mulsf3>
	return conversion;
 1ae:	0e 94 a6 02 	call	0x54c	; 0x54c <__fixsfsi>
	else if (conversion < 2.4)
		return 4;
	else
		return 5;
		
}
 1b2:	cb 01       	movw	r24, r22
 1b4:	08 95       	ret

000001b6 <USART0Init>:

void USART0Init(void)
{
	// Set baud rate
	UBRR0H = (uint8_t)(UBRR_VALUE>>8);
 1b6:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
	UBRR0L = (uint8_t)UBRR_VALUE;
 1ba:	87 e6       	ldi	r24, 0x67	; 103
 1bc:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
	// Set frame format to 8 data bits, no parity, 1 stop bit
	UCSR0C |= (1<<UCSZ01)|(1<<UCSZ00);
 1c0:	e2 ec       	ldi	r30, 0xC2	; 194
 1c2:	f0 e0       	ldi	r31, 0x00	; 0
 1c4:	80 81       	ld	r24, Z
 1c6:	86 60       	ori	r24, 0x06	; 6
 1c8:	80 83       	st	Z, r24
	//enable transmission and reception
	UCSR0B |= (1<<RXEN0)|(1<<TXEN0);
 1ca:	e1 ec       	ldi	r30, 0xC1	; 193
 1cc:	f0 e0       	ldi	r31, 0x00	; 0
 1ce:	80 81       	ld	r24, Z
 1d0:	88 61       	ori	r24, 0x18	; 24
 1d2:	80 83       	st	Z, r24
 1d4:	08 95       	ret

000001d6 <InitADC>:
//set stream pointer
FILE usart0_str = FDEV_SETUP_STREAM(USART0SendByte, NULL, _FDEV_SETUP_WRITE);
void InitADC()
{
    // Select Vref = AVcc
    ADMUX |= (1<<REFS0);
 1d6:	ec e7       	ldi	r30, 0x7C	; 124
 1d8:	f0 e0       	ldi	r31, 0x00	; 0
 1da:	80 81       	ld	r24, Z
 1dc:	80 64       	ori	r24, 0x40	; 64
 1de:	80 83       	st	Z, r24
    //set prescaller to 128 and enable ADC  
    ADCSRA |= (1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0)|(1<<ADEN);     
 1e0:	ea e7       	ldi	r30, 0x7A	; 122
 1e2:	f0 e0       	ldi	r31, 0x00	; 0
 1e4:	80 81       	ld	r24, Z
 1e6:	87 68       	ori	r24, 0x87	; 135
 1e8:	80 83       	st	Z, r24
 1ea:	08 95       	ret

000001ec <ReadADC>:
}

uint16_t ReadADC(uint8_t ADCchannel)
{
    //select ADC channel with safety mask
    ADMUX = (ADMUX & 0xF0) | (ADCchannel & 0x0F); 
 1ec:	ec e7       	ldi	r30, 0x7C	; 124
 1ee:	f0 e0       	ldi	r31, 0x00	; 0
 1f0:	90 81       	ld	r25, Z
 1f2:	90 7f       	andi	r25, 0xF0	; 240
 1f4:	8f 70       	andi	r24, 0x0F	; 15
 1f6:	89 2b       	or	r24, r25
 1f8:	80 83       	st	Z, r24
    //single conversion mode
    ADCSRA |= (1<<ADSC);
 1fa:	ea e7       	ldi	r30, 0x7A	; 122
 1fc:	f0 e0       	ldi	r31, 0x00	; 0
 1fe:	80 81       	ld	r24, Z
 200:	80 64       	ori	r24, 0x40	; 64
 202:	80 83       	st	Z, r24
    // wait until ADC conversion is complete
    while( ADCSRA & (1<<ADSC) );
 204:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
 208:	86 fd       	sbrc	r24, 6
 20a:	fc cf       	rjmp	.-8      	; 0x204 <ReadADC+0x18>
   return ADC;
 20c:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
 210:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
}
 214:	08 95       	ret

00000216 <main>:
{
	double rtdVal, presVal, moisVal, tempVal;
	uint16_t curTime = 0;
	uint16_t convTempVal = 0;
	//initialize ADC
	InitADC();
 216:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <InitADC>
	//Initialize USART0
	USART0Init();
 21a:	0e 94 db 00 	call	0x1b6	; 0x1b6 <USART0Init>
	//assign our stream to standard I/O streams
	stdout=&usart0_str;
 21e:	80 e0       	ldi	r24, 0x00	; 0
 220:	91 e0       	ldi	r25, 0x01	; 1
 222:	90 93 a7 01 	sts	0x01A7, r25	; 0x8001a7 <__data_end+0x3>
 226:	80 93 a6 01 	sts	0x01A6, r24	; 0x8001a6 <__data_end+0x2>
	printf("Time (min)\tTemperature (C)\tPressure (mPSI)\tMoisture (V)\n"); // 15 char columns with tab spacing
 22a:	8e e0       	ldi	r24, 0x0E	; 14
 22c:	91 e0       	ldi	r25, 0x01	; 1
 22e:	0e 94 11 04 	call	0x822	; 0x822 <puts>
	printf("------------------------------------------------------------------------------\n");
 232:	86 e4       	ldi	r24, 0x46	; 70
 234:	91 e0       	ldi	r25, 0x01	; 1
 236:	0e 94 11 04 	call	0x822	; 0x822 <puts>
}

int main()
{
	double rtdVal, presVal, moisVal, tempVal;
	uint16_t curTime = 0;
 23a:	c0 e0       	ldi	r28, 0x00	; 0
 23c:	d0 e0       	ldi	r29, 0x00	; 0
	stdout=&usart0_str;
	printf("Time (min)\tTemperature (C)\tPressure (mPSI)\tMoisture (V)\n"); // 15 char columns with tab spacing
	printf("------------------------------------------------------------------------------\n");
	while(1)
	{
		rtdVal = ReadADC(0);
 23e:	80 e0       	ldi	r24, 0x00	; 0
 240:	0e 94 f6 00 	call	0x1ec	; 0x1ec <ReadADC>
 244:	bc 01       	movw	r22, r24
 246:	80 e0       	ldi	r24, 0x00	; 0
 248:	90 e0       	ldi	r25, 0x00	; 0
 24a:	0e 94 dc 02 	call	0x5b8	; 0x5b8 <__floatunsisf>
		rtdVal = 5 * (rtdVal/1024); // translate voltage change to resistance
 24e:	20 e0       	ldi	r18, 0x00	; 0
 250:	30 e0       	ldi	r19, 0x00	; 0
 252:	40 e8       	ldi	r20, 0x80	; 128
 254:	5a e3       	ldi	r21, 0x3A	; 58
 256:	0e 94 8e 03 	call	0x71c	; 0x71c <__mulsf3>
 25a:	20 e0       	ldi	r18, 0x00	; 0
 25c:	30 e0       	ldi	r19, 0x00	; 0
 25e:	40 ea       	ldi	r20, 0xA0	; 160
 260:	50 e4       	ldi	r21, 0x40	; 64
 262:	0e 94 8e 03 	call	0x71c	; 0x71c <__mulsf3>
 266:	6b 01       	movw	r12, r22
 268:	7c 01       	movw	r14, r24
		rtdVal = (rtdVal * 1000)/(5-rtdVal);//returnTemperature(rtdVal); // Convert resistance to temperature via linear regression based on table
 26a:	20 e0       	ldi	r18, 0x00	; 0
 26c:	30 e0       	ldi	r19, 0x00	; 0
 26e:	4a e7       	ldi	r20, 0x7A	; 122
 270:	54 e4       	ldi	r21, 0x44	; 68
 272:	0e 94 8e 03 	call	0x71c	; 0x71c <__mulsf3>
 276:	4b 01       	movw	r8, r22
 278:	5c 01       	movw	r10, r24
 27a:	a7 01       	movw	r20, r14
 27c:	96 01       	movw	r18, r12
 27e:	60 e0       	ldi	r22, 0x00	; 0
 280:	70 e0       	ldi	r23, 0x00	; 0
 282:	80 ea       	ldi	r24, 0xA0	; 160
 284:	90 e4       	ldi	r25, 0x40	; 64
 286:	0e 94 c2 01 	call	0x384	; 0x384 <__subsf3>
 28a:	9b 01       	movw	r18, r22
 28c:	ac 01       	movw	r20, r24
 28e:	c5 01       	movw	r24, r10
 290:	b4 01       	movw	r22, r8
 292:	0e 94 34 02 	call	0x468	; 0x468 <__divsf3>
		tempVal = returnTemperature(rtdVal);
 296:	0e 94 ad 02 	call	0x55a	; 0x55a <__fixunssfsi>
 29a:	cb 01       	movw	r24, r22
 29c:	0e 94 b4 00 	call	0x168	; 0x168 <returnTemperature>
 2a0:	6b 01       	movw	r12, r22
 2a2:	7c 01       	movw	r14, r24
		presVal = returnPressure(ReadADC(1)); // Calculate pressure
 2a4:	81 e0       	ldi	r24, 0x01	; 1
 2a6:	0e 94 f6 00 	call	0x1ec	; 0x1ec <ReadADC>
 2aa:	0e 94 8a 00 	call	0x114	; 0x114 <returnPressure>
 2ae:	4b 01       	movw	r8, r22
 2b0:	5c 01       	movw	r10, r24
		moisVal = returnMoisture(ReadADC(2));	// Level from 1 - 5: 1 being light mist, 5 being heavy rainfall
 2b2:	82 e0       	ldi	r24, 0x02	; 2
 2b4:	0e 94 f6 00 	call	0x1ec	; 0x1ec <ReadADC>
 2b8:	0e 94 c6 00 	call	0x18c	; 0x18c <returnMoisture>
 2bc:	18 2f       	mov	r17, r24
 2be:	09 2f       	mov	r16, r25
		
		// "Print" results to stdout (USART)
		printf("%u\t\t\t",curTime);
 2c0:	df 93       	push	r29
 2c2:	cf 93       	push	r28
 2c4:	86 e9       	ldi	r24, 0x96	; 150
 2c6:	91 e0       	ldi	r25, 0x01	; 1
 2c8:	9f 93       	push	r25
 2ca:	8f 93       	push	r24
 2cc:	0e 94 fb 03 	call	0x7f6	; 0x7f6 <printf>
		if(tempVal < 0) {
 2d0:	0f 90       	pop	r0
 2d2:	0f 90       	pop	r0
 2d4:	0f 90       	pop	r0
 2d6:	0f 90       	pop	r0
 2d8:	20 e0       	ldi	r18, 0x00	; 0
 2da:	30 e0       	ldi	r19, 0x00	; 0
 2dc:	a9 01       	movw	r20, r18
 2de:	c7 01       	movw	r24, r14
 2e0:	b6 01       	movw	r22, r12
 2e2:	0e 94 2f 02 	call	0x45e	; 0x45e <__cmpsf2>
 2e6:	88 23       	and	r24, r24
 2e8:	b4 f4       	brge	.+44     	; 0x316 <main+0x100>
			convTempVal = 0 + -1*tempVal; // Don't use abs(), destorys int value - may be because its a float
 2ea:	a7 01       	movw	r20, r14
 2ec:	96 01       	movw	r18, r12
 2ee:	60 e0       	ldi	r22, 0x00	; 0
 2f0:	70 e0       	ldi	r23, 0x00	; 0
 2f2:	cb 01       	movw	r24, r22
 2f4:	0e 94 c2 01 	call	0x384	; 0x384 <__subsf3>
 2f8:	0e 94 ad 02 	call	0x55a	; 0x55a <__fixunssfsi>
			printf("-%u\t\t\t", convTempVal);
 2fc:	7f 93       	push	r23
 2fe:	6f 93       	push	r22
 300:	85 e9       	ldi	r24, 0x95	; 149
 302:	91 e0       	ldi	r25, 0x01	; 1
 304:	9f 93       	push	r25
 306:	8f 93       	push	r24
 308:	0e 94 fb 03 	call	0x7f6	; 0x7f6 <printf>
 30c:	0f 90       	pop	r0
 30e:	0f 90       	pop	r0
 310:	0f 90       	pop	r0
 312:	0f 90       	pop	r0
 314:	10 c0       	rjmp	.+32     	; 0x336 <main+0x120>
		}
		else
		{
			convTempVal = tempVal;
 316:	c7 01       	movw	r24, r14
 318:	b6 01       	movw	r22, r12
 31a:	0e 94 ad 02 	call	0x55a	; 0x55a <__fixunssfsi>
			printf("%u\t\t\t", convTempVal);
 31e:	7f 93       	push	r23
 320:	6f 93       	push	r22
 322:	86 e9       	ldi	r24, 0x96	; 150
 324:	91 e0       	ldi	r25, 0x01	; 1
 326:	9f 93       	push	r25
 328:	8f 93       	push	r24
 32a:	0e 94 fb 03 	call	0x7f6	; 0x7f6 <printf>
 32e:	0f 90       	pop	r0
 330:	0f 90       	pop	r0
 332:	0f 90       	pop	r0
 334:	0f 90       	pop	r0
		}
		printf("%u\t\t\t",(uint16_t)presVal);
 336:	c5 01       	movw	r24, r10
 338:	b4 01       	movw	r22, r8
 33a:	0e 94 ad 02 	call	0x55a	; 0x55a <__fixunssfsi>
 33e:	7f 93       	push	r23
 340:	6f 93       	push	r22
 342:	86 e9       	ldi	r24, 0x96	; 150
 344:	91 e0       	ldi	r25, 0x01	; 1
 346:	9f 93       	push	r25
 348:	8f 93       	push	r24
 34a:	0e 94 fb 03 	call	0x7f6	; 0x7f6 <printf>
		printf("%u\t\t\t\n",(uint16_t)moisVal);
 34e:	0f 93       	push	r16
 350:	1f 93       	push	r17
 352:	8c e9       	ldi	r24, 0x9C	; 156
 354:	91 e0       	ldi	r25, 0x01	; 1
 356:	9f 93       	push	r25
 358:	8f 93       	push	r24
 35a:	0e 94 fb 03 	call	0x7f6	; 0x7f6 <printf>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 35e:	9f ef       	ldi	r25, 0xFF	; 255
 360:	2b e4       	ldi	r18, 0x4B	; 75
 362:	8d e1       	ldi	r24, 0x1D	; 29
 364:	91 50       	subi	r25, 0x01	; 1
 366:	20 40       	sbci	r18, 0x00	; 0
 368:	80 40       	sbci	r24, 0x00	; 0
 36a:	e1 f7       	brne	.-8      	; 0x364 <main+0x14e>
 36c:	00 c0       	rjmp	.+0      	; 0x36e <main+0x158>
 36e:	00 00       	nop
		_delay_ms(600);
		curTime += 1;
 370:	21 96       	adiw	r28, 0x01	; 1
	} 
 372:	8d b7       	in	r24, 0x3d	; 61
 374:	9e b7       	in	r25, 0x3e	; 62
 376:	08 96       	adiw	r24, 0x08	; 8
 378:	0f b6       	in	r0, 0x3f	; 63
 37a:	f8 94       	cli
 37c:	9e bf       	out	0x3e, r25	; 62
 37e:	0f be       	out	0x3f, r0	; 63
 380:	8d bf       	out	0x3d, r24	; 61
 382:	5d cf       	rjmp	.-326    	; 0x23e <main+0x28>

00000384 <__subsf3>:
 384:	50 58       	subi	r21, 0x80	; 128

00000386 <__addsf3>:
 386:	bb 27       	eor	r27, r27
 388:	aa 27       	eor	r26, r26
 38a:	0e 94 da 01 	call	0x3b4	; 0x3b4 <__addsf3x>
 38e:	0c 94 54 03 	jmp	0x6a8	; 0x6a8 <__fp_round>
 392:	0e 94 46 03 	call	0x68c	; 0x68c <__fp_pscA>
 396:	38 f0       	brcs	.+14     	; 0x3a6 <__addsf3+0x20>
 398:	0e 94 4d 03 	call	0x69a	; 0x69a <__fp_pscB>
 39c:	20 f0       	brcs	.+8      	; 0x3a6 <__addsf3+0x20>
 39e:	39 f4       	brne	.+14     	; 0x3ae <__addsf3+0x28>
 3a0:	9f 3f       	cpi	r25, 0xFF	; 255
 3a2:	19 f4       	brne	.+6      	; 0x3aa <__addsf3+0x24>
 3a4:	26 f4       	brtc	.+8      	; 0x3ae <__addsf3+0x28>
 3a6:	0c 94 43 03 	jmp	0x686	; 0x686 <__fp_nan>
 3aa:	0e f4       	brtc	.+2      	; 0x3ae <__addsf3+0x28>
 3ac:	e0 95       	com	r30
 3ae:	e7 fb       	bst	r30, 7
 3b0:	0c 94 3d 03 	jmp	0x67a	; 0x67a <__fp_inf>

000003b4 <__addsf3x>:
 3b4:	e9 2f       	mov	r30, r25
 3b6:	0e 94 65 03 	call	0x6ca	; 0x6ca <__fp_split3>
 3ba:	58 f3       	brcs	.-42     	; 0x392 <__addsf3+0xc>
 3bc:	ba 17       	cp	r27, r26
 3be:	62 07       	cpc	r22, r18
 3c0:	73 07       	cpc	r23, r19
 3c2:	84 07       	cpc	r24, r20
 3c4:	95 07       	cpc	r25, r21
 3c6:	20 f0       	brcs	.+8      	; 0x3d0 <__addsf3x+0x1c>
 3c8:	79 f4       	brne	.+30     	; 0x3e8 <__addsf3x+0x34>
 3ca:	a6 f5       	brtc	.+104    	; 0x434 <__EEPROM_REGION_LENGTH__+0x34>
 3cc:	0c 94 87 03 	jmp	0x70e	; 0x70e <__fp_zero>
 3d0:	0e f4       	brtc	.+2      	; 0x3d4 <__addsf3x+0x20>
 3d2:	e0 95       	com	r30
 3d4:	0b 2e       	mov	r0, r27
 3d6:	ba 2f       	mov	r27, r26
 3d8:	a0 2d       	mov	r26, r0
 3da:	0b 01       	movw	r0, r22
 3dc:	b9 01       	movw	r22, r18
 3de:	90 01       	movw	r18, r0
 3e0:	0c 01       	movw	r0, r24
 3e2:	ca 01       	movw	r24, r20
 3e4:	a0 01       	movw	r20, r0
 3e6:	11 24       	eor	r1, r1
 3e8:	ff 27       	eor	r31, r31
 3ea:	59 1b       	sub	r21, r25
 3ec:	99 f0       	breq	.+38     	; 0x414 <__EEPROM_REGION_LENGTH__+0x14>
 3ee:	59 3f       	cpi	r21, 0xF9	; 249
 3f0:	50 f4       	brcc	.+20     	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
 3f2:	50 3e       	cpi	r21, 0xE0	; 224
 3f4:	68 f1       	brcs	.+90     	; 0x450 <__EEPROM_REGION_LENGTH__+0x50>
 3f6:	1a 16       	cp	r1, r26
 3f8:	f0 40       	sbci	r31, 0x00	; 0
 3fa:	a2 2f       	mov	r26, r18
 3fc:	23 2f       	mov	r18, r19
 3fe:	34 2f       	mov	r19, r20
 400:	44 27       	eor	r20, r20
 402:	58 5f       	subi	r21, 0xF8	; 248
 404:	f3 cf       	rjmp	.-26     	; 0x3ec <__addsf3x+0x38>
 406:	46 95       	lsr	r20
 408:	37 95       	ror	r19
 40a:	27 95       	ror	r18
 40c:	a7 95       	ror	r26
 40e:	f0 40       	sbci	r31, 0x00	; 0
 410:	53 95       	inc	r21
 412:	c9 f7       	brne	.-14     	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
 414:	7e f4       	brtc	.+30     	; 0x434 <__EEPROM_REGION_LENGTH__+0x34>
 416:	1f 16       	cp	r1, r31
 418:	ba 0b       	sbc	r27, r26
 41a:	62 0b       	sbc	r22, r18
 41c:	73 0b       	sbc	r23, r19
 41e:	84 0b       	sbc	r24, r20
 420:	ba f0       	brmi	.+46     	; 0x450 <__EEPROM_REGION_LENGTH__+0x50>
 422:	91 50       	subi	r25, 0x01	; 1
 424:	a1 f0       	breq	.+40     	; 0x44e <__EEPROM_REGION_LENGTH__+0x4e>
 426:	ff 0f       	add	r31, r31
 428:	bb 1f       	adc	r27, r27
 42a:	66 1f       	adc	r22, r22
 42c:	77 1f       	adc	r23, r23
 42e:	88 1f       	adc	r24, r24
 430:	c2 f7       	brpl	.-16     	; 0x422 <__EEPROM_REGION_LENGTH__+0x22>
 432:	0e c0       	rjmp	.+28     	; 0x450 <__EEPROM_REGION_LENGTH__+0x50>
 434:	ba 0f       	add	r27, r26
 436:	62 1f       	adc	r22, r18
 438:	73 1f       	adc	r23, r19
 43a:	84 1f       	adc	r24, r20
 43c:	48 f4       	brcc	.+18     	; 0x450 <__EEPROM_REGION_LENGTH__+0x50>
 43e:	87 95       	ror	r24
 440:	77 95       	ror	r23
 442:	67 95       	ror	r22
 444:	b7 95       	ror	r27
 446:	f7 95       	ror	r31
 448:	9e 3f       	cpi	r25, 0xFE	; 254
 44a:	08 f0       	brcs	.+2      	; 0x44e <__EEPROM_REGION_LENGTH__+0x4e>
 44c:	b0 cf       	rjmp	.-160    	; 0x3ae <__addsf3+0x28>
 44e:	93 95       	inc	r25
 450:	88 0f       	add	r24, r24
 452:	08 f0       	brcs	.+2      	; 0x456 <__EEPROM_REGION_LENGTH__+0x56>
 454:	99 27       	eor	r25, r25
 456:	ee 0f       	add	r30, r30
 458:	97 95       	ror	r25
 45a:	87 95       	ror	r24
 45c:	08 95       	ret

0000045e <__cmpsf2>:
 45e:	0e 94 19 03 	call	0x632	; 0x632 <__fp_cmp>
 462:	08 f4       	brcc	.+2      	; 0x466 <__cmpsf2+0x8>
 464:	81 e0       	ldi	r24, 0x01	; 1
 466:	08 95       	ret

00000468 <__divsf3>:
 468:	0e 94 48 02 	call	0x490	; 0x490 <__divsf3x>
 46c:	0c 94 54 03 	jmp	0x6a8	; 0x6a8 <__fp_round>
 470:	0e 94 4d 03 	call	0x69a	; 0x69a <__fp_pscB>
 474:	58 f0       	brcs	.+22     	; 0x48c <__divsf3+0x24>
 476:	0e 94 46 03 	call	0x68c	; 0x68c <__fp_pscA>
 47a:	40 f0       	brcs	.+16     	; 0x48c <__divsf3+0x24>
 47c:	29 f4       	brne	.+10     	; 0x488 <__divsf3+0x20>
 47e:	5f 3f       	cpi	r21, 0xFF	; 255
 480:	29 f0       	breq	.+10     	; 0x48c <__divsf3+0x24>
 482:	0c 94 3d 03 	jmp	0x67a	; 0x67a <__fp_inf>
 486:	51 11       	cpse	r21, r1
 488:	0c 94 88 03 	jmp	0x710	; 0x710 <__fp_szero>
 48c:	0c 94 43 03 	jmp	0x686	; 0x686 <__fp_nan>

00000490 <__divsf3x>:
 490:	0e 94 65 03 	call	0x6ca	; 0x6ca <__fp_split3>
 494:	68 f3       	brcs	.-38     	; 0x470 <__divsf3+0x8>

00000496 <__divsf3_pse>:
 496:	99 23       	and	r25, r25
 498:	b1 f3       	breq	.-20     	; 0x486 <__divsf3+0x1e>
 49a:	55 23       	and	r21, r21
 49c:	91 f3       	breq	.-28     	; 0x482 <__divsf3+0x1a>
 49e:	95 1b       	sub	r25, r21
 4a0:	55 0b       	sbc	r21, r21
 4a2:	bb 27       	eor	r27, r27
 4a4:	aa 27       	eor	r26, r26
 4a6:	62 17       	cp	r22, r18
 4a8:	73 07       	cpc	r23, r19
 4aa:	84 07       	cpc	r24, r20
 4ac:	38 f0       	brcs	.+14     	; 0x4bc <__divsf3_pse+0x26>
 4ae:	9f 5f       	subi	r25, 0xFF	; 255
 4b0:	5f 4f       	sbci	r21, 0xFF	; 255
 4b2:	22 0f       	add	r18, r18
 4b4:	33 1f       	adc	r19, r19
 4b6:	44 1f       	adc	r20, r20
 4b8:	aa 1f       	adc	r26, r26
 4ba:	a9 f3       	breq	.-22     	; 0x4a6 <__divsf3_pse+0x10>
 4bc:	35 d0       	rcall	.+106    	; 0x528 <__divsf3_pse+0x92>
 4be:	0e 2e       	mov	r0, r30
 4c0:	3a f0       	brmi	.+14     	; 0x4d0 <__divsf3_pse+0x3a>
 4c2:	e0 e8       	ldi	r30, 0x80	; 128
 4c4:	32 d0       	rcall	.+100    	; 0x52a <__divsf3_pse+0x94>
 4c6:	91 50       	subi	r25, 0x01	; 1
 4c8:	50 40       	sbci	r21, 0x00	; 0
 4ca:	e6 95       	lsr	r30
 4cc:	00 1c       	adc	r0, r0
 4ce:	ca f7       	brpl	.-14     	; 0x4c2 <__divsf3_pse+0x2c>
 4d0:	2b d0       	rcall	.+86     	; 0x528 <__divsf3_pse+0x92>
 4d2:	fe 2f       	mov	r31, r30
 4d4:	29 d0       	rcall	.+82     	; 0x528 <__divsf3_pse+0x92>
 4d6:	66 0f       	add	r22, r22
 4d8:	77 1f       	adc	r23, r23
 4da:	88 1f       	adc	r24, r24
 4dc:	bb 1f       	adc	r27, r27
 4de:	26 17       	cp	r18, r22
 4e0:	37 07       	cpc	r19, r23
 4e2:	48 07       	cpc	r20, r24
 4e4:	ab 07       	cpc	r26, r27
 4e6:	b0 e8       	ldi	r27, 0x80	; 128
 4e8:	09 f0       	breq	.+2      	; 0x4ec <__divsf3_pse+0x56>
 4ea:	bb 0b       	sbc	r27, r27
 4ec:	80 2d       	mov	r24, r0
 4ee:	bf 01       	movw	r22, r30
 4f0:	ff 27       	eor	r31, r31
 4f2:	93 58       	subi	r25, 0x83	; 131
 4f4:	5f 4f       	sbci	r21, 0xFF	; 255
 4f6:	3a f0       	brmi	.+14     	; 0x506 <__divsf3_pse+0x70>
 4f8:	9e 3f       	cpi	r25, 0xFE	; 254
 4fa:	51 05       	cpc	r21, r1
 4fc:	78 f0       	brcs	.+30     	; 0x51c <__divsf3_pse+0x86>
 4fe:	0c 94 3d 03 	jmp	0x67a	; 0x67a <__fp_inf>
 502:	0c 94 88 03 	jmp	0x710	; 0x710 <__fp_szero>
 506:	5f 3f       	cpi	r21, 0xFF	; 255
 508:	e4 f3       	brlt	.-8      	; 0x502 <__divsf3_pse+0x6c>
 50a:	98 3e       	cpi	r25, 0xE8	; 232
 50c:	d4 f3       	brlt	.-12     	; 0x502 <__divsf3_pse+0x6c>
 50e:	86 95       	lsr	r24
 510:	77 95       	ror	r23
 512:	67 95       	ror	r22
 514:	b7 95       	ror	r27
 516:	f7 95       	ror	r31
 518:	9f 5f       	subi	r25, 0xFF	; 255
 51a:	c9 f7       	brne	.-14     	; 0x50e <__divsf3_pse+0x78>
 51c:	88 0f       	add	r24, r24
 51e:	91 1d       	adc	r25, r1
 520:	96 95       	lsr	r25
 522:	87 95       	ror	r24
 524:	97 f9       	bld	r25, 7
 526:	08 95       	ret
 528:	e1 e0       	ldi	r30, 0x01	; 1
 52a:	66 0f       	add	r22, r22
 52c:	77 1f       	adc	r23, r23
 52e:	88 1f       	adc	r24, r24
 530:	bb 1f       	adc	r27, r27
 532:	62 17       	cp	r22, r18
 534:	73 07       	cpc	r23, r19
 536:	84 07       	cpc	r24, r20
 538:	ba 07       	cpc	r27, r26
 53a:	20 f0       	brcs	.+8      	; 0x544 <__divsf3_pse+0xae>
 53c:	62 1b       	sub	r22, r18
 53e:	73 0b       	sbc	r23, r19
 540:	84 0b       	sbc	r24, r20
 542:	ba 0b       	sbc	r27, r26
 544:	ee 1f       	adc	r30, r30
 546:	88 f7       	brcc	.-30     	; 0x52a <__divsf3_pse+0x94>
 548:	e0 95       	com	r30
 54a:	08 95       	ret

0000054c <__fixsfsi>:
 54c:	0e 94 ad 02 	call	0x55a	; 0x55a <__fixunssfsi>
 550:	68 94       	set
 552:	b1 11       	cpse	r27, r1
 554:	0c 94 88 03 	jmp	0x710	; 0x710 <__fp_szero>
 558:	08 95       	ret

0000055a <__fixunssfsi>:
 55a:	0e 94 6d 03 	call	0x6da	; 0x6da <__fp_splitA>
 55e:	88 f0       	brcs	.+34     	; 0x582 <__fixunssfsi+0x28>
 560:	9f 57       	subi	r25, 0x7F	; 127
 562:	98 f0       	brcs	.+38     	; 0x58a <__fixunssfsi+0x30>
 564:	b9 2f       	mov	r27, r25
 566:	99 27       	eor	r25, r25
 568:	b7 51       	subi	r27, 0x17	; 23
 56a:	b0 f0       	brcs	.+44     	; 0x598 <__fixunssfsi+0x3e>
 56c:	e1 f0       	breq	.+56     	; 0x5a6 <__fixunssfsi+0x4c>
 56e:	66 0f       	add	r22, r22
 570:	77 1f       	adc	r23, r23
 572:	88 1f       	adc	r24, r24
 574:	99 1f       	adc	r25, r25
 576:	1a f0       	brmi	.+6      	; 0x57e <__fixunssfsi+0x24>
 578:	ba 95       	dec	r27
 57a:	c9 f7       	brne	.-14     	; 0x56e <__fixunssfsi+0x14>
 57c:	14 c0       	rjmp	.+40     	; 0x5a6 <__fixunssfsi+0x4c>
 57e:	b1 30       	cpi	r27, 0x01	; 1
 580:	91 f0       	breq	.+36     	; 0x5a6 <__fixunssfsi+0x4c>
 582:	0e 94 87 03 	call	0x70e	; 0x70e <__fp_zero>
 586:	b1 e0       	ldi	r27, 0x01	; 1
 588:	08 95       	ret
 58a:	0c 94 87 03 	jmp	0x70e	; 0x70e <__fp_zero>
 58e:	67 2f       	mov	r22, r23
 590:	78 2f       	mov	r23, r24
 592:	88 27       	eor	r24, r24
 594:	b8 5f       	subi	r27, 0xF8	; 248
 596:	39 f0       	breq	.+14     	; 0x5a6 <__fixunssfsi+0x4c>
 598:	b9 3f       	cpi	r27, 0xF9	; 249
 59a:	cc f3       	brlt	.-14     	; 0x58e <__fixunssfsi+0x34>
 59c:	86 95       	lsr	r24
 59e:	77 95       	ror	r23
 5a0:	67 95       	ror	r22
 5a2:	b3 95       	inc	r27
 5a4:	d9 f7       	brne	.-10     	; 0x59c <__fixunssfsi+0x42>
 5a6:	3e f4       	brtc	.+14     	; 0x5b6 <__fixunssfsi+0x5c>
 5a8:	90 95       	com	r25
 5aa:	80 95       	com	r24
 5ac:	70 95       	com	r23
 5ae:	61 95       	neg	r22
 5b0:	7f 4f       	sbci	r23, 0xFF	; 255
 5b2:	8f 4f       	sbci	r24, 0xFF	; 255
 5b4:	9f 4f       	sbci	r25, 0xFF	; 255
 5b6:	08 95       	ret

000005b8 <__floatunsisf>:
 5b8:	e8 94       	clt
 5ba:	09 c0       	rjmp	.+18     	; 0x5ce <__floatsisf+0x12>

000005bc <__floatsisf>:
 5bc:	97 fb       	bst	r25, 7
 5be:	3e f4       	brtc	.+14     	; 0x5ce <__floatsisf+0x12>
 5c0:	90 95       	com	r25
 5c2:	80 95       	com	r24
 5c4:	70 95       	com	r23
 5c6:	61 95       	neg	r22
 5c8:	7f 4f       	sbci	r23, 0xFF	; 255
 5ca:	8f 4f       	sbci	r24, 0xFF	; 255
 5cc:	9f 4f       	sbci	r25, 0xFF	; 255
 5ce:	99 23       	and	r25, r25
 5d0:	a9 f0       	breq	.+42     	; 0x5fc <__floatsisf+0x40>
 5d2:	f9 2f       	mov	r31, r25
 5d4:	96 e9       	ldi	r25, 0x96	; 150
 5d6:	bb 27       	eor	r27, r27
 5d8:	93 95       	inc	r25
 5da:	f6 95       	lsr	r31
 5dc:	87 95       	ror	r24
 5de:	77 95       	ror	r23
 5e0:	67 95       	ror	r22
 5e2:	b7 95       	ror	r27
 5e4:	f1 11       	cpse	r31, r1
 5e6:	f8 cf       	rjmp	.-16     	; 0x5d8 <__floatsisf+0x1c>
 5e8:	fa f4       	brpl	.+62     	; 0x628 <__floatsisf+0x6c>
 5ea:	bb 0f       	add	r27, r27
 5ec:	11 f4       	brne	.+4      	; 0x5f2 <__floatsisf+0x36>
 5ee:	60 ff       	sbrs	r22, 0
 5f0:	1b c0       	rjmp	.+54     	; 0x628 <__floatsisf+0x6c>
 5f2:	6f 5f       	subi	r22, 0xFF	; 255
 5f4:	7f 4f       	sbci	r23, 0xFF	; 255
 5f6:	8f 4f       	sbci	r24, 0xFF	; 255
 5f8:	9f 4f       	sbci	r25, 0xFF	; 255
 5fa:	16 c0       	rjmp	.+44     	; 0x628 <__floatsisf+0x6c>
 5fc:	88 23       	and	r24, r24
 5fe:	11 f0       	breq	.+4      	; 0x604 <__floatsisf+0x48>
 600:	96 e9       	ldi	r25, 0x96	; 150
 602:	11 c0       	rjmp	.+34     	; 0x626 <__floatsisf+0x6a>
 604:	77 23       	and	r23, r23
 606:	21 f0       	breq	.+8      	; 0x610 <__floatsisf+0x54>
 608:	9e e8       	ldi	r25, 0x8E	; 142
 60a:	87 2f       	mov	r24, r23
 60c:	76 2f       	mov	r23, r22
 60e:	05 c0       	rjmp	.+10     	; 0x61a <__floatsisf+0x5e>
 610:	66 23       	and	r22, r22
 612:	71 f0       	breq	.+28     	; 0x630 <__floatsisf+0x74>
 614:	96 e8       	ldi	r25, 0x86	; 134
 616:	86 2f       	mov	r24, r22
 618:	70 e0       	ldi	r23, 0x00	; 0
 61a:	60 e0       	ldi	r22, 0x00	; 0
 61c:	2a f0       	brmi	.+10     	; 0x628 <__floatsisf+0x6c>
 61e:	9a 95       	dec	r25
 620:	66 0f       	add	r22, r22
 622:	77 1f       	adc	r23, r23
 624:	88 1f       	adc	r24, r24
 626:	da f7       	brpl	.-10     	; 0x61e <__floatsisf+0x62>
 628:	88 0f       	add	r24, r24
 62a:	96 95       	lsr	r25
 62c:	87 95       	ror	r24
 62e:	97 f9       	bld	r25, 7
 630:	08 95       	ret

00000632 <__fp_cmp>:
 632:	99 0f       	add	r25, r25
 634:	00 08       	sbc	r0, r0
 636:	55 0f       	add	r21, r21
 638:	aa 0b       	sbc	r26, r26
 63a:	e0 e8       	ldi	r30, 0x80	; 128
 63c:	fe ef       	ldi	r31, 0xFE	; 254
 63e:	16 16       	cp	r1, r22
 640:	17 06       	cpc	r1, r23
 642:	e8 07       	cpc	r30, r24
 644:	f9 07       	cpc	r31, r25
 646:	c0 f0       	brcs	.+48     	; 0x678 <__fp_cmp+0x46>
 648:	12 16       	cp	r1, r18
 64a:	13 06       	cpc	r1, r19
 64c:	e4 07       	cpc	r30, r20
 64e:	f5 07       	cpc	r31, r21
 650:	98 f0       	brcs	.+38     	; 0x678 <__fp_cmp+0x46>
 652:	62 1b       	sub	r22, r18
 654:	73 0b       	sbc	r23, r19
 656:	84 0b       	sbc	r24, r20
 658:	95 0b       	sbc	r25, r21
 65a:	39 f4       	brne	.+14     	; 0x66a <__fp_cmp+0x38>
 65c:	0a 26       	eor	r0, r26
 65e:	61 f0       	breq	.+24     	; 0x678 <__fp_cmp+0x46>
 660:	23 2b       	or	r18, r19
 662:	24 2b       	or	r18, r20
 664:	25 2b       	or	r18, r21
 666:	21 f4       	brne	.+8      	; 0x670 <__fp_cmp+0x3e>
 668:	08 95       	ret
 66a:	0a 26       	eor	r0, r26
 66c:	09 f4       	brne	.+2      	; 0x670 <__fp_cmp+0x3e>
 66e:	a1 40       	sbci	r26, 0x01	; 1
 670:	a6 95       	lsr	r26
 672:	8f ef       	ldi	r24, 0xFF	; 255
 674:	81 1d       	adc	r24, r1
 676:	81 1d       	adc	r24, r1
 678:	08 95       	ret

0000067a <__fp_inf>:
 67a:	97 f9       	bld	r25, 7
 67c:	9f 67       	ori	r25, 0x7F	; 127
 67e:	80 e8       	ldi	r24, 0x80	; 128
 680:	70 e0       	ldi	r23, 0x00	; 0
 682:	60 e0       	ldi	r22, 0x00	; 0
 684:	08 95       	ret

00000686 <__fp_nan>:
 686:	9f ef       	ldi	r25, 0xFF	; 255
 688:	80 ec       	ldi	r24, 0xC0	; 192
 68a:	08 95       	ret

0000068c <__fp_pscA>:
 68c:	00 24       	eor	r0, r0
 68e:	0a 94       	dec	r0
 690:	16 16       	cp	r1, r22
 692:	17 06       	cpc	r1, r23
 694:	18 06       	cpc	r1, r24
 696:	09 06       	cpc	r0, r25
 698:	08 95       	ret

0000069a <__fp_pscB>:
 69a:	00 24       	eor	r0, r0
 69c:	0a 94       	dec	r0
 69e:	12 16       	cp	r1, r18
 6a0:	13 06       	cpc	r1, r19
 6a2:	14 06       	cpc	r1, r20
 6a4:	05 06       	cpc	r0, r21
 6a6:	08 95       	ret

000006a8 <__fp_round>:
 6a8:	09 2e       	mov	r0, r25
 6aa:	03 94       	inc	r0
 6ac:	00 0c       	add	r0, r0
 6ae:	11 f4       	brne	.+4      	; 0x6b4 <__fp_round+0xc>
 6b0:	88 23       	and	r24, r24
 6b2:	52 f0       	brmi	.+20     	; 0x6c8 <__fp_round+0x20>
 6b4:	bb 0f       	add	r27, r27
 6b6:	40 f4       	brcc	.+16     	; 0x6c8 <__fp_round+0x20>
 6b8:	bf 2b       	or	r27, r31
 6ba:	11 f4       	brne	.+4      	; 0x6c0 <__fp_round+0x18>
 6bc:	60 ff       	sbrs	r22, 0
 6be:	04 c0       	rjmp	.+8      	; 0x6c8 <__fp_round+0x20>
 6c0:	6f 5f       	subi	r22, 0xFF	; 255
 6c2:	7f 4f       	sbci	r23, 0xFF	; 255
 6c4:	8f 4f       	sbci	r24, 0xFF	; 255
 6c6:	9f 4f       	sbci	r25, 0xFF	; 255
 6c8:	08 95       	ret

000006ca <__fp_split3>:
 6ca:	57 fd       	sbrc	r21, 7
 6cc:	90 58       	subi	r25, 0x80	; 128
 6ce:	44 0f       	add	r20, r20
 6d0:	55 1f       	adc	r21, r21
 6d2:	59 f0       	breq	.+22     	; 0x6ea <__fp_splitA+0x10>
 6d4:	5f 3f       	cpi	r21, 0xFF	; 255
 6d6:	71 f0       	breq	.+28     	; 0x6f4 <__fp_splitA+0x1a>
 6d8:	47 95       	ror	r20

000006da <__fp_splitA>:
 6da:	88 0f       	add	r24, r24
 6dc:	97 fb       	bst	r25, 7
 6de:	99 1f       	adc	r25, r25
 6e0:	61 f0       	breq	.+24     	; 0x6fa <__fp_splitA+0x20>
 6e2:	9f 3f       	cpi	r25, 0xFF	; 255
 6e4:	79 f0       	breq	.+30     	; 0x704 <__fp_splitA+0x2a>
 6e6:	87 95       	ror	r24
 6e8:	08 95       	ret
 6ea:	12 16       	cp	r1, r18
 6ec:	13 06       	cpc	r1, r19
 6ee:	14 06       	cpc	r1, r20
 6f0:	55 1f       	adc	r21, r21
 6f2:	f2 cf       	rjmp	.-28     	; 0x6d8 <__fp_split3+0xe>
 6f4:	46 95       	lsr	r20
 6f6:	f1 df       	rcall	.-30     	; 0x6da <__fp_splitA>
 6f8:	08 c0       	rjmp	.+16     	; 0x70a <__fp_splitA+0x30>
 6fa:	16 16       	cp	r1, r22
 6fc:	17 06       	cpc	r1, r23
 6fe:	18 06       	cpc	r1, r24
 700:	99 1f       	adc	r25, r25
 702:	f1 cf       	rjmp	.-30     	; 0x6e6 <__fp_splitA+0xc>
 704:	86 95       	lsr	r24
 706:	71 05       	cpc	r23, r1
 708:	61 05       	cpc	r22, r1
 70a:	08 94       	sec
 70c:	08 95       	ret

0000070e <__fp_zero>:
 70e:	e8 94       	clt

00000710 <__fp_szero>:
 710:	bb 27       	eor	r27, r27
 712:	66 27       	eor	r22, r22
 714:	77 27       	eor	r23, r23
 716:	cb 01       	movw	r24, r22
 718:	97 f9       	bld	r25, 7
 71a:	08 95       	ret

0000071c <__mulsf3>:
 71c:	0e 94 a1 03 	call	0x742	; 0x742 <__mulsf3x>
 720:	0c 94 54 03 	jmp	0x6a8	; 0x6a8 <__fp_round>
 724:	0e 94 46 03 	call	0x68c	; 0x68c <__fp_pscA>
 728:	38 f0       	brcs	.+14     	; 0x738 <__mulsf3+0x1c>
 72a:	0e 94 4d 03 	call	0x69a	; 0x69a <__fp_pscB>
 72e:	20 f0       	brcs	.+8      	; 0x738 <__mulsf3+0x1c>
 730:	95 23       	and	r25, r21
 732:	11 f0       	breq	.+4      	; 0x738 <__mulsf3+0x1c>
 734:	0c 94 3d 03 	jmp	0x67a	; 0x67a <__fp_inf>
 738:	0c 94 43 03 	jmp	0x686	; 0x686 <__fp_nan>
 73c:	11 24       	eor	r1, r1
 73e:	0c 94 88 03 	jmp	0x710	; 0x710 <__fp_szero>

00000742 <__mulsf3x>:
 742:	0e 94 65 03 	call	0x6ca	; 0x6ca <__fp_split3>
 746:	70 f3       	brcs	.-36     	; 0x724 <__mulsf3+0x8>

00000748 <__mulsf3_pse>:
 748:	95 9f       	mul	r25, r21
 74a:	c1 f3       	breq	.-16     	; 0x73c <__mulsf3+0x20>
 74c:	95 0f       	add	r25, r21
 74e:	50 e0       	ldi	r21, 0x00	; 0
 750:	55 1f       	adc	r21, r21
 752:	62 9f       	mul	r22, r18
 754:	f0 01       	movw	r30, r0
 756:	72 9f       	mul	r23, r18
 758:	bb 27       	eor	r27, r27
 75a:	f0 0d       	add	r31, r0
 75c:	b1 1d       	adc	r27, r1
 75e:	63 9f       	mul	r22, r19
 760:	aa 27       	eor	r26, r26
 762:	f0 0d       	add	r31, r0
 764:	b1 1d       	adc	r27, r1
 766:	aa 1f       	adc	r26, r26
 768:	64 9f       	mul	r22, r20
 76a:	66 27       	eor	r22, r22
 76c:	b0 0d       	add	r27, r0
 76e:	a1 1d       	adc	r26, r1
 770:	66 1f       	adc	r22, r22
 772:	82 9f       	mul	r24, r18
 774:	22 27       	eor	r18, r18
 776:	b0 0d       	add	r27, r0
 778:	a1 1d       	adc	r26, r1
 77a:	62 1f       	adc	r22, r18
 77c:	73 9f       	mul	r23, r19
 77e:	b0 0d       	add	r27, r0
 780:	a1 1d       	adc	r26, r1
 782:	62 1f       	adc	r22, r18
 784:	83 9f       	mul	r24, r19
 786:	a0 0d       	add	r26, r0
 788:	61 1d       	adc	r22, r1
 78a:	22 1f       	adc	r18, r18
 78c:	74 9f       	mul	r23, r20
 78e:	33 27       	eor	r19, r19
 790:	a0 0d       	add	r26, r0
 792:	61 1d       	adc	r22, r1
 794:	23 1f       	adc	r18, r19
 796:	84 9f       	mul	r24, r20
 798:	60 0d       	add	r22, r0
 79a:	21 1d       	adc	r18, r1
 79c:	82 2f       	mov	r24, r18
 79e:	76 2f       	mov	r23, r22
 7a0:	6a 2f       	mov	r22, r26
 7a2:	11 24       	eor	r1, r1
 7a4:	9f 57       	subi	r25, 0x7F	; 127
 7a6:	50 40       	sbci	r21, 0x00	; 0
 7a8:	9a f0       	brmi	.+38     	; 0x7d0 <__mulsf3_pse+0x88>
 7aa:	f1 f0       	breq	.+60     	; 0x7e8 <__mulsf3_pse+0xa0>
 7ac:	88 23       	and	r24, r24
 7ae:	4a f0       	brmi	.+18     	; 0x7c2 <__mulsf3_pse+0x7a>
 7b0:	ee 0f       	add	r30, r30
 7b2:	ff 1f       	adc	r31, r31
 7b4:	bb 1f       	adc	r27, r27
 7b6:	66 1f       	adc	r22, r22
 7b8:	77 1f       	adc	r23, r23
 7ba:	88 1f       	adc	r24, r24
 7bc:	91 50       	subi	r25, 0x01	; 1
 7be:	50 40       	sbci	r21, 0x00	; 0
 7c0:	a9 f7       	brne	.-22     	; 0x7ac <__mulsf3_pse+0x64>
 7c2:	9e 3f       	cpi	r25, 0xFE	; 254
 7c4:	51 05       	cpc	r21, r1
 7c6:	80 f0       	brcs	.+32     	; 0x7e8 <__mulsf3_pse+0xa0>
 7c8:	0c 94 3d 03 	jmp	0x67a	; 0x67a <__fp_inf>
 7cc:	0c 94 88 03 	jmp	0x710	; 0x710 <__fp_szero>
 7d0:	5f 3f       	cpi	r21, 0xFF	; 255
 7d2:	e4 f3       	brlt	.-8      	; 0x7cc <__mulsf3_pse+0x84>
 7d4:	98 3e       	cpi	r25, 0xE8	; 232
 7d6:	d4 f3       	brlt	.-12     	; 0x7cc <__mulsf3_pse+0x84>
 7d8:	86 95       	lsr	r24
 7da:	77 95       	ror	r23
 7dc:	67 95       	ror	r22
 7de:	b7 95       	ror	r27
 7e0:	f7 95       	ror	r31
 7e2:	e7 95       	ror	r30
 7e4:	9f 5f       	subi	r25, 0xFF	; 255
 7e6:	c1 f7       	brne	.-16     	; 0x7d8 <__mulsf3_pse+0x90>
 7e8:	fe 2b       	or	r31, r30
 7ea:	88 0f       	add	r24, r24
 7ec:	91 1d       	adc	r25, r1
 7ee:	96 95       	lsr	r25
 7f0:	87 95       	ror	r24
 7f2:	97 f9       	bld	r25, 7
 7f4:	08 95       	ret

000007f6 <printf>:
 7f6:	a0 e0       	ldi	r26, 0x00	; 0
 7f8:	b0 e0       	ldi	r27, 0x00	; 0
 7fa:	e1 e0       	ldi	r30, 0x01	; 1
 7fc:	f4 e0       	ldi	r31, 0x04	; 4
 7fe:	0c 94 e2 06 	jmp	0xdc4	; 0xdc4 <__prologue_saves__+0x20>
 802:	ae 01       	movw	r20, r28
 804:	4b 5f       	subi	r20, 0xFB	; 251
 806:	5f 4f       	sbci	r21, 0xFF	; 255
 808:	fa 01       	movw	r30, r20
 80a:	61 91       	ld	r22, Z+
 80c:	71 91       	ld	r23, Z+
 80e:	af 01       	movw	r20, r30
 810:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <__data_end+0x2>
 814:	90 91 a7 01 	lds	r25, 0x01A7	; 0x8001a7 <__data_end+0x3>
 818:	0e 94 41 04 	call	0x882	; 0x882 <vfprintf>
 81c:	e2 e0       	ldi	r30, 0x02	; 2
 81e:	0c 94 fe 06 	jmp	0xdfc	; 0xdfc <__epilogue_restores__+0x20>

00000822 <puts>:
 822:	0f 93       	push	r16
 824:	1f 93       	push	r17
 826:	cf 93       	push	r28
 828:	df 93       	push	r29
 82a:	e0 91 a6 01 	lds	r30, 0x01A6	; 0x8001a6 <__data_end+0x2>
 82e:	f0 91 a7 01 	lds	r31, 0x01A7	; 0x8001a7 <__data_end+0x3>
 832:	23 81       	ldd	r18, Z+3	; 0x03
 834:	21 ff       	sbrs	r18, 1
 836:	1b c0       	rjmp	.+54     	; 0x86e <puts+0x4c>
 838:	8c 01       	movw	r16, r24
 83a:	d0 e0       	ldi	r29, 0x00	; 0
 83c:	c0 e0       	ldi	r28, 0x00	; 0
 83e:	f8 01       	movw	r30, r16
 840:	81 91       	ld	r24, Z+
 842:	8f 01       	movw	r16, r30
 844:	60 91 a6 01 	lds	r22, 0x01A6	; 0x8001a6 <__data_end+0x2>
 848:	70 91 a7 01 	lds	r23, 0x01A7	; 0x8001a7 <__data_end+0x3>
 84c:	db 01       	movw	r26, r22
 84e:	18 96       	adiw	r26, 0x08	; 8
 850:	ed 91       	ld	r30, X+
 852:	fc 91       	ld	r31, X
 854:	19 97       	sbiw	r26, 0x09	; 9
 856:	88 23       	and	r24, r24
 858:	31 f0       	breq	.+12     	; 0x866 <puts+0x44>
 85a:	09 95       	icall
 85c:	89 2b       	or	r24, r25
 85e:	79 f3       	breq	.-34     	; 0x83e <puts+0x1c>
 860:	df ef       	ldi	r29, 0xFF	; 255
 862:	cf ef       	ldi	r28, 0xFF	; 255
 864:	ec cf       	rjmp	.-40     	; 0x83e <puts+0x1c>
 866:	8a e0       	ldi	r24, 0x0A	; 10
 868:	09 95       	icall
 86a:	89 2b       	or	r24, r25
 86c:	19 f0       	breq	.+6      	; 0x874 <puts+0x52>
 86e:	8f ef       	ldi	r24, 0xFF	; 255
 870:	9f ef       	ldi	r25, 0xFF	; 255
 872:	02 c0       	rjmp	.+4      	; 0x878 <puts+0x56>
 874:	8d 2f       	mov	r24, r29
 876:	9c 2f       	mov	r25, r28
 878:	df 91       	pop	r29
 87a:	cf 91       	pop	r28
 87c:	1f 91       	pop	r17
 87e:	0f 91       	pop	r16
 880:	08 95       	ret

00000882 <vfprintf>:
 882:	ab e0       	ldi	r26, 0x0B	; 11
 884:	b0 e0       	ldi	r27, 0x00	; 0
 886:	e7 e4       	ldi	r30, 0x47	; 71
 888:	f4 e0       	ldi	r31, 0x04	; 4
 88a:	0c 94 d2 06 	jmp	0xda4	; 0xda4 <__prologue_saves__>
 88e:	6c 01       	movw	r12, r24
 890:	7b 01       	movw	r14, r22
 892:	8a 01       	movw	r16, r20
 894:	fc 01       	movw	r30, r24
 896:	17 82       	std	Z+7, r1	; 0x07
 898:	16 82       	std	Z+6, r1	; 0x06
 89a:	83 81       	ldd	r24, Z+3	; 0x03
 89c:	81 ff       	sbrs	r24, 1
 89e:	cc c1       	rjmp	.+920    	; 0xc38 <__stack+0x339>
 8a0:	ce 01       	movw	r24, r28
 8a2:	01 96       	adiw	r24, 0x01	; 1
 8a4:	3c 01       	movw	r6, r24
 8a6:	f6 01       	movw	r30, r12
 8a8:	93 81       	ldd	r25, Z+3	; 0x03
 8aa:	f7 01       	movw	r30, r14
 8ac:	93 fd       	sbrc	r25, 3
 8ae:	85 91       	lpm	r24, Z+
 8b0:	93 ff       	sbrs	r25, 3
 8b2:	81 91       	ld	r24, Z+
 8b4:	7f 01       	movw	r14, r30
 8b6:	88 23       	and	r24, r24
 8b8:	09 f4       	brne	.+2      	; 0x8bc <vfprintf+0x3a>
 8ba:	ba c1       	rjmp	.+884    	; 0xc30 <__stack+0x331>
 8bc:	85 32       	cpi	r24, 0x25	; 37
 8be:	39 f4       	brne	.+14     	; 0x8ce <vfprintf+0x4c>
 8c0:	93 fd       	sbrc	r25, 3
 8c2:	85 91       	lpm	r24, Z+
 8c4:	93 ff       	sbrs	r25, 3
 8c6:	81 91       	ld	r24, Z+
 8c8:	7f 01       	movw	r14, r30
 8ca:	85 32       	cpi	r24, 0x25	; 37
 8cc:	29 f4       	brne	.+10     	; 0x8d8 <vfprintf+0x56>
 8ce:	b6 01       	movw	r22, r12
 8d0:	90 e0       	ldi	r25, 0x00	; 0
 8d2:	0e 94 38 06 	call	0xc70	; 0xc70 <fputc>
 8d6:	e7 cf       	rjmp	.-50     	; 0x8a6 <vfprintf+0x24>
 8d8:	91 2c       	mov	r9, r1
 8da:	21 2c       	mov	r2, r1
 8dc:	31 2c       	mov	r3, r1
 8de:	ff e1       	ldi	r31, 0x1F	; 31
 8e0:	f3 15       	cp	r31, r3
 8e2:	d8 f0       	brcs	.+54     	; 0x91a <__stack+0x1b>
 8e4:	8b 32       	cpi	r24, 0x2B	; 43
 8e6:	79 f0       	breq	.+30     	; 0x906 <__stack+0x7>
 8e8:	38 f4       	brcc	.+14     	; 0x8f8 <vfprintf+0x76>
 8ea:	80 32       	cpi	r24, 0x20	; 32
 8ec:	79 f0       	breq	.+30     	; 0x90c <__stack+0xd>
 8ee:	83 32       	cpi	r24, 0x23	; 35
 8f0:	a1 f4       	brne	.+40     	; 0x91a <__stack+0x1b>
 8f2:	23 2d       	mov	r18, r3
 8f4:	20 61       	ori	r18, 0x10	; 16
 8f6:	1d c0       	rjmp	.+58     	; 0x932 <__stack+0x33>
 8f8:	8d 32       	cpi	r24, 0x2D	; 45
 8fa:	61 f0       	breq	.+24     	; 0x914 <__stack+0x15>
 8fc:	80 33       	cpi	r24, 0x30	; 48
 8fe:	69 f4       	brne	.+26     	; 0x91a <__stack+0x1b>
 900:	23 2d       	mov	r18, r3
 902:	21 60       	ori	r18, 0x01	; 1
 904:	16 c0       	rjmp	.+44     	; 0x932 <__stack+0x33>
 906:	83 2d       	mov	r24, r3
 908:	82 60       	ori	r24, 0x02	; 2
 90a:	38 2e       	mov	r3, r24
 90c:	e3 2d       	mov	r30, r3
 90e:	e4 60       	ori	r30, 0x04	; 4
 910:	3e 2e       	mov	r3, r30
 912:	2a c0       	rjmp	.+84     	; 0x968 <__stack+0x69>
 914:	f3 2d       	mov	r31, r3
 916:	f8 60       	ori	r31, 0x08	; 8
 918:	1d c0       	rjmp	.+58     	; 0x954 <__stack+0x55>
 91a:	37 fc       	sbrc	r3, 7
 91c:	2d c0       	rjmp	.+90     	; 0x978 <__stack+0x79>
 91e:	20 ed       	ldi	r18, 0xD0	; 208
 920:	28 0f       	add	r18, r24
 922:	2a 30       	cpi	r18, 0x0A	; 10
 924:	40 f0       	brcs	.+16     	; 0x936 <__stack+0x37>
 926:	8e 32       	cpi	r24, 0x2E	; 46
 928:	b9 f4       	brne	.+46     	; 0x958 <__stack+0x59>
 92a:	36 fc       	sbrc	r3, 6
 92c:	81 c1       	rjmp	.+770    	; 0xc30 <__stack+0x331>
 92e:	23 2d       	mov	r18, r3
 930:	20 64       	ori	r18, 0x40	; 64
 932:	32 2e       	mov	r3, r18
 934:	19 c0       	rjmp	.+50     	; 0x968 <__stack+0x69>
 936:	36 fe       	sbrs	r3, 6
 938:	06 c0       	rjmp	.+12     	; 0x946 <__stack+0x47>
 93a:	8a e0       	ldi	r24, 0x0A	; 10
 93c:	98 9e       	mul	r9, r24
 93e:	20 0d       	add	r18, r0
 940:	11 24       	eor	r1, r1
 942:	92 2e       	mov	r9, r18
 944:	11 c0       	rjmp	.+34     	; 0x968 <__stack+0x69>
 946:	ea e0       	ldi	r30, 0x0A	; 10
 948:	2e 9e       	mul	r2, r30
 94a:	20 0d       	add	r18, r0
 94c:	11 24       	eor	r1, r1
 94e:	22 2e       	mov	r2, r18
 950:	f3 2d       	mov	r31, r3
 952:	f0 62       	ori	r31, 0x20	; 32
 954:	3f 2e       	mov	r3, r31
 956:	08 c0       	rjmp	.+16     	; 0x968 <__stack+0x69>
 958:	8c 36       	cpi	r24, 0x6C	; 108
 95a:	21 f4       	brne	.+8      	; 0x964 <__stack+0x65>
 95c:	83 2d       	mov	r24, r3
 95e:	80 68       	ori	r24, 0x80	; 128
 960:	38 2e       	mov	r3, r24
 962:	02 c0       	rjmp	.+4      	; 0x968 <__stack+0x69>
 964:	88 36       	cpi	r24, 0x68	; 104
 966:	41 f4       	brne	.+16     	; 0x978 <__stack+0x79>
 968:	f7 01       	movw	r30, r14
 96a:	93 fd       	sbrc	r25, 3
 96c:	85 91       	lpm	r24, Z+
 96e:	93 ff       	sbrs	r25, 3
 970:	81 91       	ld	r24, Z+
 972:	7f 01       	movw	r14, r30
 974:	81 11       	cpse	r24, r1
 976:	b3 cf       	rjmp	.-154    	; 0x8de <vfprintf+0x5c>
 978:	98 2f       	mov	r25, r24
 97a:	9f 7d       	andi	r25, 0xDF	; 223
 97c:	95 54       	subi	r25, 0x45	; 69
 97e:	93 30       	cpi	r25, 0x03	; 3
 980:	28 f4       	brcc	.+10     	; 0x98c <__stack+0x8d>
 982:	0c 5f       	subi	r16, 0xFC	; 252
 984:	1f 4f       	sbci	r17, 0xFF	; 255
 986:	9f e3       	ldi	r25, 0x3F	; 63
 988:	99 83       	std	Y+1, r25	; 0x01
 98a:	0d c0       	rjmp	.+26     	; 0x9a6 <__stack+0xa7>
 98c:	83 36       	cpi	r24, 0x63	; 99
 98e:	31 f0       	breq	.+12     	; 0x99c <__stack+0x9d>
 990:	83 37       	cpi	r24, 0x73	; 115
 992:	71 f0       	breq	.+28     	; 0x9b0 <__stack+0xb1>
 994:	83 35       	cpi	r24, 0x53	; 83
 996:	09 f0       	breq	.+2      	; 0x99a <__stack+0x9b>
 998:	59 c0       	rjmp	.+178    	; 0xa4c <__stack+0x14d>
 99a:	21 c0       	rjmp	.+66     	; 0x9de <__stack+0xdf>
 99c:	f8 01       	movw	r30, r16
 99e:	80 81       	ld	r24, Z
 9a0:	89 83       	std	Y+1, r24	; 0x01
 9a2:	0e 5f       	subi	r16, 0xFE	; 254
 9a4:	1f 4f       	sbci	r17, 0xFF	; 255
 9a6:	88 24       	eor	r8, r8
 9a8:	83 94       	inc	r8
 9aa:	91 2c       	mov	r9, r1
 9ac:	53 01       	movw	r10, r6
 9ae:	13 c0       	rjmp	.+38     	; 0x9d6 <__stack+0xd7>
 9b0:	28 01       	movw	r4, r16
 9b2:	f2 e0       	ldi	r31, 0x02	; 2
 9b4:	4f 0e       	add	r4, r31
 9b6:	51 1c       	adc	r5, r1
 9b8:	f8 01       	movw	r30, r16
 9ba:	a0 80       	ld	r10, Z
 9bc:	b1 80       	ldd	r11, Z+1	; 0x01
 9be:	36 fe       	sbrs	r3, 6
 9c0:	03 c0       	rjmp	.+6      	; 0x9c8 <__stack+0xc9>
 9c2:	69 2d       	mov	r22, r9
 9c4:	70 e0       	ldi	r23, 0x00	; 0
 9c6:	02 c0       	rjmp	.+4      	; 0x9cc <__stack+0xcd>
 9c8:	6f ef       	ldi	r22, 0xFF	; 255
 9ca:	7f ef       	ldi	r23, 0xFF	; 255
 9cc:	c5 01       	movw	r24, r10
 9ce:	0e 94 2d 06 	call	0xc5a	; 0xc5a <strnlen>
 9d2:	4c 01       	movw	r8, r24
 9d4:	82 01       	movw	r16, r4
 9d6:	f3 2d       	mov	r31, r3
 9d8:	ff 77       	andi	r31, 0x7F	; 127
 9da:	3f 2e       	mov	r3, r31
 9dc:	16 c0       	rjmp	.+44     	; 0xa0a <__stack+0x10b>
 9de:	28 01       	movw	r4, r16
 9e0:	22 e0       	ldi	r18, 0x02	; 2
 9e2:	42 0e       	add	r4, r18
 9e4:	51 1c       	adc	r5, r1
 9e6:	f8 01       	movw	r30, r16
 9e8:	a0 80       	ld	r10, Z
 9ea:	b1 80       	ldd	r11, Z+1	; 0x01
 9ec:	36 fe       	sbrs	r3, 6
 9ee:	03 c0       	rjmp	.+6      	; 0x9f6 <__stack+0xf7>
 9f0:	69 2d       	mov	r22, r9
 9f2:	70 e0       	ldi	r23, 0x00	; 0
 9f4:	02 c0       	rjmp	.+4      	; 0x9fa <__stack+0xfb>
 9f6:	6f ef       	ldi	r22, 0xFF	; 255
 9f8:	7f ef       	ldi	r23, 0xFF	; 255
 9fa:	c5 01       	movw	r24, r10
 9fc:	0e 94 22 06 	call	0xc44	; 0xc44 <strnlen_P>
 a00:	4c 01       	movw	r8, r24
 a02:	f3 2d       	mov	r31, r3
 a04:	f0 68       	ori	r31, 0x80	; 128
 a06:	3f 2e       	mov	r3, r31
 a08:	82 01       	movw	r16, r4
 a0a:	33 fc       	sbrc	r3, 3
 a0c:	1b c0       	rjmp	.+54     	; 0xa44 <__stack+0x145>
 a0e:	82 2d       	mov	r24, r2
 a10:	90 e0       	ldi	r25, 0x00	; 0
 a12:	88 16       	cp	r8, r24
 a14:	99 06       	cpc	r9, r25
 a16:	b0 f4       	brcc	.+44     	; 0xa44 <__stack+0x145>
 a18:	b6 01       	movw	r22, r12
 a1a:	80 e2       	ldi	r24, 0x20	; 32
 a1c:	90 e0       	ldi	r25, 0x00	; 0
 a1e:	0e 94 38 06 	call	0xc70	; 0xc70 <fputc>
 a22:	2a 94       	dec	r2
 a24:	f4 cf       	rjmp	.-24     	; 0xa0e <__stack+0x10f>
 a26:	f5 01       	movw	r30, r10
 a28:	37 fc       	sbrc	r3, 7
 a2a:	85 91       	lpm	r24, Z+
 a2c:	37 fe       	sbrs	r3, 7
 a2e:	81 91       	ld	r24, Z+
 a30:	5f 01       	movw	r10, r30
 a32:	b6 01       	movw	r22, r12
 a34:	90 e0       	ldi	r25, 0x00	; 0
 a36:	0e 94 38 06 	call	0xc70	; 0xc70 <fputc>
 a3a:	21 10       	cpse	r2, r1
 a3c:	2a 94       	dec	r2
 a3e:	21 e0       	ldi	r18, 0x01	; 1
 a40:	82 1a       	sub	r8, r18
 a42:	91 08       	sbc	r9, r1
 a44:	81 14       	cp	r8, r1
 a46:	91 04       	cpc	r9, r1
 a48:	71 f7       	brne	.-36     	; 0xa26 <__stack+0x127>
 a4a:	e8 c0       	rjmp	.+464    	; 0xc1c <__stack+0x31d>
 a4c:	84 36       	cpi	r24, 0x64	; 100
 a4e:	11 f0       	breq	.+4      	; 0xa54 <__stack+0x155>
 a50:	89 36       	cpi	r24, 0x69	; 105
 a52:	41 f5       	brne	.+80     	; 0xaa4 <__stack+0x1a5>
 a54:	f8 01       	movw	r30, r16
 a56:	37 fe       	sbrs	r3, 7
 a58:	07 c0       	rjmp	.+14     	; 0xa68 <__stack+0x169>
 a5a:	60 81       	ld	r22, Z
 a5c:	71 81       	ldd	r23, Z+1	; 0x01
 a5e:	82 81       	ldd	r24, Z+2	; 0x02
 a60:	93 81       	ldd	r25, Z+3	; 0x03
 a62:	0c 5f       	subi	r16, 0xFC	; 252
 a64:	1f 4f       	sbci	r17, 0xFF	; 255
 a66:	08 c0       	rjmp	.+16     	; 0xa78 <__stack+0x179>
 a68:	60 81       	ld	r22, Z
 a6a:	71 81       	ldd	r23, Z+1	; 0x01
 a6c:	07 2e       	mov	r0, r23
 a6e:	00 0c       	add	r0, r0
 a70:	88 0b       	sbc	r24, r24
 a72:	99 0b       	sbc	r25, r25
 a74:	0e 5f       	subi	r16, 0xFE	; 254
 a76:	1f 4f       	sbci	r17, 0xFF	; 255
 a78:	f3 2d       	mov	r31, r3
 a7a:	ff 76       	andi	r31, 0x6F	; 111
 a7c:	3f 2e       	mov	r3, r31
 a7e:	97 ff       	sbrs	r25, 7
 a80:	09 c0       	rjmp	.+18     	; 0xa94 <__stack+0x195>
 a82:	90 95       	com	r25
 a84:	80 95       	com	r24
 a86:	70 95       	com	r23
 a88:	61 95       	neg	r22
 a8a:	7f 4f       	sbci	r23, 0xFF	; 255
 a8c:	8f 4f       	sbci	r24, 0xFF	; 255
 a8e:	9f 4f       	sbci	r25, 0xFF	; 255
 a90:	f0 68       	ori	r31, 0x80	; 128
 a92:	3f 2e       	mov	r3, r31
 a94:	2a e0       	ldi	r18, 0x0A	; 10
 a96:	30 e0       	ldi	r19, 0x00	; 0
 a98:	a3 01       	movw	r20, r6
 a9a:	0e 94 74 06 	call	0xce8	; 0xce8 <__ultoa_invert>
 a9e:	88 2e       	mov	r8, r24
 aa0:	86 18       	sub	r8, r6
 aa2:	45 c0       	rjmp	.+138    	; 0xb2e <__stack+0x22f>
 aa4:	85 37       	cpi	r24, 0x75	; 117
 aa6:	31 f4       	brne	.+12     	; 0xab4 <__stack+0x1b5>
 aa8:	23 2d       	mov	r18, r3
 aaa:	2f 7e       	andi	r18, 0xEF	; 239
 aac:	b2 2e       	mov	r11, r18
 aae:	2a e0       	ldi	r18, 0x0A	; 10
 ab0:	30 e0       	ldi	r19, 0x00	; 0
 ab2:	25 c0       	rjmp	.+74     	; 0xafe <__stack+0x1ff>
 ab4:	93 2d       	mov	r25, r3
 ab6:	99 7f       	andi	r25, 0xF9	; 249
 ab8:	b9 2e       	mov	r11, r25
 aba:	8f 36       	cpi	r24, 0x6F	; 111
 abc:	c1 f0       	breq	.+48     	; 0xaee <__stack+0x1ef>
 abe:	18 f4       	brcc	.+6      	; 0xac6 <__stack+0x1c7>
 ac0:	88 35       	cpi	r24, 0x58	; 88
 ac2:	79 f0       	breq	.+30     	; 0xae2 <__stack+0x1e3>
 ac4:	b5 c0       	rjmp	.+362    	; 0xc30 <__stack+0x331>
 ac6:	80 37       	cpi	r24, 0x70	; 112
 ac8:	19 f0       	breq	.+6      	; 0xad0 <__stack+0x1d1>
 aca:	88 37       	cpi	r24, 0x78	; 120
 acc:	21 f0       	breq	.+8      	; 0xad6 <__stack+0x1d7>
 ace:	b0 c0       	rjmp	.+352    	; 0xc30 <__stack+0x331>
 ad0:	e9 2f       	mov	r30, r25
 ad2:	e0 61       	ori	r30, 0x10	; 16
 ad4:	be 2e       	mov	r11, r30
 ad6:	b4 fe       	sbrs	r11, 4
 ad8:	0d c0       	rjmp	.+26     	; 0xaf4 <__stack+0x1f5>
 ada:	fb 2d       	mov	r31, r11
 adc:	f4 60       	ori	r31, 0x04	; 4
 ade:	bf 2e       	mov	r11, r31
 ae0:	09 c0       	rjmp	.+18     	; 0xaf4 <__stack+0x1f5>
 ae2:	34 fe       	sbrs	r3, 4
 ae4:	0a c0       	rjmp	.+20     	; 0xafa <__stack+0x1fb>
 ae6:	29 2f       	mov	r18, r25
 ae8:	26 60       	ori	r18, 0x06	; 6
 aea:	b2 2e       	mov	r11, r18
 aec:	06 c0       	rjmp	.+12     	; 0xafa <__stack+0x1fb>
 aee:	28 e0       	ldi	r18, 0x08	; 8
 af0:	30 e0       	ldi	r19, 0x00	; 0
 af2:	05 c0       	rjmp	.+10     	; 0xafe <__stack+0x1ff>
 af4:	20 e1       	ldi	r18, 0x10	; 16
 af6:	30 e0       	ldi	r19, 0x00	; 0
 af8:	02 c0       	rjmp	.+4      	; 0xafe <__stack+0x1ff>
 afa:	20 e1       	ldi	r18, 0x10	; 16
 afc:	32 e0       	ldi	r19, 0x02	; 2
 afe:	f8 01       	movw	r30, r16
 b00:	b7 fe       	sbrs	r11, 7
 b02:	07 c0       	rjmp	.+14     	; 0xb12 <__stack+0x213>
 b04:	60 81       	ld	r22, Z
 b06:	71 81       	ldd	r23, Z+1	; 0x01
 b08:	82 81       	ldd	r24, Z+2	; 0x02
 b0a:	93 81       	ldd	r25, Z+3	; 0x03
 b0c:	0c 5f       	subi	r16, 0xFC	; 252
 b0e:	1f 4f       	sbci	r17, 0xFF	; 255
 b10:	06 c0       	rjmp	.+12     	; 0xb1e <__stack+0x21f>
 b12:	60 81       	ld	r22, Z
 b14:	71 81       	ldd	r23, Z+1	; 0x01
 b16:	80 e0       	ldi	r24, 0x00	; 0
 b18:	90 e0       	ldi	r25, 0x00	; 0
 b1a:	0e 5f       	subi	r16, 0xFE	; 254
 b1c:	1f 4f       	sbci	r17, 0xFF	; 255
 b1e:	a3 01       	movw	r20, r6
 b20:	0e 94 74 06 	call	0xce8	; 0xce8 <__ultoa_invert>
 b24:	88 2e       	mov	r8, r24
 b26:	86 18       	sub	r8, r6
 b28:	fb 2d       	mov	r31, r11
 b2a:	ff 77       	andi	r31, 0x7F	; 127
 b2c:	3f 2e       	mov	r3, r31
 b2e:	36 fe       	sbrs	r3, 6
 b30:	0d c0       	rjmp	.+26     	; 0xb4c <__stack+0x24d>
 b32:	23 2d       	mov	r18, r3
 b34:	2e 7f       	andi	r18, 0xFE	; 254
 b36:	a2 2e       	mov	r10, r18
 b38:	89 14       	cp	r8, r9
 b3a:	58 f4       	brcc	.+22     	; 0xb52 <__stack+0x253>
 b3c:	34 fe       	sbrs	r3, 4
 b3e:	0b c0       	rjmp	.+22     	; 0xb56 <__stack+0x257>
 b40:	32 fc       	sbrc	r3, 2
 b42:	09 c0       	rjmp	.+18     	; 0xb56 <__stack+0x257>
 b44:	83 2d       	mov	r24, r3
 b46:	8e 7e       	andi	r24, 0xEE	; 238
 b48:	a8 2e       	mov	r10, r24
 b4a:	05 c0       	rjmp	.+10     	; 0xb56 <__stack+0x257>
 b4c:	b8 2c       	mov	r11, r8
 b4e:	a3 2c       	mov	r10, r3
 b50:	03 c0       	rjmp	.+6      	; 0xb58 <__stack+0x259>
 b52:	b8 2c       	mov	r11, r8
 b54:	01 c0       	rjmp	.+2      	; 0xb58 <__stack+0x259>
 b56:	b9 2c       	mov	r11, r9
 b58:	a4 fe       	sbrs	r10, 4
 b5a:	0f c0       	rjmp	.+30     	; 0xb7a <__stack+0x27b>
 b5c:	fe 01       	movw	r30, r28
 b5e:	e8 0d       	add	r30, r8
 b60:	f1 1d       	adc	r31, r1
 b62:	80 81       	ld	r24, Z
 b64:	80 33       	cpi	r24, 0x30	; 48
 b66:	21 f4       	brne	.+8      	; 0xb70 <__stack+0x271>
 b68:	9a 2d       	mov	r25, r10
 b6a:	99 7e       	andi	r25, 0xE9	; 233
 b6c:	a9 2e       	mov	r10, r25
 b6e:	09 c0       	rjmp	.+18     	; 0xb82 <__stack+0x283>
 b70:	a2 fe       	sbrs	r10, 2
 b72:	06 c0       	rjmp	.+12     	; 0xb80 <__stack+0x281>
 b74:	b3 94       	inc	r11
 b76:	b3 94       	inc	r11
 b78:	04 c0       	rjmp	.+8      	; 0xb82 <__stack+0x283>
 b7a:	8a 2d       	mov	r24, r10
 b7c:	86 78       	andi	r24, 0x86	; 134
 b7e:	09 f0       	breq	.+2      	; 0xb82 <__stack+0x283>
 b80:	b3 94       	inc	r11
 b82:	a3 fc       	sbrc	r10, 3
 b84:	11 c0       	rjmp	.+34     	; 0xba8 <__stack+0x2a9>
 b86:	a0 fe       	sbrs	r10, 0
 b88:	06 c0       	rjmp	.+12     	; 0xb96 <__stack+0x297>
 b8a:	b2 14       	cp	r11, r2
 b8c:	88 f4       	brcc	.+34     	; 0xbb0 <__stack+0x2b1>
 b8e:	28 0c       	add	r2, r8
 b90:	92 2c       	mov	r9, r2
 b92:	9b 18       	sub	r9, r11
 b94:	0e c0       	rjmp	.+28     	; 0xbb2 <__stack+0x2b3>
 b96:	b2 14       	cp	r11, r2
 b98:	60 f4       	brcc	.+24     	; 0xbb2 <__stack+0x2b3>
 b9a:	b6 01       	movw	r22, r12
 b9c:	80 e2       	ldi	r24, 0x20	; 32
 b9e:	90 e0       	ldi	r25, 0x00	; 0
 ba0:	0e 94 38 06 	call	0xc70	; 0xc70 <fputc>
 ba4:	b3 94       	inc	r11
 ba6:	f7 cf       	rjmp	.-18     	; 0xb96 <__stack+0x297>
 ba8:	b2 14       	cp	r11, r2
 baa:	18 f4       	brcc	.+6      	; 0xbb2 <__stack+0x2b3>
 bac:	2b 18       	sub	r2, r11
 bae:	02 c0       	rjmp	.+4      	; 0xbb4 <__stack+0x2b5>
 bb0:	98 2c       	mov	r9, r8
 bb2:	21 2c       	mov	r2, r1
 bb4:	a4 fe       	sbrs	r10, 4
 bb6:	10 c0       	rjmp	.+32     	; 0xbd8 <__stack+0x2d9>
 bb8:	b6 01       	movw	r22, r12
 bba:	80 e3       	ldi	r24, 0x30	; 48
 bbc:	90 e0       	ldi	r25, 0x00	; 0
 bbe:	0e 94 38 06 	call	0xc70	; 0xc70 <fputc>
 bc2:	a2 fe       	sbrs	r10, 2
 bc4:	17 c0       	rjmp	.+46     	; 0xbf4 <__stack+0x2f5>
 bc6:	a1 fc       	sbrc	r10, 1
 bc8:	03 c0       	rjmp	.+6      	; 0xbd0 <__stack+0x2d1>
 bca:	88 e7       	ldi	r24, 0x78	; 120
 bcc:	90 e0       	ldi	r25, 0x00	; 0
 bce:	02 c0       	rjmp	.+4      	; 0xbd4 <__stack+0x2d5>
 bd0:	88 e5       	ldi	r24, 0x58	; 88
 bd2:	90 e0       	ldi	r25, 0x00	; 0
 bd4:	b6 01       	movw	r22, r12
 bd6:	0c c0       	rjmp	.+24     	; 0xbf0 <__stack+0x2f1>
 bd8:	8a 2d       	mov	r24, r10
 bda:	86 78       	andi	r24, 0x86	; 134
 bdc:	59 f0       	breq	.+22     	; 0xbf4 <__stack+0x2f5>
 bde:	a1 fe       	sbrs	r10, 1
 be0:	02 c0       	rjmp	.+4      	; 0xbe6 <__stack+0x2e7>
 be2:	8b e2       	ldi	r24, 0x2B	; 43
 be4:	01 c0       	rjmp	.+2      	; 0xbe8 <__stack+0x2e9>
 be6:	80 e2       	ldi	r24, 0x20	; 32
 be8:	a7 fc       	sbrc	r10, 7
 bea:	8d e2       	ldi	r24, 0x2D	; 45
 bec:	b6 01       	movw	r22, r12
 bee:	90 e0       	ldi	r25, 0x00	; 0
 bf0:	0e 94 38 06 	call	0xc70	; 0xc70 <fputc>
 bf4:	89 14       	cp	r8, r9
 bf6:	38 f4       	brcc	.+14     	; 0xc06 <__stack+0x307>
 bf8:	b6 01       	movw	r22, r12
 bfa:	80 e3       	ldi	r24, 0x30	; 48
 bfc:	90 e0       	ldi	r25, 0x00	; 0
 bfe:	0e 94 38 06 	call	0xc70	; 0xc70 <fputc>
 c02:	9a 94       	dec	r9
 c04:	f7 cf       	rjmp	.-18     	; 0xbf4 <__stack+0x2f5>
 c06:	8a 94       	dec	r8
 c08:	f3 01       	movw	r30, r6
 c0a:	e8 0d       	add	r30, r8
 c0c:	f1 1d       	adc	r31, r1
 c0e:	80 81       	ld	r24, Z
 c10:	b6 01       	movw	r22, r12
 c12:	90 e0       	ldi	r25, 0x00	; 0
 c14:	0e 94 38 06 	call	0xc70	; 0xc70 <fputc>
 c18:	81 10       	cpse	r8, r1
 c1a:	f5 cf       	rjmp	.-22     	; 0xc06 <__stack+0x307>
 c1c:	22 20       	and	r2, r2
 c1e:	09 f4       	brne	.+2      	; 0xc22 <__stack+0x323>
 c20:	42 ce       	rjmp	.-892    	; 0x8a6 <vfprintf+0x24>
 c22:	b6 01       	movw	r22, r12
 c24:	80 e2       	ldi	r24, 0x20	; 32
 c26:	90 e0       	ldi	r25, 0x00	; 0
 c28:	0e 94 38 06 	call	0xc70	; 0xc70 <fputc>
 c2c:	2a 94       	dec	r2
 c2e:	f6 cf       	rjmp	.-20     	; 0xc1c <__stack+0x31d>
 c30:	f6 01       	movw	r30, r12
 c32:	86 81       	ldd	r24, Z+6	; 0x06
 c34:	97 81       	ldd	r25, Z+7	; 0x07
 c36:	02 c0       	rjmp	.+4      	; 0xc3c <__stack+0x33d>
 c38:	8f ef       	ldi	r24, 0xFF	; 255
 c3a:	9f ef       	ldi	r25, 0xFF	; 255
 c3c:	2b 96       	adiw	r28, 0x0b	; 11
 c3e:	e2 e1       	ldi	r30, 0x12	; 18
 c40:	0c 94 ee 06 	jmp	0xddc	; 0xddc <__epilogue_restores__>

00000c44 <strnlen_P>:
 c44:	fc 01       	movw	r30, r24
 c46:	05 90       	lpm	r0, Z+
 c48:	61 50       	subi	r22, 0x01	; 1
 c4a:	70 40       	sbci	r23, 0x00	; 0
 c4c:	01 10       	cpse	r0, r1
 c4e:	d8 f7       	brcc	.-10     	; 0xc46 <strnlen_P+0x2>
 c50:	80 95       	com	r24
 c52:	90 95       	com	r25
 c54:	8e 0f       	add	r24, r30
 c56:	9f 1f       	adc	r25, r31
 c58:	08 95       	ret

00000c5a <strnlen>:
 c5a:	fc 01       	movw	r30, r24
 c5c:	61 50       	subi	r22, 0x01	; 1
 c5e:	70 40       	sbci	r23, 0x00	; 0
 c60:	01 90       	ld	r0, Z+
 c62:	01 10       	cpse	r0, r1
 c64:	d8 f7       	brcc	.-10     	; 0xc5c <strnlen+0x2>
 c66:	80 95       	com	r24
 c68:	90 95       	com	r25
 c6a:	8e 0f       	add	r24, r30
 c6c:	9f 1f       	adc	r25, r31
 c6e:	08 95       	ret

00000c70 <fputc>:
 c70:	0f 93       	push	r16
 c72:	1f 93       	push	r17
 c74:	cf 93       	push	r28
 c76:	df 93       	push	r29
 c78:	fb 01       	movw	r30, r22
 c7a:	23 81       	ldd	r18, Z+3	; 0x03
 c7c:	21 fd       	sbrc	r18, 1
 c7e:	03 c0       	rjmp	.+6      	; 0xc86 <fputc+0x16>
 c80:	8f ef       	ldi	r24, 0xFF	; 255
 c82:	9f ef       	ldi	r25, 0xFF	; 255
 c84:	2c c0       	rjmp	.+88     	; 0xcde <fputc+0x6e>
 c86:	22 ff       	sbrs	r18, 2
 c88:	16 c0       	rjmp	.+44     	; 0xcb6 <fputc+0x46>
 c8a:	46 81       	ldd	r20, Z+6	; 0x06
 c8c:	57 81       	ldd	r21, Z+7	; 0x07
 c8e:	24 81       	ldd	r18, Z+4	; 0x04
 c90:	35 81       	ldd	r19, Z+5	; 0x05
 c92:	42 17       	cp	r20, r18
 c94:	53 07       	cpc	r21, r19
 c96:	44 f4       	brge	.+16     	; 0xca8 <fputc+0x38>
 c98:	a0 81       	ld	r26, Z
 c9a:	b1 81       	ldd	r27, Z+1	; 0x01
 c9c:	9d 01       	movw	r18, r26
 c9e:	2f 5f       	subi	r18, 0xFF	; 255
 ca0:	3f 4f       	sbci	r19, 0xFF	; 255
 ca2:	31 83       	std	Z+1, r19	; 0x01
 ca4:	20 83       	st	Z, r18
 ca6:	8c 93       	st	X, r24
 ca8:	26 81       	ldd	r18, Z+6	; 0x06
 caa:	37 81       	ldd	r19, Z+7	; 0x07
 cac:	2f 5f       	subi	r18, 0xFF	; 255
 cae:	3f 4f       	sbci	r19, 0xFF	; 255
 cb0:	37 83       	std	Z+7, r19	; 0x07
 cb2:	26 83       	std	Z+6, r18	; 0x06
 cb4:	14 c0       	rjmp	.+40     	; 0xcde <fputc+0x6e>
 cb6:	8b 01       	movw	r16, r22
 cb8:	ec 01       	movw	r28, r24
 cba:	fb 01       	movw	r30, r22
 cbc:	00 84       	ldd	r0, Z+8	; 0x08
 cbe:	f1 85       	ldd	r31, Z+9	; 0x09
 cc0:	e0 2d       	mov	r30, r0
 cc2:	09 95       	icall
 cc4:	89 2b       	or	r24, r25
 cc6:	e1 f6       	brne	.-72     	; 0xc80 <fputc+0x10>
 cc8:	d8 01       	movw	r26, r16
 cca:	16 96       	adiw	r26, 0x06	; 6
 ccc:	8d 91       	ld	r24, X+
 cce:	9c 91       	ld	r25, X
 cd0:	17 97       	sbiw	r26, 0x07	; 7
 cd2:	01 96       	adiw	r24, 0x01	; 1
 cd4:	17 96       	adiw	r26, 0x07	; 7
 cd6:	9c 93       	st	X, r25
 cd8:	8e 93       	st	-X, r24
 cda:	16 97       	sbiw	r26, 0x06	; 6
 cdc:	ce 01       	movw	r24, r28
 cde:	df 91       	pop	r29
 ce0:	cf 91       	pop	r28
 ce2:	1f 91       	pop	r17
 ce4:	0f 91       	pop	r16
 ce6:	08 95       	ret

00000ce8 <__ultoa_invert>:
 ce8:	fa 01       	movw	r30, r20
 cea:	aa 27       	eor	r26, r26
 cec:	28 30       	cpi	r18, 0x08	; 8
 cee:	51 f1       	breq	.+84     	; 0xd44 <__ultoa_invert+0x5c>
 cf0:	20 31       	cpi	r18, 0x10	; 16
 cf2:	81 f1       	breq	.+96     	; 0xd54 <__ultoa_invert+0x6c>
 cf4:	e8 94       	clt
 cf6:	6f 93       	push	r22
 cf8:	6e 7f       	andi	r22, 0xFE	; 254
 cfa:	6e 5f       	subi	r22, 0xFE	; 254
 cfc:	7f 4f       	sbci	r23, 0xFF	; 255
 cfe:	8f 4f       	sbci	r24, 0xFF	; 255
 d00:	9f 4f       	sbci	r25, 0xFF	; 255
 d02:	af 4f       	sbci	r26, 0xFF	; 255
 d04:	b1 e0       	ldi	r27, 0x01	; 1
 d06:	3e d0       	rcall	.+124    	; 0xd84 <__ultoa_invert+0x9c>
 d08:	b4 e0       	ldi	r27, 0x04	; 4
 d0a:	3c d0       	rcall	.+120    	; 0xd84 <__ultoa_invert+0x9c>
 d0c:	67 0f       	add	r22, r23
 d0e:	78 1f       	adc	r23, r24
 d10:	89 1f       	adc	r24, r25
 d12:	9a 1f       	adc	r25, r26
 d14:	a1 1d       	adc	r26, r1
 d16:	68 0f       	add	r22, r24
 d18:	79 1f       	adc	r23, r25
 d1a:	8a 1f       	adc	r24, r26
 d1c:	91 1d       	adc	r25, r1
 d1e:	a1 1d       	adc	r26, r1
 d20:	6a 0f       	add	r22, r26
 d22:	71 1d       	adc	r23, r1
 d24:	81 1d       	adc	r24, r1
 d26:	91 1d       	adc	r25, r1
 d28:	a1 1d       	adc	r26, r1
 d2a:	20 d0       	rcall	.+64     	; 0xd6c <__ultoa_invert+0x84>
 d2c:	09 f4       	brne	.+2      	; 0xd30 <__ultoa_invert+0x48>
 d2e:	68 94       	set
 d30:	3f 91       	pop	r19
 d32:	2a e0       	ldi	r18, 0x0A	; 10
 d34:	26 9f       	mul	r18, r22
 d36:	11 24       	eor	r1, r1
 d38:	30 19       	sub	r19, r0
 d3a:	30 5d       	subi	r19, 0xD0	; 208
 d3c:	31 93       	st	Z+, r19
 d3e:	de f6       	brtc	.-74     	; 0xcf6 <__ultoa_invert+0xe>
 d40:	cf 01       	movw	r24, r30
 d42:	08 95       	ret
 d44:	46 2f       	mov	r20, r22
 d46:	47 70       	andi	r20, 0x07	; 7
 d48:	40 5d       	subi	r20, 0xD0	; 208
 d4a:	41 93       	st	Z+, r20
 d4c:	b3 e0       	ldi	r27, 0x03	; 3
 d4e:	0f d0       	rcall	.+30     	; 0xd6e <__ultoa_invert+0x86>
 d50:	c9 f7       	brne	.-14     	; 0xd44 <__ultoa_invert+0x5c>
 d52:	f6 cf       	rjmp	.-20     	; 0xd40 <__ultoa_invert+0x58>
 d54:	46 2f       	mov	r20, r22
 d56:	4f 70       	andi	r20, 0x0F	; 15
 d58:	40 5d       	subi	r20, 0xD0	; 208
 d5a:	4a 33       	cpi	r20, 0x3A	; 58
 d5c:	18 f0       	brcs	.+6      	; 0xd64 <__ultoa_invert+0x7c>
 d5e:	49 5d       	subi	r20, 0xD9	; 217
 d60:	31 fd       	sbrc	r19, 1
 d62:	40 52       	subi	r20, 0x20	; 32
 d64:	41 93       	st	Z+, r20
 d66:	02 d0       	rcall	.+4      	; 0xd6c <__ultoa_invert+0x84>
 d68:	a9 f7       	brne	.-22     	; 0xd54 <__ultoa_invert+0x6c>
 d6a:	ea cf       	rjmp	.-44     	; 0xd40 <__ultoa_invert+0x58>
 d6c:	b4 e0       	ldi	r27, 0x04	; 4
 d6e:	a6 95       	lsr	r26
 d70:	97 95       	ror	r25
 d72:	87 95       	ror	r24
 d74:	77 95       	ror	r23
 d76:	67 95       	ror	r22
 d78:	ba 95       	dec	r27
 d7a:	c9 f7       	brne	.-14     	; 0xd6e <__ultoa_invert+0x86>
 d7c:	00 97       	sbiw	r24, 0x00	; 0
 d7e:	61 05       	cpc	r22, r1
 d80:	71 05       	cpc	r23, r1
 d82:	08 95       	ret
 d84:	9b 01       	movw	r18, r22
 d86:	ac 01       	movw	r20, r24
 d88:	0a 2e       	mov	r0, r26
 d8a:	06 94       	lsr	r0
 d8c:	57 95       	ror	r21
 d8e:	47 95       	ror	r20
 d90:	37 95       	ror	r19
 d92:	27 95       	ror	r18
 d94:	ba 95       	dec	r27
 d96:	c9 f7       	brne	.-14     	; 0xd8a <__ultoa_invert+0xa2>
 d98:	62 0f       	add	r22, r18
 d9a:	73 1f       	adc	r23, r19
 d9c:	84 1f       	adc	r24, r20
 d9e:	95 1f       	adc	r25, r21
 da0:	a0 1d       	adc	r26, r0
 da2:	08 95       	ret

00000da4 <__prologue_saves__>:
 da4:	2f 92       	push	r2
 da6:	3f 92       	push	r3
 da8:	4f 92       	push	r4
 daa:	5f 92       	push	r5
 dac:	6f 92       	push	r6
 dae:	7f 92       	push	r7
 db0:	8f 92       	push	r8
 db2:	9f 92       	push	r9
 db4:	af 92       	push	r10
 db6:	bf 92       	push	r11
 db8:	cf 92       	push	r12
 dba:	df 92       	push	r13
 dbc:	ef 92       	push	r14
 dbe:	ff 92       	push	r15
 dc0:	0f 93       	push	r16
 dc2:	1f 93       	push	r17
 dc4:	cf 93       	push	r28
 dc6:	df 93       	push	r29
 dc8:	cd b7       	in	r28, 0x3d	; 61
 dca:	de b7       	in	r29, 0x3e	; 62
 dcc:	ca 1b       	sub	r28, r26
 dce:	db 0b       	sbc	r29, r27
 dd0:	0f b6       	in	r0, 0x3f	; 63
 dd2:	f8 94       	cli
 dd4:	de bf       	out	0x3e, r29	; 62
 dd6:	0f be       	out	0x3f, r0	; 63
 dd8:	cd bf       	out	0x3d, r28	; 61
 dda:	09 94       	ijmp

00000ddc <__epilogue_restores__>:
 ddc:	2a 88       	ldd	r2, Y+18	; 0x12
 dde:	39 88       	ldd	r3, Y+17	; 0x11
 de0:	48 88       	ldd	r4, Y+16	; 0x10
 de2:	5f 84       	ldd	r5, Y+15	; 0x0f
 de4:	6e 84       	ldd	r6, Y+14	; 0x0e
 de6:	7d 84       	ldd	r7, Y+13	; 0x0d
 de8:	8c 84       	ldd	r8, Y+12	; 0x0c
 dea:	9b 84       	ldd	r9, Y+11	; 0x0b
 dec:	aa 84       	ldd	r10, Y+10	; 0x0a
 dee:	b9 84       	ldd	r11, Y+9	; 0x09
 df0:	c8 84       	ldd	r12, Y+8	; 0x08
 df2:	df 80       	ldd	r13, Y+7	; 0x07
 df4:	ee 80       	ldd	r14, Y+6	; 0x06
 df6:	fd 80       	ldd	r15, Y+5	; 0x05
 df8:	0c 81       	ldd	r16, Y+4	; 0x04
 dfa:	1b 81       	ldd	r17, Y+3	; 0x03
 dfc:	aa 81       	ldd	r26, Y+2	; 0x02
 dfe:	b9 81       	ldd	r27, Y+1	; 0x01
 e00:	ce 0f       	add	r28, r30
 e02:	d1 1d       	adc	r29, r1
 e04:	0f b6       	in	r0, 0x3f	; 63
 e06:	f8 94       	cli
 e08:	de bf       	out	0x3e, r29	; 62
 e0a:	0f be       	out	0x3f, r0	; 63
 e0c:	cd bf       	out	0x3d, r28	; 61
 e0e:	ed 01       	movw	r28, r26
 e10:	08 95       	ret

00000e12 <_exit>:
 e12:	f8 94       	cli

00000e14 <__stop_program>:
 e14:	ff cf       	rjmp	.-2      	; 0xe14 <__stop_program>
